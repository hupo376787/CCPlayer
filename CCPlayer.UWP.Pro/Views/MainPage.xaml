<Page
    x:Name="MPage"
    x:Class="CCPlayer.UWP.Views.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:CCPlayer.UWP.Views"
    xmlns:cuvc="using:CCPlayer.UWP.Views.Controls"
    xmlns:cuxc="using:CCPlayer.UWP.Xaml.Controls"
    xmlns:data="using:CCPlayer.UWP.Models"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:st="using:CCPlayer.UWP.StateTriggers"
    xmlns:converter="using:CCPlayer.UWP.Converters"
    xmlns:ap="using:AppPromo"
    mc:Ignorable="d"
    NavigationCacheMode="Required"
    DataContext="{Binding Main, Source={StaticResource Locator}}"
    RequestedTheme="{Binding Settings.General.ElementTheme}">

    <Page.Transitions>
        <TransitionCollection>
            <NavigationThemeTransition>
                <NavigationThemeTransition.DefaultNavigationTransitionInfo>
                    <ContinuumNavigationTransitionInfo />
                </NavigationThemeTransition.DefaultNavigationTransitionInfo>
            </NavigationThemeTransition>
        </TransitionCollection>
    </Page.Transitions>

    <Page.Resources>
        <x:Double x:Key="OpenPaneLength">240</x:Double>
        <x:Double x:Key="CompactPaneLength">48</x:Double>

        <converter:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

        <!-- Style for Windows.UI.Xaml.Controls.ListViewItem -->
        <Style TargetType="ListViewItem" x:Key="ListViewItemExpanded">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
            <Setter Property="TabNavigation" Value="Local"/>
            <Setter Property="IsHoldingEnabled" Value="True"/>
            <Setter Property="Padding" Value="12,0,12,0"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}"/>
            <Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}"/>
            <Setter Property="UseSystemFocusVisuals" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Grid x:Name="ContentBorder"
                              Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="BorderBackground"
                                                             Storyboard.TargetProperty="Opacity"
                                                             Duration="0"
                                                             To="1"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListLowBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="BorderBackground"
                                                             Storyboard.TargetProperty="Opacity"
                                                             Duration="0"
                                                             To="1"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListMediumBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="MultiSelectCheck"
                                                             Storyboard.TargetProperty="Opacity"
                                                             Duration="0:0:0"
                                                             To="1"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlForegroundAccentBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectSquare" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlForegroundAccentBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOverSelected">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="MultiSelectCheck"
                                                             Storyboard.TargetProperty="Opacity"
                                                             Duration="0:0:0"
                                                             To="1"/>
                                            <DoubleAnimation Storyboard.TargetName="BorderBackground"
                                                             Storyboard.TargetProperty="Opacity"
                                                             Duration="0"
                                                             To="1"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListLowBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlForegroundAccentBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectSquare" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlForegroundAccentBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PressedSelected">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="BorderBackground"
                                                             Storyboard.TargetProperty="Opacity"
                                                             Duration="0"
                                                             To="1"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListMediumBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlForegroundAccentBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectSquare" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlForegroundAccentBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DisabledStates">
                                    <VisualState x:Name="Enabled"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ContentBorder"
                                                             Storyboard.TargetProperty="Opacity"
                                                             Duration="0"
                                                             To="{ThemeResource ListViewItemDisabledThemeOpacity}"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="MultiSelectStates">
                                    <VisualState x:Name="MultiSelectDisabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheckBoxTransform"
                                                Storyboard.TargetProperty="X">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="-32" KeySpline="0.1,0.9,0.2,1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectClipTransform"
                                               Storyboard.TargetProperty="X">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="32" KeySpline="0.1,0.9,0.2,1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterTranslateTransform"
                                               Storyboard.TargetProperty="X">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="32"/>
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="0" KeySpline="0.1,0.9,0.2,1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.333" Value="Collapsed" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MultiSelectEnabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheckBoxTransform"
                                                Storyboard.TargetProperty="X">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-32"/>
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="0" KeySpline="0.1,0.9,0.2,1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectClipTransform"
                                               Storyboard.TargetProperty="X">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="32"/>
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="0" KeySpline="0.1,0.9,0.2,1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterTranslateTransform"
                                               Storyboard.TargetProperty="X">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-32"/>
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="0" KeySpline="0.1,0.9,0.2,1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterGrid" Storyboard.TargetProperty="Margin">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="32,0,0,0" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DataVirtualizationStates">
                                    <VisualState x:Name="DataAvailable"/>
                                    <VisualState x:Name="DataPlaceholder">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextBlock" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderRect" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ReorderHintStates">
                                    <VisualState x:Name="NoReorderHint"/>
                                    <VisualState x:Name="BottomReorderHint">
                                        <Storyboard>
                                            <DragOverThemeAnimation TargetName="ContentBorder" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" Direction="Bottom" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="TopReorderHint">
                                        <Storyboard>
                                            <DragOverThemeAnimation TargetName="ContentBorder" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" Direction="Top" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="RightReorderHint">
                                        <Storyboard>
                                            <DragOverThemeAnimation TargetName="ContentBorder" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" Direction="Right" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="LeftReorderHint">
                                        <Storyboard>
                                            <DragOverThemeAnimation TargetName="ContentBorder" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" Direction="Left" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition To="NoReorderHint" GeneratedDuration="0:0:0.2"/>
                                    </VisualStateGroup.Transitions>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DragStates">
                                    <VisualState x:Name="NotDragging" />
                                    <VisualState x:Name="Dragging">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ContentBorder"
                                                             Storyboard.TargetProperty="Opacity"
                                                             Duration="0"
                                                             To="{ThemeResource ListViewItemDragThemeOpacity}" />
                                            <DragItemThemeAnimation TargetName="ContentBorder" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="DraggingTarget">
                                        <Storyboard>
                                            <DropTargetItemThemeAnimation TargetName="ContentBorder" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MultipleDraggingPrimary">
                                        <Storyboard>
                                            <!-- These two Opacity animations are required - the FadeInThemeAnimations
                                         on the same elements animate an internal Opacity. -->
                                            <DoubleAnimation Storyboard.TargetName="MultiArrangeOverlayBackground"
                                                             Storyboard.TargetProperty="Opacity"
                                                             Duration="0"
                                                             To="1" />
                                            <DoubleAnimation Storyboard.TargetName="MultiArrangeOverlayText"
                                                             Storyboard.TargetProperty="Opacity"
                                                             Duration="0"
                                                             To="1" />
                                            <DoubleAnimation Storyboard.TargetName="ContentBorder"
                                                             Storyboard.TargetProperty="Opacity"
                                                             Duration="0"
                                                             To="{ThemeResource ListViewItemDragThemeOpacity}" />
                                            <FadeInThemeAnimation TargetName="MultiArrangeOverlayBackground" />
                                            <FadeInThemeAnimation TargetName="MultiArrangeOverlayText" />
                                            <DragItemThemeAnimation TargetName="ContentBorder" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MultipleDraggingSecondary">
                                        <Storyboard>
                                            <FadeOutThemeAnimation TargetName="ContentBorder" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="DraggedPlaceholder">
                                        <Storyboard>
                                            <FadeOutThemeAnimation TargetName="ContentBorder" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition To="NotDragging" GeneratedDuration="0:0:0.2"/>
                                    </VisualStateGroup.Transitions>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="BorderBackground"
                                       IsHitTestVisible="False"
                                       Fill="{ThemeResource SystemControlHighlightListAccentLowBrush}"
                                       Opacity="0"
                                       Control.IsTemplateFocusTarget="True"/>
                            <Grid x:Name="ContentPresenterGrid"
                                  Background="Transparent"
                                  Margin="0,0,0,0">

                                <Grid.RenderTransform>
                                    <TranslateTransform x:Name="ContentPresenterTranslateTransform"/>
                                </Grid.RenderTransform>
                                <Rectangle x:Name="SelectSquare"
                                           HorizontalAlignment="Left"
                                           Width="3"
                                           Fill="{x:Null}"/>
                                <ContentPresenter x:Name="ContentPresenter"
                                                ContentTransitions="{TemplateBinding ContentTransitions}"
                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                Content="{TemplateBinding Content}"
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                Margin="{TemplateBinding Padding}"/>
                            </Grid>
                            <!-- The 'Xg' text simulates the amount of space one line of text will occupy.
                          In the DataPlaceholder state, the Content is not loaded yet so we
                          approximate the size of the item using placeholder text. -->
                            <TextBlock x:Name="PlaceholderTextBlock"
                                    Opacity="0"
                                    Text="Xg"
                                    Foreground="{x:Null}"
                                    Margin="{TemplateBinding Padding}"
                                    IsHitTestVisible="False"
                                    AutomationProperties.AccessibilityView="Raw"/>
                            <Rectangle x:Name="PlaceholderRect"
                                    Visibility="Collapsed"
                                    Fill="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}"/>
                            <Rectangle x:Name="MultiArrangeOverlayBackground"
                                    IsHitTestVisible="False"
                                    Opacity="0"
                                    Fill="{ThemeResource ListViewItemDragBackgroundThemeBrush}"
                                    Grid.ColumnSpan="2"/>
                            <Border x:Name="MultiSelectSquare"
                                    BorderBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
                                    BorderThickness="2"
                                    Width="20"
                                    Height="20"
                                    Margin="12,0,0,0"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Left"
                                    Visibility="Collapsed" >
                                <Border.Clip>
                                    <RectangleGeometry Rect="0,0,20,20">
                                        <RectangleGeometry.Transform>
                                            <TranslateTransform x:Name="MultiSelectClipTransform"/>
                                        </RectangleGeometry.Transform>
                                    </RectangleGeometry>
                                </Border.Clip>
                                <Border.RenderTransform>
                                    <TranslateTransform x:Name="MultiSelectCheckBoxTransform"/>
                                </Border.RenderTransform>
                                <FontIcon x:Name="MultiSelectCheck"
                                        FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                        Glyph="&#xE73E;"
                                        FontSize="16"
                                        Foreground="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
                                        Visibility="Collapsed"
                                        Opacity="0"/>
                            </Border>
                            <TextBlock x:Name="MultiArrangeOverlayText"
                                    Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DragItemsCount}"
                                    Foreground="{ThemeResource ListViewItemDragForegroundThemeBrush}"
                                    FontFamily="{ThemeResource ContentControlThemeFontFamily}"
                                    FontSize="26.667"
                                    IsHitTestVisible="False"
                                    Opacity="0"
                                    TextWrapping="Wrap"
                                    TextTrimming="WordEllipsis"
                                    Margin="18,9,0,0"
                                    AutomationProperties.AccessibilityView="Raw"
                                    Grid.ColumnSpan="2"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>

    <Grid x:Name="LayoutRoot" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <st:BooleanDataTrigger 
                            st:BooleanDataTrigger.TriggerValue="True"
                            st:BooleanDataTrigger.DataValue="{Binding Settings.Privacy.UseAppLock}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="AppLockMenuText.Text" Value="{Binding Tag, ElementName=AppLockMenuText}" />
                        <Setter Target="AppLockMenuIcon.Glyph" Value="&#xE1F6;" />
                        <Setter Target="AppLockMenuText.Foreground" Value="{ThemeResource SystemControlForegroundAccentBrush}" />
                        <Setter Target="AppLockMenuIcon.Foreground" Value="{ThemeResource SystemControlForegroundAccentBrush}" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <st:BooleanDataTrigger 
                            st:BooleanDataTrigger.TriggerValue="True"
                            st:BooleanDataTrigger.DataValue="{Binding IsMenuOpen}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="BottomSeparator.Width" Value="{StaticResource OpenPaneLength}" />
                        <Setter Target="MiddleSeparator.Width" Value="{StaticResource OpenPaneLength}" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState x:Name="DefaultMediaElementVisibleState">
                    <VisualState.StateTriggers>
                        <st:StateNameTrigger
                                st:StateNameTrigger.TriggerName="None"
                                st:StateNameTrigger.StateName="{Binding MediaElementVisibleState}" />
                    </VisualState.StateTriggers>
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty='(UIElement.RenderTransform).(CompositeTransform.TranslateY)' Storyboard.TargetName='ME'>
                            <DiscreteObjectKeyFrame KeyTime='0:0:0' Value='{Binding MediaElementSlideDistance}' />
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty='Visibility' Storyboard.TargetName='ME'>
                            <DiscreteObjectKeyFrame KeyTime='0:0:0' Value='Collapsed' />
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty='Opacity' Storyboard.TargetName='ME'>
                            <DiscreteObjectKeyFrame KeyTime='0:0:0' Value='0' />
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="ShowMediaElementVisibleState">
                    <VisualState.StateTriggers>
                        <st:StateNameTrigger
                                st:StateNameTrigger.TriggerName="Visible"
                                st:StateNameTrigger.StateName="{Binding MediaElementVisibleState}" />
                    </VisualState.StateTriggers>
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Duration="0:0:0.4"
                                                       Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)"
                                                       Storyboard.TargetName="ME">
                            <EasingDoubleKeyFrame Value="{Binding MediaElementSlideDistance}" KeyTime="0:0:0.4">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <PowerEase EasingMode="EaseIn"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty='Visibility' Storyboard.TargetName='ME'>
                            <DiscreteObjectKeyFrame KeyTime='0:0:0' Value='Visible' />
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty='Opacity' Storyboard.TargetName='ME'>
                            <DiscreteObjectKeyFrame KeyTime='0:0:0' Value='1' />
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="HideMediaElementVisibleState">
                    <VisualState.StateTriggers>
                        <st:StateNameTrigger
                                st:StateNameTrigger.TriggerName="Collapsed"
                                st:StateNameTrigger.StateName="{Binding MediaElementVisibleState}" />
                    </VisualState.StateTriggers>
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Duration="0:0:0.3"
                                                       Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)"
                                                       Storyboard.TargetName="ME">
                            <EasingDoubleKeyFrame Value="{Binding MediaElementSlideDistance}" KeyTime="0:0:0.3">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <PowerEase EasingMode="EaseOut"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                            <EasingDoubleKeyFrame KeyTime='0:0:0.3' Value='{Binding MediaElementSlideDistance2}' />
                        </DoubleAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty='Opacity' Storyboard.TargetName='ME'>
                            <DiscreteObjectKeyFrame KeyTime='0:0:0.3' Value='0' />
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty='Visibility' Storyboard.TargetName='ME'>
                            <DiscreteObjectKeyFrame KeyTime='0:0:0.3' Value='Collapsed' />
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState x:Name="DefaultExitPanelVisibleState">
                    <VisualState.StateTriggers>
                        <st:StateNameTrigger
                                st:StateNameTrigger.TriggerName="None"
                                st:StateNameTrigger.StateName="{Binding ReadyExitAppVisibleState}" />
                    </VisualState.StateTriggers>
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty='Visibility' Storyboard.TargetName='ExitPanel'>
                            <DiscreteObjectKeyFrame KeyTime='0:0:0' Value='Collapsed' />
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty='Opacity' Storyboard.TargetName='ExitPanel'>
                            <DiscreteObjectKeyFrame KeyTime='0:0:0' Value='0' />
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="ShowExitVisibleState">
                    <VisualState.StateTriggers>
                        <st:StateNameTrigger
                                st:StateNameTrigger.TriggerName="Visible"
                                st:StateNameTrigger.StateName="{Binding ReadyExitAppVisibleState}" />
                    </VisualState.StateTriggers>
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Duration="0:0:0.4"
                                                       Storyboard.TargetProperty="Opacity"
                                                       Storyboard.TargetName="ExitPanel">
                            <EasingDoubleKeyFrame Value="1" KeyTime="0:0:0.4">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <PowerEase EasingMode="EaseIn"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty='Visibility' Storyboard.TargetName='ExitPanel'>
                            <DiscreteObjectKeyFrame KeyTime='0:0:0' Value='Visible' />
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="HideExitPanelVisibleState">
                    <VisualState.StateTriggers>
                        <st:StateNameTrigger
                                st:StateNameTrigger.TriggerName="Collapsed"
                                st:StateNameTrigger.StateName="{Binding ReadyExitAppVisibleState}" />
                    </VisualState.StateTriggers>
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Duration="0:0:0.3"
                                                       Storyboard.TargetProperty="Opacity"
                                                       Storyboard.TargetName="ExitPanel">
                            <EasingDoubleKeyFrame Value="0" KeyTime="0:0:0.3">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <PowerEase EasingMode="EaseOut"/>
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty='Visibility' Storyboard.TargetName='ExitPanel'>
                            <DiscreteObjectKeyFrame KeyTime='0:0:0.3' Value='Collapsed' />
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="720"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="LeftMenuSplitter.DisplayMode" Value="CompactInline" />
                        <Setter Target="LeftMenuSplitter.IsPaneOpen" Value="True" />
                        <Setter Target="HamburgerMenu.Margin" Value="0,6,0,0" />
                        <Setter Target="LeftMenuSplitter.Padding" Value="0,6,0,0" />
                        <Setter Target="ContentFrame.Margin" Value="0,6,0,0" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="432"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="LeftMenuSplitter.DisplayMode" Value="CompactOverlay" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="411"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="LeftMenuSplitter.DisplayMode" Value="CompactOverlay" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="360"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="LeftMenuSplitter.DisplayMode" Value="Overlay" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="341"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="LeftMenuSplitter.DisplayMode" Value="Overlay" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="LeftMenuSplitter.DisplayMode" Value="Overlay" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <st:BooleanDataTrigger 
                            st:BooleanDataTrigger.TriggerValue="True"
                            st:BooleanDataTrigger.DataValue="{Binding IsMobile}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SpareAdIcon.Height" Value="50" />
                        <Setter Target="SpareAdText1.FontSize" Value="15" />
                        <Setter Target="SpareAdText2.FontSize" Value="15" />
                        <Setter Target="SpareAdHand.FontSize" Value="30" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="TapStates">
                <VisualState x:Name="NormalHand" />
                <VisualState x:Name="PointerDownUp">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty='Opacity' Storyboard.TargetName='SpareAdHand'>
                            <EasingDoubleKeyFrame KeyTime='0' Value='1' />
                            <EasingDoubleKeyFrame KeyTime='0:0:7' Value='0' />
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimation Storyboard.TargetName="handIconTransform"
                                         Storyboard.TargetProperty="TranslateY"
                                         From="1">
                        </DoubleAnimation>
                        <DoubleAnimation Storyboard.TargetName="handIconTransform"
                                         Storyboard.TargetProperty="ScaleY"
                                         RepeatBehavior="5x"
                                         From="1.3"/>
                        <DoubleAnimation Storyboard.TargetName="handIconTransform"
                                         Storyboard.TargetProperty="ScaleX"
                                         RepeatBehavior="5x"
                                         From="1.3"/>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <!-- 평가 및 리뷰 -->
        <ap:RateReminder x:Name="RateReminder"
                         RunsBeforeReminder="5"
                         DaysBeforeReminder="5"/>
        <!-- 햄버그 메뉴 버튼 -->
        <Grid x:Name="HamburgerMenu" VerticalAlignment="Top" Margin="0,0,0,0" 
              Canvas.ZIndex="65533">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="HamburgerButton"  
                    Width="48" Height="48" 
                    Style="{StaticResource HamburgerButtonStyle}" 
                    Background="Transparent"
                    Command="{Binding MainMenuButtonTappedCommand}"
                    CommandParameter="{Binding ElementName=LeftMenuSplitter}">
                <Button.Content>
                    <StackPanel Orientation="Horizontal" >
                        <FontIcon Glyph="&#xE700;"/>
                    </StackPanel>
                </Button.Content>
            </Button>
        </Grid>
        <!-- 좌측 메뉴 -->
        <SplitView x:Name="LeftMenuSplitter"
                   Margin="0" 
                   HorizontalContentAlignment="Left" 
                   VerticalAlignment="Stretch" 
                   HorizontalAlignment="Stretch" 
                   IsPaneOpen="{Binding IsMenuOpen, Mode=TwoWay}"  
                   PanePlacement="Left"
                   CompactPaneLength="{StaticResource CompactPaneLength}" 
                   OpenPaneLength="{StaticResource OpenPaneLength}" 
                   AllowDrop="True"
                   DragOver="{x:Bind Vm.DragOver}"
                   Drop="{x:Bind Vm.Drop}">
            <SplitView.Pane>
                <Grid Margin="0,60,0,0">
                    <ScrollViewer HorizontalScrollBarVisibility="Hidden" HorizontalScrollMode="Disabled"
                              VerticalScrollBarVisibility="Auto" VerticalScrollMode="Auto">
                        <Grid HorizontalAlignment="Stretch"  >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ListView Grid.Row="0" 
                                  x:Name="MainMenuListView"
                                  ScrollViewer.VerticalScrollMode="Disabled"
                                  ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                  HorizontalAlignment="Stretch" 
                                  ItemsSource="{Binding MainMenuItemSource}"
                                  SelectedIndex="{Binding SelectedMainMenuIndex, Mode=TwoWay}"
                                  ItemContainerStyle="{StaticResource ListViewItemExpanded}">
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal" Height="{StaticResource CompactPaneLength}"
                                                ToolTipService.ToolTip="{Binding Name}"
                                                Background="Transparent">
                                            <FontIcon Margin="4,0,0,0" FontSize="16" FontWeight="Normal" FontFamily="Segoe MDL2 Assets" Glyph="{Binding Glyph}" />
                                            <TextBlock Margin="20,0,0,0" Text="{Binding Name}" VerticalAlignment="Center"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                            <Border Grid.Row="1" x:Name="MiddleSeparator" 
                                Margin="0,6"
                                Padding="6,0" 
                                BorderThickness="0" 
                                Height="1" 
                                HorizontalAlignment="Left"
                                Width="{StaticResource CompactPaneLength}" >
                                <Rectangle Fill="{ThemeResource AppBarSeparatorForegroundThemeBrush}" Opacity="0.5" />
                            </Border>
                            <Button Grid.Row="2" x:Name="NewPlayListButton"
                                Height="{StaticResource CompactPaneLength}"
                                Width="{StaticResource OpenPaneLength}"
                                Background="Transparent"
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch"
                                ToolTipService.ToolTip="{Binding Text,ElementName=NewPlayListLable}"
                                Padding="0"
                                BorderThickness="0"
                                Style="{StaticResource HamburgerButtonStyle}"
                                Tapped="{x:Bind Vm.NewPlayListTappedEventHandler}"
                                DataContext="{x:Bind Vm.NewPlayList}">
                                <Button.Content>
                                    <StackPanel Orientation="Horizontal" Background="Transparent" Padding="12,0" >
                                        <FontIcon Margin="4,0,0,0" FontSize="16" FontWeight="Normal" FontFamily="Segoe MDL2 Assets" Glyph="&#xE109;" />
                                        <TextBlock x:Name="NewPlayListLable" Margin="20,0,0,0" x:Uid="TopMenu/Explorer/NewPlayList" Text="[새 재생 목록]" VerticalAlignment="Center"/>
                                    </StackPanel>
                                </Button.Content>
                            </Button>
                            <ListView Grid.Row="3" x:Name="PlayListListView"
                                  ScrollViewer.VerticalScrollMode ="Auto"
                                  HorizontalAlignment="Stretch" 
                                  ItemsSource="{Binding PlayListSource}"
                                  SelectedIndex="{Binding SelectedPlayListIndex, Mode=TwoWay}"
                                  ItemContainerStyle="{StaticResource ListViewItemExpanded}">
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal" 
                                                Height="{StaticResource CompactPaneLength}"
                                                ToolTipService.ToolTip="{Binding Name}"
                                                Background="Transparent">
                                            <FontIcon Margin="4,0,0,0" FontSize="16" FontWeight="Normal" FontFamily="Segoe MDL2 Assets" Glyph="&#xE728;" />
                                            <TextBlock Margin="20,0,0,0" Text="{Binding Name}" VerticalAlignment="Center"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                            <Border Grid.Row="4" x:Name="BottomSeparator" 
                                Margin="0,6"
                                Padding="6,0" 
                                BorderThickness="0" 
                                Height="1" 
                                HorizontalAlignment="Left"
                                Width="{StaticResource CompactPaneLength}" >
                                <Rectangle Fill="{ThemeResource AppBarSeparatorForegroundThemeBrush}" Opacity="0.5" />
                            </Border>
                            <Button Grid.Row="5" x:Name="IAPsButton"
                                Height="{StaticResource CompactPaneLength}"
                                Width="{StaticResource OpenPaneLength}"
                                Background="Transparent"
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch"
                                ToolTipService.ToolTip="{Binding Text, ElementName=IAPsMenuText}"
                                Padding="0"
                                BorderThickness="0"
                                Style="{StaticResource HamburgerButtonStyle}"
                                Tapped="{x:Bind PurchaseTapped}"
                                Visibility="{x:Bind Vm.IsTrial, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Button.Content>
                                    <StackPanel Orientation="Horizontal" Background="Transparent" Padding="12,0" >
                                        <FontIcon x:Name="IAPsMenuIcon" Margin="4,0,0,0" FontSize="16" FontWeight="Normal" FontFamily="Segoe MDL2 Assets" Glyph="&#xE719;" />
                                        <TextBlock x:Name="IAPsMenuText" Margin="20,0,0,0" VerticalAlignment="Center"
                                               x:Uid="MainMenu/IAPs/Button"  Text="[앱 구매]" />
                                    </StackPanel>
                                </Button.Content>
                            </Button>
                            <Button Grid.Row="6" x:Name="AppLocktButton"
                                Height="{StaticResource CompactPaneLength}"
                                Width="{StaticResource OpenPaneLength}"
                                Background="Transparent"
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch"
                                ToolTipService.ToolTip="{Binding Text, ElementName=AppLockMenuText}"
                                Padding="0"
                                BorderThickness="0"
                                Style="{StaticResource HamburgerButtonStyle}"
                                Tapped="{x:Bind Vm.AppLockTappedEventHandler}">
                                <Button.Content>
                                    <StackPanel Orientation="Horizontal" Background="Transparent" Padding="12,0" >
                                        <FontIcon x:Name="AppLockMenuIcon" Margin="4,0,0,0" FontSize="16" FontWeight="Normal" FontFamily="Segoe MDL2 Assets" Glyph="&#xE1F7;" />
                                        <TextBlock x:Name="AppLockMenuText" Margin="20,0,0,0" VerticalAlignment="Center"
                                               x:Uid="MainMenu/AppLock/Switch"  Text="[앱 보호 : 정지됨]" Tag="[앱 보호 : 실행중]"/>
                                    </StackPanel>
                                </Button.Content>
                            </Button>
                            <Button Grid.Row="7" x:Name="SettingsButton"
                                Height="{StaticResource CompactPaneLength}"
                                Width="{StaticResource OpenPaneLength}"
                                Background="Transparent"
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch"
                                ToolTipService.ToolTip="{Binding Text, ElementName=SettingMenuText}"
                                Padding="0"
                                BorderThickness="0"
                                Style="{StaticResource HamburgerButtonStyle}"
                                Tapped="{x:Bind Vm.SettingsTappedEventHandler}">
                                <Button.Content>
                                    <StackPanel Orientation="Horizontal" Background="Transparent" Padding="12,0" >
                                        <FontIcon Margin="4,0,0,0" FontSize="16" FontWeight="Normal" FontFamily="Segoe MDL2 Assets" Glyph="&#xE713;" />
                                        <TextBlock x:Name="SettingMenuText" x:Uid="MainMenu/Settings/Title" Margin="20,0,0,0" Text="[설정]" VerticalAlignment="Center"/>
                                    </StackPanel>
                                </Button.Content>
                            </Button>
                        </Grid>
                    </ScrollViewer>
                </Grid>
            </SplitView.Pane>
            <SplitView.Content>
                <Grid Margin="0">
                    <Grid.Transitions>
                        <TransitionCollection>
                            <AddDeleteThemeTransition />
                            <ContentThemeTransition />
                        </TransitionCollection>
                    </Grid.Transitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <ContentPresenter Grid.Column="0" Grid.Row="0" x:Name="ContentFrame" Content="{Binding SplitViewContentFrame}" Margin="0" />
                    <Grid x:Name="BottomAdPanel" Grid.ColumnSpan="2" Grid.Row="1"
                          Visibility="{x:Bind IsAdvertising, Converter={StaticResource BooleanToVisibilityConverter}}"
                          Background="{ThemeResource SystemControlBackgroundAccentBrush }"
                          Tapped="PurchaseTapped">
                        <Grid HorizontalAlignment="Center">
                            <StackPanel x:Name="SpareAdPanel" 
                                        Orientation="Horizontal"
                                        HorizontalAlignment="Center">
                                <Image x:Name="SpareAdIcon" Height="80"
                                       Source="/Assets/SquareLogo310x310.scale-200.png" Stretch="Uniform"/>
                                <StackPanel VerticalAlignment="Center">
                                    <TextBlock x:Name="SpareAdText1" 
                                               FontSize="18"
                                               Text="No advertising! Full features!"
                                               Foreground="White" FontWeight="SemiBold"/>
                                    <TextBlock x:Name="SpareAdText2" 
                                               FontSize="18"
                                               Text="Go buy the CCPlayer UWP Pro!"
                                               Foreground="White" FontWeight="SemiBold"/>
                                </StackPanel>
                                <FontIcon x:Name="SpareAdHand" 
                                          FontSize="35"
                                          Foreground="White"
                                          Glyph="&#xE815;"
                                          Opacity="0">
                                    <FontIcon.RenderTransform>
                                        <CompositeTransform x:Name="handIconTransform" />
                                    </FontIcon.RenderTransform>
                                </FontIcon>
                            </StackPanel>
                        </Grid>
                    </Grid>
                </Grid>
            </SplitView.Content>
        </SplitView>
        <!-- 재생 패널 -->
        <!--<MediaElement Source="http://localhost" />-->
        <cuxc:MediaElement x:Name="ME" 
                           Canvas.ZIndex="65534"
                           RenderTransformOrigin="0.5,1"
                           CloseButtonTapped="{x:Bind Vm.CloseButtonTapped}"
                           MediaOpened="{x:Bind Vm.MediaOpened}"
                           MediaEnded="{x:Bind Vm.MediaEnded}"
                           MediaFailed="{x:Bind Vm.MediaFailed}"
                           SeekCompleted="{x:Bind Vm.SeekCompleted}"
                           CurrentStateChanged="{x:Bind Vm.CurrentStateChanged}"
                           CCSettingsOpenButtonTapped="{x:Bind Vm.CCSettingsOpenButtonTapped}"
                           PreviousMediaButtonTapped="{x:Bind Vm.PreviousMediaButtonTapped}"
                           NextMediaButtonTapped="{x:Bind Vm.NextMediaButtonTapped}"
                           AttachmentPopulated="{x:Bind Vm.AttachmentPopulated}"
                           AttachmentCompleted="{x:Bind Vm.AttachmentCompleted}"
                           Title="{x:Bind Vm.CurrPlayListFile.DisplayName, FallbackValue='', Mode=OneWay}"
                           PreviousMediaItem="{x:Bind Vm.PrevPlayListFile, FallbackValue='', Mode=OneWay}"
                           NextMediaItem="{x:Bind Vm.NextPlayListFile, FallbackValue='', Mode=OneWay}"
                           Brightness="{x:Bind Vm.Settings.Playback.Brightness, Mode=TwoWay}"
                           SeekTimeInterval="{x:Bind Vm.Settings.Playback.SeekTimeInterval, Mode=TwoWay}"
                           CCCodePage="{x:Bind Vm.Settings.ClosedCaption.CCCodePage, Mode=TwoWay}"
                           CCDefaultCodePage="{x:Bind Vm.Settings.ClosedCaption.CCDefaultCodePage, Mode=TwoWay}"
                           UseClosedCaptions="{x:Bind Vm.Settings.ClosedCaption.ShowClosedCaption, Mode=TwoWay}"
                           UseFlipToPause="{x:Bind Vm.Settings.Playback.UseFlipToPause, Mode=TwoWay}"
                           EnabledRotationLock="{x:Bind Vm.Settings.Playback.UseRotationLock, Mode=TwoWay}">
            <cuxc:MediaElement.RenderTransform>
                <CompositeTransform TranslateY="0"/>
            </cuxc:MediaElement.RenderTransform>
            <cuxc:MediaElement.ClosedCaptions>
                <cuxc:ClosedCaptions Foreground="White"
                                     Margin="0,0,0,12"
                                     HorizontalAlignment="Stretch" 
                                     VerticalAlignment="Stretch"
                                     FontFamiliesSource="{x:Bind Vm.FontSource, Mode=OneWay}"
                                     FontSizeRatio="{x:Bind Vm.Settings.ClosedCaption.CCFontSizeRatio, Mode=TwoWay}"
                                     FontFamily="{x:Bind Vm.Settings.ClosedCaption.CCFontFamily, Mode=OneWay}"
                                     Background="{x:Bind Vm.Settings.ClosedCaption.CCBackground, Mode=OneWay}"
                                     EnableStyleOverride="{x:Bind Vm.Settings.ClosedCaption.CCStyleOverride, Mode=OneWay}"
                                     FontStyleOverride="{x:Bind Vm.Settings.ClosedCaption.CCFontStyle, Mode=OneWay}"
                                     FontWeightOverride="{x:Bind Vm.Settings.ClosedCaption.CCFontWeight, Mode=OneWay}"
                                     ForegroundOverride="{x:Bind Vm.Settings.ClosedCaption.CCForeground, Mode=OneWay}"
                                     ShadowVisibility="{x:Bind Vm.Settings.ClosedCaption.CCShadowVisibility, Mode=OneWay}"
                                     OutlineVisibility="{x:Bind Vm.Settings.ClosedCaption.CCOutlineVisibility, Mode=OneWay}"
                                     BackgroundVisibility="{x:Bind Vm.Settings.ClosedCaption.CCBackgroundVisibility, Mode=OneWay}"
                                     DefaultSubtitlePosition="{x:Bind Vm.Settings.ClosedCaption.CCTranslateY, Mode=TwoWay}"
                                     DefaultSubtitleVerticalAlignment="{x:Bind Vm.Settings.ClosedCaption.CCVerticalAlignment, Mode=TwoWay}" />
            </cuxc:MediaElement.ClosedCaptions>
        </cuxc:MediaElement>
        <Popup RequestedTheme="Dark" IsOpen="{Binding IsCCSettingsOpen, Mode=TwoWay}" IsLightDismissEnabled="True" HorizontalAlignment="Right" HorizontalOffset="{Binding CCSettingsHorizontalOffset}" >
            <Grid x:Name="CCSettingsPanel" MaxWidth="{StaticResource FlyoutWidth}" Height="{Binding CCSettingsHeight}" SizeChanged="{x:Bind Vm.CCSettingsPanelSizeChanged}" >
                <Grid.ChildrenTransitions>
                    <TransitionCollection>
                        <EdgeUIThemeTransition Edge="Right"/>
                    </TransitionCollection>
                </Grid.ChildrenTransitions>
                <Rectangle Fill="{ThemeResource SystemControlBackgroundChromeMediumBrush}" Opacity="0.7"/>
                <ScrollViewer VerticalScrollMode="Auto">
                    <cuvc:SubtitleSettings Margin="18,6" />
                </ScrollViewer>
            </Grid>
        </Popup>
        <Grid x:Name="ExitPanel" 
              HorizontalAlignment="Center" 
              VerticalAlignment="Bottom"
              Margin="24">
            <Rectangle Fill="{ThemeResource SystemControlBackgroundAccentBrush}" Opacity="0.7"/>
            <TextBlock x:Uid="Exit/Information" 
                            Margin="12,6" 
                            VerticalAlignment="Center" 
                            HorizontalAlignment="Center" 
                            Foreground="{ThemeResource TextBoxBackgroundThemeBrush}" 
                            TextTrimming="CharacterEllipsis"
                            Text="['뒤로' 버튼을 한번 더 누르면 종료됩니다.]" />
        </Grid>
    </Grid>
</Page>
