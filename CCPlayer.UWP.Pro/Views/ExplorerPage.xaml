<Page
    x:Class="CCPlayer.UWP.Views.ExplorerPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:CCPlayer.UWP.Views"
    xmlns:control="using:CCPlayer.UWP.Views.Controls"
    xmlns:data="using:CCPlayer.UWP.Models"
    xmlns:vm="using:CCPlayer.UWP.ViewModels"
    xmlns:converter="using:CCPlayer.UWP.Converters"
    xmlns:wuxdata="using:Windows.UI.Xaml.Data"
    xmlns:st="using:CCPlayer.UWP.StateTriggers"
    xmlns:selector="using:CCPlayer.UWP.Selectors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    DataContext="{Binding Explorer, Source={StaticResource Locator}}"
    mc:Ignorable="d">

    <Page.Transitions>
        <TransitionCollection>
            <NavigationThemeTransition>
                <NavigationThemeTransition.DefaultNavigationTransitionInfo>
                    <ContinuumNavigationTransitionInfo />
                </NavigationThemeTransition.DefaultNavigationTransitionInfo>
            </NavigationThemeTransition>
        </TransitionCollection>
    </Page.Transitions>

    <Page.Resources>
        <!-- Style for Windows.UI.Xaml.Controls.ListViewItem -->
        <Style TargetType="ListViewItem" x:Key="ListViewItemExpandedNoAnimation">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
            <Setter Property="TabNavigation" Value="Local"/>
            <Setter Property="IsHoldingEnabled" Value="True"/>
            <Setter Property="Padding" Value="12,0,12,0"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}"/>
            <Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}"/>
            <Setter Property="UseSystemFocusVisuals" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Grid x:Name="ContentBorder"
                              Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="BorderBackground"
                                                             Storyboard.TargetProperty="Opacity"
                                                             Duration="0"
                                                             To="1"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListLowBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="BorderBackground"
                                                             Storyboard.TargetProperty="Opacity"
                                                             Duration="0"
                                                             To="1"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListMediumBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="BorderBackground"
                                       IsHitTestVisible="False"
                                       Fill="{ThemeResource SystemControlHighlightListAccentLowBrush}"
                                       Opacity="0"
                                       Control.IsTemplateFocusTarget="True"/>
                            <Grid x:Name="ContentPresenterGrid"
                                  Background="Transparent"
                                  Margin="0,0,0,0">
                                <Grid.RenderTransform>
                                    <TranslateTransform x:Name="ContentPresenterTranslateTransform"/>
                                </Grid.RenderTransform>
                                <ContentPresenter x:Name="ContentPresenter"
                                                  ContentTransitions="{TemplateBinding ContentTransitions}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  Content="{TemplateBinding Content}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}"/>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <selector:StorageItemStyleSelector x:Key="StorageItemStyleSelectorBase" NoCheckStyle="{StaticResource SemanticZoomInItemStyleNoCheckBase}" DefaultStyle="{StaticResource SemanticZoomInItemStyleBase}" />
        <selector:StorageItemStyleSelector x:Key="StorageItemStyleSelector720" NoCheckStyle="{StaticResource SemanticZoomInItemStyleNoCheck720}" DefaultStyle="{StaticResource SemanticZoomInItemStyle720}" />
        <selector:StorageItemStyleSelector x:Key="StorageItemStyleSelector432" NoCheckStyle="{StaticResource SemanticZoomInItemStyleNoCheck432}" DefaultStyle="{StaticResource SemanticZoomInItemStyle432}" />
        <selector:StorageItemStyleSelector x:Key="StorageItemStyleSelector411" NoCheckStyle="{StaticResource SemanticZoomInItemStyleNoCheck411}" DefaultStyle="{StaticResource SemanticZoomInItemStyle411}" />
        <selector:StorageItemStyleSelector x:Key="StorageItemStyleSelector360" NoCheckStyle="{StaticResource SemanticZoomInItemStyleNoCheck360}" DefaultStyle="{StaticResource SemanticZoomInItemStyle360}" />
        <selector:StorageItemStyleSelector x:Key="StorageItemStyleSelector341" NoCheckStyle="{StaticResource SemanticZoomInItemStyleNoCheck341}" DefaultStyle="{StaticResource SemanticZoomInItemStyle341}" />
        <selector:StorageItemStyleSelector x:Key="StorageItemStyleSelector320" NoCheckStyle="{StaticResource SemanticZoomInItemStyleNoCheck320}" DefaultStyle="{StaticResource SemanticZoomInItemStyle320}" />

        <converter:ResourceFormatConverter x:Key="ResourceFormatConverter" />
        <converter:StringFormatConverter x:Key="StringFormatConverter" />
        <converter:DateTimeConverter x:Key="DateTimeConverter" />
        <converter:DurationTimeConverter x:Key="DurationTimeConverter" />
        <converter:FileSizeConverter x:Key="FileSizeConverter" />
        <converter:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converter:StringToVisibilityConverter x:Key="StringToVisibilityConverter" />

        <!--<ItemsPanelTemplate x:Key="FolderItemsTemplate">
            <ItemsWrapGrid MaximumRowsOrColumns="1" Orientation="Horizontal"/>
        </ItemsPanelTemplate>-->

        <CollectionViewSource x:Name="StorageItemGroupSource" Source="{x:Bind Vm.StorageItemGroupSource}" IsSourceGrouped="True" ItemsPath="Items"/>

        <!-- Style for Windows.UI.Xaml.Controls.GridViewItem -->
        <Style TargetType="GridViewItem" x:Key="SemanticZoomInItemStyleNoCheckBase">
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
            <Setter Property="TabNavigation" Value="Local"/>
            <Setter Property="IsHoldingEnabled" Value="True"/>
            <Setter Property="MinWidth" Value="{ThemeResource GridViewItemMinWidth}"/>
            <Setter Property="MinHeight" Value="{ThemeResource GridViewItemMinHeight}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GridViewItem">
                        <Grid x:Name="ContentBorder" 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="BorderRectangle"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Duration="0"
                                                         To="1"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderRectangle" Storyboard.TargetProperty="Stroke">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListLowBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualBlack" Storyboard.TargetProperty="Stroke">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Selected"/>
                                    <VisualState x:Name="PointerOverSelected"/>
                                    <VisualState x:Name="PressedSelected"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DisabledStates">
                                    <VisualState x:Name="Enabled"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ContentBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Duration="0"
                                                         To="{ThemeResource ListViewItemDisabledThemeOpacity}"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Unfocused"/>
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="FocusVisualWhite"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Duration="0"
                                                         To="1"/>
                                            <DoubleAnimation Storyboard.TargetName="FocusVisualBlack"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Duration="0"
                                                         To="1"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="MultiSelectStates">
                                    <VisualState x:Name="MultiSelectDisabled"/>
                                    <VisualState x:Name="MultiSelectEnabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="IsHitTestVisible">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="False" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DataVirtualizationStates">
                                    <VisualState x:Name="DataAvailable"/>
                                    <VisualState x:Name="DataPlaceholder">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextBlock" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderRect" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ReorderHintStates">
                                    <VisualState x:Name="NoReorderHint"/>
                                    <VisualState x:Name="BottomReorderHint">
                                        <Storyboard>
                                            <DragOverThemeAnimation TargetName="ContentBorder" ToOffset="{ThemeResource GridViewItemReorderHintThemeOffset}" Direction="Bottom" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="TopReorderHint">
                                        <Storyboard>
                                            <DragOverThemeAnimation TargetName="ContentBorder" ToOffset="{ThemeResource GridViewItemReorderHintThemeOffset}" Direction="Top" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="RightReorderHint">
                                        <Storyboard>
                                            <DragOverThemeAnimation TargetName="ContentBorder" ToOffset="{ThemeResource GridViewItemReorderHintThemeOffset}" Direction="Right" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="LeftReorderHint">
                                        <Storyboard>
                                            <DragOverThemeAnimation TargetName="ContentBorder" ToOffset="{ThemeResource GridViewItemReorderHintThemeOffset}" Direction="Left" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition To="NoReorderHint" GeneratedDuration="0:0:0.2"/>
                                    </VisualStateGroup.Transitions>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DragStates">
                                    <VisualState x:Name="NotDragging" />
                                    <VisualState x:Name="Dragging">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ContentBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Duration="0"
                                                         To="{ThemeResource ListViewItemDragThemeOpacity}" />
                                            <DragItemThemeAnimation TargetName="ContentBorder" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="DraggingTarget">
                                        <Storyboard>
                                            <DropTargetItemThemeAnimation TargetName="ContentBorder" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MultipleDraggingPrimary">
                                        <Storyboard>
                                            <!-- These two Opacity animations are required - the FadeInThemeAnimations
                                             on the same elements animate an internal Opacity. -->
                                            <DoubleAnimation Storyboard.TargetName="MultiArrangeOverlayBackground"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Duration="0"
                                                         To="1" />
                                            <DoubleAnimation Storyboard.TargetName="MultiArrangeOverlayText"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Duration="0"
                                                         To="1" />
                                            <DoubleAnimation Storyboard.TargetName="ContentBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Duration="0"
                                                         To="{ThemeResource ListViewItemDragThemeOpacity}" />
                                            <FadeInThemeAnimation TargetName="MultiArrangeOverlayBackground" />
                                            <FadeInThemeAnimation TargetName="MultiArrangeOverlayText" />
                                            <DragItemThemeAnimation TargetName="ContentBorder" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MultipleDraggingSecondary">
                                        <Storyboard>
                                            <FadeOutThemeAnimation TargetName="ContentBorder" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="DraggedPlaceholder">
                                        <Storyboard>
                                            <FadeOutThemeAnimation TargetName="ContentBorder" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition To="NotDragging" GeneratedDuration="0:0:0.2"/>
                                    </VisualStateGroup.Transitions>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <!--<Rectangle Fill="Blue" Width="10" Height="50" />-->
                            <ContentPresenter x:Name="ContentPresenter"
                                          ContentTransitions="{TemplateBinding ContentTransitions}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" />
                            <!-- The 'Xg' text simulates the amount of space one line of text will occupy.
                              In the DataPlaceholder state, the Content is not loaded yet so we
                              approximate the size of the item using placeholder text. -->
                            <TextBlock x:Name="PlaceholderTextBlock"
                                    Visibility="Collapsed"
                                    Text="Xg"
                                    Foreground="{x:Null}"
                                    Margin="{TemplateBinding Padding}"
                                    IsHitTestVisible="False"
                                    AutomationProperties.AccessibilityView="Raw"/>
                            <Rectangle x:Name="PlaceholderRect"
                                    Visibility="Collapsed"
                                    Fill="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}"/>
                            <Rectangle x:Name="MultiArrangeOverlayBackground"
                                    IsHitTestVisible="False"
                                    Opacity="0"
                                    Fill="{ThemeResource ListViewItemDragBackgroundThemeBrush}"
                                    Grid.ColumnSpan="2"/>
                            <Rectangle x:Name="BorderRectangle"
                                    IsHitTestVisible="False"
                                    Stroke="{ThemeResource SystemControlHighlightListAccentLowBrush}"
                                    StrokeThickness="2"
                                    Opacity="0"/>
                            <Border x:Name="MultiSelectSquare"
                                Background="{ThemeResource SystemControlBackgroundChromeMediumBrush}"
                                Width="20"
                                Height="20"
                                Margin="0,2,2,0"
                                VerticalAlignment="Top"
                                HorizontalAlignment="Right"
                                Visibility="Collapsed" >
                                <FontIcon x:Name="MultiSelectCheck"
                                      FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                      Glyph="&#xE73E;"
                                      FontSize="16"
                                      Foreground="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
                                      Opacity="0"/>
                            </Border>
                            <Rectangle x:Name="FocusVisualWhite"
                                    IsHitTestVisible="False"
                                    Stroke="{ThemeResource SystemControlForegroundAltHighBrush}"
                                    StrokeEndLineCap="Square"
                                    StrokeDashArray="1.0, 1.0"
                                    StrokeDashOffset="1.5"
                                    StrokeThickness="2"
                                    Opacity="0"/>
                            <Rectangle x:Name="FocusVisualBlack"
                                    IsHitTestVisible="False"
                                    Stroke="{ThemeResource SystemControlForegroundBaseHighBrush}"
                                    StrokeEndLineCap="Square"
                                    StrokeDashArray="1.0, 1.0"
                                    StrokeDashOffset="0.5"
                                    StrokeThickness="2"
                                    Opacity="0"/>
                            <TextBlock x:Name="MultiArrangeOverlayText"
                                    Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DragItemsCount}"
                                    Foreground="{ThemeResource ListViewItemDragForegroundThemeBrush}"
                                    FontFamily="{ThemeResource ContentControlThemeFontFamily}"
                                    FontSize="26.667"
                                    IsHitTestVisible="False"
                                    Opacity="0"
                                    TextWrapping="Wrap"
                                    TextTrimming="WordEllipsis"
                                    Margin="18,9,0,0"
                                    AutomationProperties.AccessibilityView="Raw"
                                    Grid.ColumnSpan="2"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- 720P -->
        <Style x:Key="SemanticZoomInItemStyleNoCheck720" TargetType="GridViewItem" BasedOn="{StaticResource SemanticZoomInItemStyleNoCheckBase}">
            <Setter Property="Height" Value="166"/>
            <Setter Property="Width" Value="160"/>
            <Setter Property="Margin" Value="0,0,4,4"/>
        </Style>
        <!-- 1080P(1920x1080) 250% W:432, H:744, StatusBar:(60 / 2.5 = 24) 3개씩 표시 (좌측 스플릿뷰 콤팩트 메뉴) -->
        <Style x:Key="SemanticZoomInItemStyleNoCheck432" TargetType="GridViewItem" BasedOn="{StaticResource SemanticZoomInItemStyleNoCheckBase}">
            <Setter Property="Height" Value="144"/>
            <Setter Property="Width" Value="121"/>
            <Setter Property="Margin" Value="1,0,2,3"/>
        </Style>
        <!-- QHD(2560x1440) 350% W:411.4285, H:707.42858, StatusBar:(84 / 3.5 = 24) 3개씩 표시 (좌측 스플릿뷰 콤팩트 메뉴) -->
        <Style x:Key="SemanticZoomInItemStyleNoCheck411" TargetType="GridViewItem" BasedOn="{StaticResource SemanticZoomInItemStyleNoCheckBase}">
            <Setter Property="Height" Value="140"/>
            <Setter Property="Width" Value="114"/>
            <Setter Property="Margin" Value="1,0,2,3"/>
        </Style>
        <!-- QHD(2560x1440) 400%, 720P(1280x720) 200%, W:360, H616, StatusBar(96 / 4 = 24 ) 3개씩 표시-->
        <Style x:Key="SemanticZoomInItemStyleNoCheck360" TargetType="GridViewItem" BasedOn="{StaticResource SemanticZoomInItemStyleNoCheckBase}">
            <Setter Property="Height" Value="139"/>
            <Setter Property="Width" Value="113"/>
            <Setter Property="Margin" Value="1,0,2,3"/>
        </Style>
        <!--4.5인치 WXGA(768 x 1280) 225% W:341.33334, H:546.22222 StatusBar:(51 / 2.25 = 22.67 ) 2개씩 표시 -->
        <Style x:Key="SemanticZoomInItemStyleNoCheck341" TargetType="GridViewItem" BasedOn="{StaticResource SemanticZoomInItemStyleNoCheckBase}">
            <Setter Property="Height" Value="165"/>
            <Setter Property="Width" Value="158"/>
            <Setter Property="Margin" Value="3,0,3,3"/>
        </Style>
        <!-- 4인치 WVGA(480 x 800) 150% W:320, H:512, StatusBar:(32 / 1.5 = 21.3) 2개씩 표시 -->
        <Style x:Key="SemanticZoomInItemStyleNoCheck320" TargetType="GridViewItem" BasedOn="{StaticResource SemanticZoomInItemStyleNoCheckBase}">
            <Setter Property="Height" Value="159"/>
            <Setter Property="Width" Value="148"/>
            <Setter Property="Margin" Value="3,0,3,3"/>
        </Style>

        <!-- (좌측 스플릿뷰 인라인 메뉴) -->
        <Style x:Key="SemanticZoomInItemStyleBase" TargetType="GridViewItem" >
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        </Style>
        <Style x:Key="SemanticZoomInItemStyle720" TargetType="GridViewItem" BasedOn="{StaticResource SemanticZoomInItemStyleBase}">
            <Setter Property="Height" Value="166"/>
            <!-- 높이 90 + 76( 마진8 + 마진2 + 높이40 + 마진8 + 높이18) -->
            <Setter Property="Width" Value="160"/>
            <!-- 기본 마진 12 -->
        </Style>
        <!-- 1080P(1920x1080) 250% W:432, H:744, StatusBar:(60 / 2.5 = 24) 3개씩 표시 (좌측 스플릿뷰 콤팩트 메뉴) -->
        <Style x:Key="SemanticZoomInItemStyle432" TargetType="GridViewItem" BasedOn="{StaticResource SemanticZoomInItemStyleBase}">
            <Setter Property="Height" Value="144"/>
            <Setter Property="Width" Value="121"/>
            <Setter Property="Margin" Value="1,0,2,3"/>
        </Style>
        <!-- QHD(2560x1440) 350% W:411.4285, H:707.42858, StatusBar:(84 / 3.5 = 24) 3개씩 표시 (좌측 스플릿뷰 콤팩트 메뉴) -->
        <Style x:Key="SemanticZoomInItemStyle411" TargetType="GridViewItem" BasedOn="{StaticResource SemanticZoomInItemStyleBase}">
            <Setter Property="Height" Value="140"/>
            <Setter Property="Width" Value="114"/>
            <Setter Property="Margin" Value="1,0,2,3"/>
        </Style>
        <!-- QHD(2560x1440) 400%, 720P(1280x720) 200%, W:360, H616, StatusBar(96 / 4 = 24 ) 3개씩 표시-->
        <Style x:Key="SemanticZoomInItemStyle360" TargetType="GridViewItem" BasedOn="{StaticResource SemanticZoomInItemStyleBase}">
            <Setter Property="Height" Value="139"/>
            <Setter Property="Width" Value="113"/>
            <Setter Property="Margin" Value="1,0,2,3"/>
        </Style>
        <!--4.5인치 WXGA(768 x 1280) 225% W:341.33334, H:546.22222 StatusBar:(51 / 2.25 = 22.67 ) 2개씩 표시 -->
        <Style x:Key="SemanticZoomInItemStyle341" TargetType="GridViewItem" BasedOn="{StaticResource SemanticZoomInItemStyleBase}">
            <Setter Property="Height" Value="165"/>
            <Setter Property="Width" Value="158"/>
            <Setter Property="Margin" Value="3,0,3,3"/>
        </Style>
        <!-- 4인치 WVGA(480 x 800) 150% W:320, H:512, StatusBar:(32 / 1.5 = 21.3) 2개씩 표시 -->
        <Style x:Key="SemanticZoomInItemStyle320" TargetType="GridViewItem" BasedOn="{StaticResource SemanticZoomInItemStyleBase}">
            <Setter Property="Height" Value="159"/>
            <Setter Property="Width" Value="148"/>
            <Setter Property="Margin" Value="3,0,3,3"/>
        </Style>

        <Style x:Key="SemanticZoomOutItemStyleBase" TargetType="GridViewItem" >
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        </Style>
        <Style x:Key="SemanticZoomOutItemStyle720" TargetType="GridViewItem" BasedOn="{StaticResource SemanticZoomOutItemStyleBase}">
            <Setter Property="Height" Value="120"/>
            <Setter Property="Width" Value="120"/>
            <Setter Property="FontSize" Value="38" />
        </Style>
        <Style x:Key="SemanticZoomOutItemStyle432" TargetType="GridViewItem" BasedOn="{StaticResource SemanticZoomOutItemStyleBase}">
            <Setter Property="Height" Value="70"/>
            <Setter Property="Width" Value="70"/>
            <Setter Property="FontSize" Value="22" />
        </Style>
        <Style x:Key="SemanticZoomOutItemStyle411" TargetType="GridViewItem" BasedOn="{StaticResource SemanticZoomOutItemStyleBase}">
            <Setter Property="Height" Value="66"/>
            <Setter Property="Width" Value="66"/>
            <Setter Property="FontSize" Value="21" />
        </Style>
        <Style x:Key="SemanticZoomOutItemStyle360" TargetType="GridViewItem" BasedOn="{StaticResource SemanticZoomOutItemStyleBase}">
            <Setter Property="Height" Value="65"/>
            <Setter Property="Width" Value="65"/>
            <Setter Property="FontSize" Value="20.5" />
        </Style>
        <Style x:Key="SemanticZoomOutItemStyle341" TargetType="GridViewItem" BasedOn="{StaticResource SemanticZoomOutItemStyleBase}">
            <Setter Property="Height" Value="78"/>
            <Setter Property="Width" Value="78"/>
            <Setter Property="FontSize" Value="23.5" />
        </Style>
        <Style x:Key="SemanticZoomOutItemStyle320" TargetType="GridViewItem" BasedOn="{StaticResource SemanticZoomOutItemStyleBase}">
            <Setter Property="Height" Value="73"/>
            <Setter Property="Width" Value="73"/>
            <Setter Property="FontSize" Value="22" />
        </Style>

        <DataTemplate x:Key="ZoomedInTemplate" x:DataType="data:StorageItemInfo">
            <!--<Grid Margin="0" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Width}">-->
            <Grid Margin="0">
                <!-- 모든 영역 터치를 위하서 Background="Transparent"속성 필요 -->
                <Grid Background="Transparent" 
                      Tapped="{x:Bind Tapped}" 
                      RightTapped="{x:Bind RightTapped}" 
                      Holding="{x:Bind Holding}" 
                      ToolTipService.ToolTip="{x:Bind Name}">
                    <FlyoutBase.AttachedFlyout>
                        <MenuFlyout>
                            <MenuFlyoutItem Tag="FolderToPlayList" x:Uid="TopMenu/Explorer/AddToPlayList" Text="[재생목록에 추가]" Tapped="{x:Bind ContextMenuTapped}" />
                        </MenuFlyout>
                    </FlyoutBase.AttachedFlyout>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <!--<Rectangle Margin="4" Fill="{ThemeResource SystemControlHighlightListLowBrush}" />-->
                    <Border Grid.Row="0" Margin="4" BorderThickness="0" Padding="0" >
                        <ContentPresenter>
                            <Grid>
                                <control:StorageItemPreview ImageItemsSource="{x:Bind ImageItemsSource, Mode=OneWay}" IsFile="{x:Bind IsFile}" />
                                <Grid Margin="4"
                                      HorizontalAlignment="Left"
                                      VerticalAlignment="Top"
                                      Visibility="{x:Bind ExistSubtitleExtensions, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Border CornerRadius="2" 
                                            Opacity="0.7"
                                            Background="{ThemeResource SystemControlForegroundAccentBrush}" />
                                    <TextBlock Text="{x:Bind SubtitleExtensions, Mode=OneWay}"
                                               FontSize="10"
                                               Padding="3,0,3,1"  
                                               Foreground="White" 
                                               FontWeight="Bold"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Center" />
                                </Grid>
                            </Grid>
                        </ContentPresenter>
                    </Border>
                    <StackPanel Grid.Row="1" Margin="6,0,6,2">
                        <StackPanel MinHeight="40">
                            <TextBlock Text="{x:Bind DisplayName}" 
                                       x:Phase="2" 
                                       MaxLines="2" 
                                       LineHeight="0"
                                       VerticalAlignment="Center" HorizontalAlignment="Left" 
                                       TextWrapping="Wrap" 
                                       Style="{ThemeResource BaseTextBlockStyle}"
                                       FontSize="13.5"
                                       FontWeight="Medium"/>
                            <TextBlock Text="{x:Bind OccuredError, Mode=OneWay}" 
                                       Visibility="{x:Bind OccuredError, Mode=OneWay, Converter={StaticResource StringToVisibilityConverter}}" 
                                       x:Phase="3" 
                                       Foreground="OrangeRed"
                                       VerticalAlignment="Center" HorizontalAlignment="Left" 
                                       TextWrapping="Wrap" 
                                       Style="{ThemeResource BaseTextBlockStyle}"
                                       FontSize="12"
                                       FontWeight="Bold"/>
                        </StackPanel>
                        <Grid Margin="0,6,0,2" Height="18" VerticalAlignment="Bottom">
                            <!--file 속성-->
                            <Grid Visibility="{x:Bind IsFile, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <TextBlock Text="{x:Bind Duration, Mode=OneWay, Converter={StaticResource DurationTimeConverter}}" 
                                           Visibility="{x:Bind IsOrderByName, Converter={StaticResource BooleanToVisibilityConverter}}"
                                           x:Phase="3" 
                                           Style="{ThemeResource BodyTextBlockStyle}"
                                           Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}" 
                                           HorizontalAlignment="Left" 
                                           FontSize="12"/>
                                <Grid Visibility="{x:Bind IsOrderByName, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=true}">
                                    <TextBlock Text="{x:Bind DateCreated.DateTime, Mode=OneWay, Converter={StaticResource DateTimeConverter}, ConverterParameter='\{0:d\}'}" 
                                               x:Phase="4" 
                                               Style="{StaticResource BodyTextBlockStyle}"
                                               Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                                               HorizontalAlignment="Left" 
                                               FontSize="12"/>
                                    <TextBlock Grid.Column="1" 
                                               Text="{x:Bind Size, Mode=OneWay, Converter={StaticResource FileSizeConverter}}" 
                                               x:Phase="5" 
                                               Style="{ThemeResource BodyTextBlockStyle}"
                                               Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                                               HorizontalAlignment="Right" 
                                               FontSize="12"/>
                                </Grid>
                            </Grid>
                            <!--folder 속성-->
                            <Grid Visibility="{x:Bind IsFile, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=true}">
                                <TextBlock Text="{x:Bind FileCountDescription, Mode=OneWay, Converter={StaticResource ResourceFormatConverter}, ConverterParameter='Format/Folder/Video/Count'}" 
                                            x:Phase="3" 
                                            Style="{ThemeResource BodyTextBlockStyle}"
                                            Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                                            HorizontalAlignment="Left" 
                                            FontSize="12">
                                </TextBlock>
                                <FontIcon Glyph="&#xE8B7;" Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}" 
                                          HorizontalAlignment="Right"
                                          VerticalAlignment="Bottom" 
                                          Margin="0,0,0,3"
                                          FontWeight="SemiLight"
                                          FontSize="15" Opacity="0.7"/>
                            </Grid>
                        </Grid>
                    </StackPanel>
                </Grid>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="ZoomedInGroupHeaderTemplate" x:DataType="data:StorageItemGroup">
            <TextBlock Text="{x:Bind Name}" Foreground="{ThemeResource SystemControlForegroundAccentBrush}" 
                       Style="{ThemeResource BaseTextBlockStyle}" />
        </DataTemplate>

        <DataTemplate x:Key="ZoomedOutTemplate" x:DataType="wuxdata:ICollectionViewGroup">
            <Border Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Height}"
                    Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Width}"
                    Margin="0">
                <TextBlock Text="{x:Bind Group.(data:StorageItemGroup.Name)}"
                           Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                           FontSize="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FontSize}"
                           FontWeight="SemiBold"
                           TextLineBounds="Tight"
                           OpticalMarginAlignment="TrimSideBearings"
                           IsColorFontEnabled="False"
                           IsTextScaleFactorEnabled="False"
                           Margin="3,0,0,0"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center" />
            </Border>
        </DataTemplate>
        
    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="ShowNoItemText">
                    <VisualState.StateTriggers>
                        <st:BooleanDataTrigger 
                            st:BooleanDataTrigger.TriggerValue="True"
                            st:BooleanDataTrigger.DataValue="{Binding HasNoFolder}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="NoItemTextGrid.Visibility" Value="Visible" />
                        <Setter Target="ExplorerGridView.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState x:Name="RefreshingState">
                    <VisualState.StateTriggers>
                        <st:BooleanDataTrigger 
                            st:BooleanDataTrigger.TriggerValue="False"
                            st:BooleanDataTrigger.DataValue="{Binding IsStopLoadingIndicator}" />
                    </VisualState.StateTriggers>
                    <VisualState.Storyboard>
                        <Storyboard x:Name="RotateStoryboard">
                            <DoubleAnimation To="0" From="360"
                                             Duration="0:0:1" RepeatBehavior="Forever"
                                             Storyboard.TargetName="RefreshButtonIcon"
                                             Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationZ)" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RefreshButton" Storyboard.TargetProperty="IsEnabled">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="False" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToUpperButton" Storyboard.TargetProperty="IsEnabled">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="False" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectButton" Storyboard.TargetProperty="IsEnabled">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="False" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState.Storyboard>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState x:Name="ListCheckState">
                    <VisualState.StateTriggers>
                        <st:BooleanDataTrigger 
                            st:BooleanDataTrigger.TriggerValue="True"
                            st:BooleanDataTrigger.DataValue="{Binding IsSelected}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="AllCheckFontIcon.Glyph" Value="&#xE739;" />
                        <Setter Target="AllCheckLabel.Text" Value="{Binding Tag, ElementName=AllCheckLabel}" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState x:Name="TopMenuDefaultState">
                    <VisualState.StateTriggers>
                        <st:BooleanDataTrigger 
                            st:BooleanDataTrigger.TriggerValue="False"
                            st:BooleanDataTrigger.DataValue="{Binding IsActionButtonSet}" />
                    </VisualState.StateTriggers>
                    <VisualState.Storyboard>
                        <Storyboard x:Name="TopMenuDefaultStoryboard">
                            <DoubleAnimation From="0" To="1" 
                                             Duration="0:0:1" 
                                             Storyboard.TargetName="DefaultButtonSet"
                                             Storyboard.TargetProperty="(Control.Opacity)" />
                        </Storyboard>
                    </VisualState.Storyboard>
                </VisualState>
                <VisualState x:Name="TopMenuActionState">
                    <VisualState.StateTriggers>
                        <st:BooleanDataTrigger 
                            st:BooleanDataTrigger.TriggerValue="True"
                            st:BooleanDataTrigger.DataValue="{Binding IsActionButtonSet}" />
                    </VisualState.StateTriggers>
                    <VisualState.Storyboard>
                        <Storyboard x:Name="TopMenuActionStoryboard">
                            <DoubleAnimation From="0" To="1" 
                                             Duration="0:0:1" 
                                             Storyboard.TargetName="ActionButtonSet"
                                             Storyboard.TargetProperty="UIElement.Opacity" />
                        </Storyboard>
                    </VisualState.Storyboard>
                    <!--<VisualState.Setters>
                        <Setter Target="ExplorerGridView.ItemContainerStyle" Value="{StaticResource GridViewItemExpanded731}" />
                    </VisualState.Setters>-->
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="720"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ExplorerGridView.ItemContainerStyleSelector" Value="{StaticResource StorageItemStyleSelector720}"></Setter>
                        <Setter Target="ExplorerIndexView.ItemContainerStyle" Value="{StaticResource SemanticZoomOutItemStyle720}"></Setter>
                        <Setter Target="AddFolderLabel.Visibility" Value="Visible"></Setter>
                        <Setter Target="ToUpperFolderLabel.Visibility" Value="Visible"></Setter>
                        <Setter Target="RefreshLabel.Visibility" Value="Visible"></Setter>
                        <Setter Target="SelectListLabel.Visibility" Value="Visible"></Setter>
                        <Setter Target="MenuBackLabel.Visibility" Value="Visible"></Setter>
                        <Setter Target="AllCheckLabel.Visibility" Value="Visible"></Setter>
                        <Setter Target="AddPlayListLabel.Visibility" Value="Visible"></Setter>
                        <Setter Target="RemoveLabel.Visibility" Value="Visible"></Setter>
                        <Setter Target="CodecInformationContent.MaxWidth" Value="406"></Setter>
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="432"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ExplorerGridView.ItemContainerStyleSelector" Value="{StaticResource StorageItemStyleSelector432}"></Setter>
                        <Setter Target="ExplorerIndexView.ItemContainerStyle" Value="{StaticResource SemanticZoomOutItemStyle432}"></Setter>
                        <Setter Target="Title.FontSize" Value="32"></Setter>
                        <Setter Target="Title.Margin" Value="12,0,0,0"></Setter>
                        <Setter Target="CodecInformationContent.MaxWidth" Value="358"></Setter>
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="411"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ExplorerGridView.ItemContainerStyleSelector" Value="{StaticResource StorageItemStyleSelector411}"></Setter>
                        <Setter Target="ExplorerIndexView.ItemContainerStyle" Value="{StaticResource SemanticZoomOutItemStyle411}"></Setter>
                        <Setter Target="Title.FontSize" Value="30"></Setter>
                        <Setter Target="Title.Margin" Value="12,0,0,0"></Setter>
                        <Setter Target="CodecInformationContent.MaxWidth" Value="337"></Setter>
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="360"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ExplorerGridView.ItemContainerStyleSelector" Value="{StaticResource StorageItemStyleSelector360}"></Setter>
                        <Setter Target="ExplorerIndexView.ItemContainerStyle" Value="{StaticResource SemanticZoomOutItemStyle360}"></Setter>
                        <Setter Target="Title.FontSize" Value="24"></Setter>
                        <Setter Target="Title.Margin" Value="52,0,0,0"></Setter>
                        <Setter Target="CurrentPath.FontSize" Value="12"></Setter>
                        <Setter Target="CurrentPathIcon.FontSize" Value="12"></Setter>
                        <Setter Target="CurrentPathPanel.Margin" Value="18,0,0,0"></Setter>
                        <Setter Target="CodecInformationContent.MaxWidth" Value="334"></Setter>
                        <Setter Target="NoItemIcon.FontSize" Value="22"></Setter>
                        <Setter Target="NoItemText.FontSize" Value="22"></Setter>
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="341"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ExplorerGridView.ItemContainerStyleSelector" Value="{StaticResource StorageItemStyleSelector341}"></Setter>
                        <Setter Target="ExplorerIndexView.ItemContainerStyle" Value="{StaticResource SemanticZoomOutItemStyle341}"></Setter>
                        <Setter Target="Title.FontSize" Value="22"></Setter>
                        <Setter Target="Title.Margin" Value="52,0,0,0"></Setter>
                        <Setter Target="CurrentPath.FontSize" Value="11"></Setter>
                        <Setter Target="CurrentPathIcon.FontSize" Value="11"></Setter>
                        <Setter Target="CurrentPathPanel.Margin" Value="18,0,0,0"></Setter>
                        <Setter Target="CodecInformationContent.MaxWidth" Value="317"></Setter>
                        <Setter Target="NoItemIcon.FontSize" Value="20"></Setter>
                        <Setter Target="NoItemText.FontSize" Value="20"></Setter>
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ExplorerGridView.ItemContainerStyleSelector" Value="{StaticResource StorageItemStyleSelector320}"></Setter>
                        <Setter Target="ExplorerIndexView.ItemContainerStyle" Value="{StaticResource SemanticZoomOutItemStyle320}"></Setter>
                        <Setter Target="Title.FontSize" Value="22"></Setter>
                        <Setter Target="Title.Margin" Value="52,0,0,0"></Setter>
                        <Setter Target="CurrentPath.FontSize" Value="11"></Setter>
                        <Setter Target="CurrentPathIcon.FontSize" Value="11"></Setter>
                        <Setter Target="CurrentPathPanel.Margin" Value="18,0,0,0"></Setter>
                        <Setter Target="TopMenuPanel.Margin" Value="0,0,0,0"></Setter>
                        <Setter Target="CodecInformationContent.MaxWidth" Value="294"></Setter>
                        <Setter Target="NoItemIcon.FontSize" Value="20"></Setter>
                        <Setter Target="NoItemText.FontSize" Value="20"></Setter>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid VerticalAlignment="Center" Margin="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="48"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TextBlock x:Name="Title" 
                       x:Uid="Explorer/Title"
                       Text="[폴더 &amp; 파일]"
                       Style="{ThemeResource TitleTextBlockStyle}" 
                       TextWrapping="NoWrap"
                       FontSize="36" 
                       Margin="12,0"
                       HorizontalAlignment="Left" 
                       VerticalAlignment="Center"/>
            <Grid Grid.Row="1"
                  x:Name="CurrentPathPanel"
                  Margin="18,6,6,0"
                  VerticalAlignment="Center"
                  Visibility="{Binding DisplayCurrentPath, Converter={StaticResource StringToVisibilityConverter}}">
                <FontIcon x:Name="CurrentPathIcon"
                          Glyph="&#xE8B7;"
                          FontWeight="SemiBold"
                          FontSize="14"
                          Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                          HorizontalAlignment="Left" 
                          VerticalAlignment="Center" />
                <TextBlock x:Name="CurrentPath"
                           Text="{Binding DisplayCurrentPath}"
                           TextWrapping="Wrap"
                           Margin="20,0,0,0"
                           FontWeight="SemiBold"
                           FontSize="14"
                           Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                           HorizontalAlignment="Left" 
                           VerticalAlignment="Center" />
            </Grid>
            <StackPanel x:Name="TopMenuPanel" Orientation="Horizontal" 
                        HorizontalAlignment="Right" VerticalAlignment="Center" Margin="6,0">
                <!-- Normal 상태 -->
                <StackPanel x:Name="DefaultButtonSet" Orientation="Horizontal" Visibility="{Binding IsActionButtonSet, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=True}">
                    <Button x:Name="AddFolderButton" 
                            Style="{StaticResource TopMenuBottonStyle}"
                            Visibility="{x:Bind Vm.IsAddFolder, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                            DataContext="{x:Bind Vm.UNCFolderFlyoutData}">
                        <!--Tapped="{x:Bind Vm.AddFolderTappedEventHandler}">-->
                        <Button.Content>
                            <Grid>
                                <!-- 폴더 추가 -->
                                <StackPanel Style="{StaticResource TopMenuButtonContentPanelStyle}"
                                            ToolTipService.ToolTip="{Binding Text, ElementName=AddFolderLabel}">
                                    <FontIcon Glyph="&#xE1DA;" FontSize="16" FontWeight="Normal" />
                                    <TextBlock x:Name="AddFolderLabel" x:Uid="TopMenu/Explorer/AddFolder" Text="[폴더 추가]" Style="{StaticResource TopMenuLabelStyle}"/>
                                </StackPanel>
                            </Grid>
                        </Button.Content>
                        <Button.Flyout>
                            <MenuFlyout Placement="Bottom">
                                <MenuFlyoutItem x:Uid="AddFolder/FolderPicker" Text="[폴더 선택기]" Tapped="{x:Bind Vm.AddLocalFolderTapped}"></MenuFlyoutItem>
                                <MenuFlyoutItem x:Uid="AddFolder/UNC" Text="[범용 명명 규칙 (UNC)]" Tapped="{x:Bind Vm.AddUNCFolderTapped}" ></MenuFlyoutItem>
                            </MenuFlyout>
                        </Button.Flyout>
                    </Button>
                    <Button x:Name="ToUpperButton"
                            Style="{StaticResource TopMenuBottonStyle}"
                            Tapped="{x:Bind Vm.ToUpperTapped}"
                            Visibility="{Binding IsAddFolder, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=True}">
                        <Button.Content>
                            <Grid>
                                <!-- 상위 폴더 -->
                                <StackPanel Style="{StaticResource TopMenuButtonContentPanelStyle}"
                                            ToolTipService.ToolTip="{Binding Text, ElementName=ToUpperFolderLabel}">
                                    <FontIcon Glyph="&#xE74A;" FontSize="16" FontWeight="Normal" />
                                    <TextBlock x:Name="ToUpperFolderLabel" x:Uid="TopMenu/Explorer/Upper" Text="[상위로 이동]" Style="{StaticResource TopMenuLabelStyle}"/>
                                </StackPanel>
                            </Grid>
                        </Button.Content>
                    </Button>
                    <!-- 새로고침 -->
                    <Button x:Name="RefreshButton"
                            Style="{StaticResource TopMenuBottonStyle}"
                            Tapped="{x:Bind Vm.RefreshTapped}"
                            ToolTipService.ToolTip="{Binding Text, ElementName=RefreshLabel}">
                        <Button.Content>
                            <StackPanel Style="{StaticResource TopMenuButtonContentPanelStyle}">
                                <FontIcon Glyph="&#xE72C;" FontSize="16" FontWeight="Normal" x:Name="RefreshButtonIcon">
                                    <FontIcon.Projection>
                                        <PlaneProjection/>
                                    </FontIcon.Projection>
                                </FontIcon>
                                <TextBlock x:Name="RefreshLabel" x:Uid="TopMenu/Common/Refresh" Text="[새로고침]" Style="{StaticResource TopMenuLabelStyle}"/>
                            </StackPanel>
                        </Button.Content>
                    </Button>
                    <!-- 선택 -->
                    <Button x:Name="SelectButton"
                            Style="{StaticResource TopMenuBottonStyle}"
                            Tapped="{x:Bind Vm.SelectFolderTapped}"
                            ToolTipService.ToolTip="{Binding Text, ElementName=SelectListLabel}">
                        <Button.Content>
                            <StackPanel Style="{StaticResource TopMenuButtonContentPanelStyle}">
                                <FontIcon Glyph="&#xE133;" FontSize="16" FontWeight="Normal" />
                                <TextBlock x:Name="SelectListLabel" x:Uid="TopMenu/Common/Check"  Text="[선택]" Style="{StaticResource TopMenuLabelStyle}"/>
                            </StackPanel>
                        </Button.Content>
                    </Button>
                </StackPanel>
                <!-- Action 상태 -->
                <StackPanel x:Name="ActionButtonSet" Orientation="Horizontal" Visibility="{Binding IsActionButtonSet, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <!-- 뒤로 -->
                    <Button Style="{StaticResource TopMenuBottonStyle}"
                            Tapped="{x:Bind Vm.BackNormalButtonSetTapped}"
                            ToolTipService.ToolTip="{Binding Text, ElementName=MenuBackLabel}">
                        <Button.Content>
                            <StackPanel Style="{StaticResource TopMenuButtonContentPanelStyle}">
                                <FontIcon Glyph="&#xE72B;" FontSize="16" FontWeight="Normal"/>
                                <TextBlock x:Name="MenuBackLabel" x:Uid="TopMenu/Common/Back" Text="[이전]" Style="{StaticResource TopMenuLabelStyle}"/>
                            </StackPanel>
                        </Button.Content>
                    </Button>
                    <!-- 선택 -->
                    <Button Style="{StaticResource TopMenuBottonStyle}"
                            Tapped="{x:Bind Vm.AllCheckFolderTapped}"
                            ToolTipService.ToolTip="{Binding Text, ElementName=AllCheckLabel}">
                        <Button.Content>
                            <StackPanel Style="{StaticResource TopMenuButtonContentPanelStyle}">
                                <FontIcon x:Name="AllCheckFontIcon" Glyph="&#xE73A;" FontSize="16" FontWeight="Normal"/>
                                <TextBlock x:Name="AllCheckLabel" x:Uid="TopMenu/Common/AllCheck"  Text="[전체선택]" Tag="[선택취소]" Style="{StaticResource TopMenuLabelStyle}"/>
                            </StackPanel>
                        </Button.Content>
                    </Button>
                    <!-- 재생목록에 추가 -->
                    <Button x:Name="AddToPlayListButton" 
                            Style="{StaticResource TopMenuBottonStyle}"
                            Tapped="{x:Bind Vm.AddToPlayListTapped}"
                            IsEnabled="{Binding IsSelected}"
                            Visibility="{Binding IsAddFolder, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=True}"
                            ToolTipService.ToolTip="{Binding Text, ElementName=AddPlayListLabel}">
                        <Button.Resources>
                            <Flyout x:Key="AddToPlayListFlyout" Placement="Right" >
                                <!-- x:Name="PlayListFlyoutContent"은 Flyout을 닫을때 사용-->
                                <StackPanel x:Name="AddToPlayListFlyoutContent" Width="{StaticResource FlyoutWidth}">
                                    <Button x:Name="NewPlayListButton"
                                            Width="{Binding Width, ElementName=AddToPlayListFlyoutContent}"
                                            Tapped="{x:Bind Vm.NewPlayListTapped}"
                                            Height="{StaticResource ListViewItemMinHeight}"
                                            Background="Transparent"
                                            HorizontalContentAlignment="Stretch"
                                            VerticalContentAlignment="Stretch"
                                            Padding="0"
                                            BorderThickness="0"
                                            Style="{StaticResource HamburgerButtonStyle}">
                                        <Button.Content>
                                            <StackPanel Orientation="Horizontal" Background="Transparent" >
                                                <FontIcon Margin="14,0,0,0" FontSize="16" FontWeight="Normal" FontFamily="Segoe MDL2 Assets" Glyph="&#xE109;" />
                                                <TextBlock Margin="20,0,0,0" x:Uid="TopMenu/Explorer/NewPlayList" Text="[새 재생 목록]" VerticalAlignment="Center"/>
                                            </StackPanel>
                                        </Button.Content>
                                    </Button>
                                    <Border Margin="0,6"
                                            Padding="6,0" 
                                            BorderThickness="0" 
                                            Height="1" 
                                            HorizontalAlignment="Left"
                                            Width="{Binding Width, ElementName=AddToPlayListFlyoutContent}" >
                                        <Rectangle Fill="{ThemeResource AppBarSeparatorForegroundThemeBrush}" Opacity="0.5" />
                                    </Border>
                                    <ListView ItemsSource="{Binding PlayListSource}"
                                              ItemContainerStyle="{StaticResource ListViewItemExpandedNoAnimation}"
                                              Padding="0,0"
                                              SelectionMode="None">
                                        <ListView.ItemTemplate>
                                            <DataTemplate x:DataType="data:MenuItem">
                                                <Grid ToolTipService.ToolTip="{x:Bind Name}">
                                                    <StackPanel HorizontalAlignment="Stretch" Background="Transparent" Orientation="Horizontal" 
                                                                Tapped="{x:Bind ItemTapped}">
                                                        <TextBlock Margin="0,0,0,0" Text="{x:Bind Name}" VerticalAlignment="Center"/>
                                                    </StackPanel>
                                                </Grid>
                                            </DataTemplate>
                                        </ListView.ItemTemplate>
                                    </ListView>
                                    <Border Margin="0,6"
                                            Padding="6,0" 
                                            BorderThickness="0" 
                                            Height="1" 
                                            HorizontalAlignment="Left"
                                            Width="{Binding Width, ElementName=AddToPlayListFlyoutContent}" >
                                        <Rectangle Fill="{ThemeResource AppBarSeparatorForegroundThemeBrush}" Opacity="0.5" />
                                    </Border>
                                    <CheckBox IsChecked="{x:Bind Vm.AddedAfterMovePlayList, Mode=TwoWay}" 
                                              x:Uid="Message/Check/MovePlayList"
                                              Content="[추가 후 재생목록으로 이동]" Margin="12,0" />
                                </StackPanel>
                            </Flyout>
                        </Button.Resources>
                        <Button.Content>
                            <StackPanel Style="{StaticResource TopMenuButtonContentPanelStyle}">
                                <FontIcon Glyph="&#xE728;" FontSize="16" FontWeight="Normal"/>
                                <TextBlock x:Name="AddPlayListLabel" x:Uid="TopMenu/Explorer/AddToPlayList" Text="[재생목록에 추가]" Style="{StaticResource TopMenuLabelStyle}"/>
                            </StackPanel>
                        </Button.Content>
                    </Button>
                    <!-- 삭제 -->
                    <Button Style="{StaticResource TopMenuBottonStyle}"
                            Tapped="{x:Bind Vm.RemoveFolderTapped}"
                            ToolTipService.ToolTip="{Binding Text, ElementName=RemoveLabel}"
                            IsEnabled="{Binding IsSelected}"
                            Visibility="{Binding IsAddFolder, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Button.Content>
                            <StackPanel Style="{StaticResource TopMenuButtonContentPanelStyle}">
                                <FontIcon Glyph="&#xE74D;" FontSize="16" FontWeight="Normal"/>
                                <TextBlock x:Name="RemoveLabel" x:Uid="TopMenu/Common/Remove" Text="[제거]" Style="{StaticResource TopMenuLabelStyle}"/>
                            </StackPanel>
                        </Button.Content>
                    </Button>
                </StackPanel>
            </StackPanel>
        </Grid>
        <Grid Grid.Row="1">
            <Grid Margin="12,48" x:Name="NoItemTextGrid" Visibility="Collapsed">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <FontIcon  x:Name="NoItemIcon" Glyph="&#xE1DA;" Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}" VerticalAlignment="Top"
                          FontSize="24" Margin="6"/>
                <TextBlock Grid.Column="1" x:Name="NoItemText" x:Uid="Explorer/NoItem" Text="[폴더 추가 버튼(우측 상단)을 클릭해서 영화가 담겨있는 폴더를 추가하세요.]" 
                           Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}" 
                           TextWrapping="Wrap"
                           FontSize="24"/>
            </Grid>
            <SemanticZoom>
                <SemanticZoom.ZoomedInView>
                    <GridView x:Name="ExplorerGridView"
                              Margin="6,0,0,0"
                              ItemsSource="{x:Bind StorageItemGroupSource.View}" 
                              SelectionMode="{Binding SelectionMode}"
                              Loaded="{x:Bind Vm.GridViewLoaded}"
                              SelectionChanged="{x:Bind Vm.ExplorerGridViewSelectionChanged}"
                              ItemTemplate="{StaticResource ZoomedInTemplate}"
                              ItemContainerStyleSelector="{x:Bind Vm.VideoItemStyleSelector, Mode=OneWay}" >
                        <!--<GridView.ItemContainerTransitions>
                            <TransitionCollection>
                                <EdgeUIThemeTransition Edge="Left" />
                                <AddDeleteThemeTransition />
                            </TransitionCollection>
                        </GridView.ItemContainerTransitions>-->
                        <!--<GridView.Transitions>
                            <TransitionCollection>
                                <EdgeUIThemeTransition Edge="Left" />
                            </TransitionCollection>
                        </GridView.Transitions>
                        <GridView.HeaderTransitions>
                            <TransitionCollection>
                                <EdgeUIThemeTransition Edge="Left" />
                            </TransitionCollection>
                        </GridView.HeaderTransitions>-->
                        <!--<GridView.ItemContainerStyle>
                            <Style TargetType="GridViewItem" >
                                <Setter Property="Margin" Value="0 0 0 0"/>
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            </Style>
                        </GridView.ItemContainerStyle>-->
                        <!--<GridView.HeaderTemplate>
                            <DataTemplate x:DataType="vm:ExplorerViewModel">
                                <Grid>
                                    <Grid HorizontalAlignment="Right" Margin="0,6,0,-6" Canvas.ZIndex="1">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock x:Uid="OrderBy" VerticalAlignment="Center" Style="{StaticResource CaptionTextBlockStyle}" />
                                        <ComboBox x:Name="ListOrder" 
                                                  Grid.Column="1"
                                                  ItemsSource="{x:Bind OrderBySource}"
                                                  SelectedValue="{x:Bind OrderBy, Mode=TwoWay}"
                                                  Foreground="{StaticResource SystemControlForegroundAccentBrush}"
                                                  Padding="0"
                                                  Margin="12,0"
                                                  BorderThickness="0"
                                                  FontSize="12"
                                                  FontWeight="SemiBold"
                                                  HorizontalAlignment="Left" 
                                                  HorizontalContentAlignment ="Left"
                                                  VerticalAlignment="Center" 
                                                  VerticalContentAlignment="Center"
                                                  DisplayMemberPath="Name"
                                                  SelectedValuePath="Key" />
                                    </Grid>
                                </Grid>
                            </DataTemplate>
                        </GridView.HeaderTemplate>-->
                        <GridView.GroupStyle>
                            <GroupStyle HeaderTemplate="{StaticResource ZoomedInGroupHeaderTemplate}" />
                        </GridView.GroupStyle>
                    </GridView>
                </SemanticZoom.ZoomedInView>
                <SemanticZoom.ZoomedOutView>
                    <GridView x:Name="ExplorerIndexView" 
                              Margin="6"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              ItemContainerStyle="{StaticResource SemanticZoomOutItemStyleBase}"
                              ItemsSource="{x:Bind StorageItemGroupSource.View.CollectionGroups}" 
                              SelectionMode="None" 
                              ItemTemplate="{StaticResource ZoomedOutTemplate}">
                    </GridView>
                </SemanticZoom.ZoomedOutView>
            </SemanticZoom>
            <Grid HorizontalAlignment="Right" VerticalAlignment="Top" 
                  Margin="0,0,0,0"
                  Visibility="{x:Bind Vm.ShowOrderBy, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock x:Uid="OrderBy" VerticalAlignment="Center" Style="{StaticResource CaptionTextBlockStyle}" />
                <ComboBox x:Name="ListOrder" 
                            Grid.Column="1"
                            ItemsSource="{x:Bind Vm.OrderBySource}"
                            SelectedValue="{x:Bind Vm.OrderBy, Mode=TwoWay}"
                            Foreground="{StaticResource SystemControlForegroundAccentBrush}"
                            Padding="0"
                            Margin="12,0"
                            BorderThickness="0"
                            FontSize="12"
                            FontWeight="SemiBold"
                            HorizontalAlignment="Left" 
                            HorizontalContentAlignment ="Left"
                            VerticalAlignment="Center" 
                            VerticalContentAlignment="Center"
                            DisplayMemberPath="Name"
                            SelectedValuePath="Key" />
            </Grid>
        </Grid>
        <Button Grid.Row="1" 
                Margin="-3,0,0,0"
                x:Name="CodecInformation" Width="0" Height="0"
                VerticalAlignment="Bottom" HorizontalAlignment="Left">
            <Button.Flyout>
                <Flyout Placement="Right">
                    <Flyout.FlyoutPresenterStyle>
                        <Style TargetType="FlyoutPresenter">
                            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"></Setter>
                            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"></Setter>
                        </Style>
                    </Flyout.FlyoutPresenterStyle>
                    <control:MediaFileInformation x:Name="CodecInformationContent" MaxHeight="480" MaxWidth="296" />
                </Flyout>
            </Button.Flyout>
        </Button>
    </Grid>
</Page>
