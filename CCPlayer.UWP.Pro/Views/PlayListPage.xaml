<Page
    x:Class="CCPlayer.UWP.Views.PlayListPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:CCPlayer.UWP.Views"
    xmlns:control="using:CCPlayer.UWP.Views.Controls"
    xmlns:model="using:CCPlayer.UWP.Models"
    xmlns:converter="using:CCPlayer.UWP.Converters"
    xmlns:trigger="using:CCPlayer.UWP.StateTriggers"
    xmlns:selector="using:CCPlayer.UWP.Selectors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    DataContext="{Binding PlayList, Source={StaticResource Locator}}"
    mc:Ignorable="d">

    <Page.Transitions>
        <TransitionCollection>
            <NavigationThemeTransition>
                <NavigationThemeTransition.DefaultNavigationTransitionInfo>
                    <ContinuumNavigationTransitionInfo />
                </NavigationThemeTransition.DefaultNavigationTransitionInfo>
            </NavigationThemeTransition>
        </TransitionCollection>
    </Page.Transitions>

    <Page.Resources>
        <converter:StringToVisibilityConverter x:Key="StringToVisibilityConverter" />
        <converter:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converter:TimeSpanToVisibilityConverter x:Key="TimeSpanToVisibilityConverter" />
        <converter:DurationTimeConverter x:Key="DurationTimeConverter" />
        <converter:FileSizeConverter x:Key="FileSizeConverter" />
        <selector:OddEvenStyleSelector x:Key="OddEvenStyleSelector" 
                                       EvenStyle="{StaticResource EvenStyle}" 
                                       OddStyle="{StaticResource OddStyle}"
                                       OrderChnagedStyle="{StaticResource OrderChnagedStyle}" />

        <Style x:Key="EvenStyle" TargetType="ListViewItem">
            <Setter Property="Margin" Value="6,0"/>
            <Setter Property="Padding" Value="3,0"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <!--<Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <ListViewItemPresenter SelectionCheckMarkVisualEnabled="False" SelectedBackground="Orange"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>-->
        </Style>

        <Style x:Key="OddStyle" TargetType="ListViewItem">
            <Setter Property="Background" Value="{ThemeResource SystemChromeMediumLowColor}" />
            <Setter Property="Margin" Value="6,0"/>
            <Setter Property="Padding" Value="3,0"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        </Style>

        <Style x:Key="OrderChnagedStyle" TargetType="ListViewItem">
            <Setter Property="Background" Value="{StaticResource SystemControlBackgroundAccentBrush}" />
            <Setter Property="Margin" Value="6,0"/>
            <Setter Property="Padding" Value="3,0"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        </Style>

        <DataTemplate x:Key="PlayListFileDefaultTemplate" x:DataType="model:PlayListFile" >
            <Grid>
                <Grid Background="Transparent" MinHeight="56" 
                      Tapped="{x:Bind Tapped}" 
                      RightTapped="{x:Bind RightTapped}" 
                      Holding="{x:Bind Holding}" 
                      ToolTipService.ToolTip="{x:Bind Name}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <!-- 썸네일 -->
                        <ColumnDefinition Width="3*" />
                        <!-- 제목 -->
                        <ColumnDefinition Width="*" />
                        <!-- 상영시간 -->
                    </Grid.ColumnDefinitions>
                    <Border Margin="0,0,0,0" BorderThickness="0" Padding="0" 
                            Width="77" Height="43">
                        <ContentPresenter>
                            <Grid>
                                <control:StorageItemPreview ImageItemsSource="{x:Bind ImageItemsSource, Mode=OneWay}" IsFile="True" />
                                <Grid Margin="3"
                                      HorizontalAlignment="Left"
                                      VerticalAlignment="Top"
                                      Visibility="{x:Bind ExistSubtitleExtensions, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Border CornerRadius="1.5" 
                                            Opacity="0.7"
                                            Background="{ThemeResource SystemControlForegroundAccentBrush}" />
                                    <TextBlock Text="{x:Bind SubtitleExtensions, Mode=OneWay}"
                                               FontSize="8.5"
                                               Padding="2,0,2,1"  
                                               Foreground="White" 
                                               FontWeight="Bold"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Center" />
                                </Grid>
                            </Grid>
                        </ContentPresenter>
                    </Border>
                    <StackPanel Grid.Column="1" 
                                Margin="6,0,0,0"
                                VerticalAlignment="Center" 
                                HorizontalAlignment="Left" >
                        <TextBlock Text="{x:Bind DisplayName, Mode=OneWay}" 
                                   x:Phase="1" 
                                   MaxLines="2" 
                                   LineHeight="0"
                                   TextWrapping="Wrap" 
                                   Style="{StaticResource BaseTextBlockStyle}"
                                   FontSize="14"
                                   FontWeight="Normal" />
                        <TextBlock Text="{x:Bind OccuredError, Mode=OneWay}" 
                                   x:Phase="2" 
                                   LineHeight="0"
                                   TextWrapping="Wrap" 
                                   Visibility="{Binding OccuredError, Converter={StaticResource StringToVisibilityConverter}}"
                                   Style="{StaticResource BaseTextBlockStyle}"
                                   Foreground="OrangeRed"
                                   FontSize="12"
                                   FontWeight="Bold" />
                    </StackPanel>
                    <StackPanel Grid.Column="2" Margin="6,0,6,0" VerticalAlignment="Center">
                        <!-- x:Bind의 경우 dll의 컨버터의 경우 language가 왜 null인가? -->
                        <TextBlock Margin="0,2"  
                                   Text="{x:Bind Duration, Mode=OneWay, Converter={StaticResource DurationTimeConverter}, ConverterParameter='h:m:s'}"
                                   Style="{StaticResource BodyTextBlockStyle}"
                                   Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}" 
                                   HorizontalAlignment="Right" 
                                   FontSize="13">
                        </TextBlock>
                        <TextBlock x:Name="PausedTimeTextBlock" 
                                   Margin="0,2" 
                                   Text="{x:Bind PausedTime, Mode=OneWay, Converter={StaticResource DurationTimeConverter}, ConverterParameter='h:m:s'}"
                                   Style="{StaticResource BodyTextBlockStyle}"
                                   HorizontalAlignment="Right" 
                                   FontWeight="SemiBold"
                                   FontSize="12"
                                   Foreground="{StaticResource SystemControlForegroundAccentBrush}"
                                   Visibility="{Binding PausedTime, Converter={StaticResource TimeSpanToVisibilityConverter}}">
                        </TextBlock>
                    </StackPanel>
                </Grid>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="PlayListFile480Template" x:DataType="model:PlayListFile">
            <Grid>
                <Grid Background="Transparent" Height="56" 
                      Tapped="{x:Bind Tapped}" 
                      RightTapped="{x:Bind RightTapped}" 
                      Holding="{x:Bind Holding}" 
                      ToolTipService.ToolTip="{x:Bind Name}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <!-- 썸네일 -->
                        <ColumnDefinition Width="3*" />
                        <!-- 제목 -->
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <!-- 상영시간 -->
                    </Grid.ColumnDefinitions>
                    <Border Margin="6,0,0,0" BorderThickness="0" Padding="0" 
                        Width="77" Height="43">
                        <ContentPresenter>
                            <Grid>
                                <control:StorageItemPreview ImageItemsSource="{x:Bind ImageItemsSource, Mode=OneWay}" IsFile="True" />
                                <Grid Margin="3"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Top"
                                  Visibility="{x:Bind ExistSubtitleExtensions, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Border CornerRadius="1.5" 
                                        Opacity="0.7"
                                        Background="{ThemeResource SystemControlForegroundAccentBrush}" />
                                    <TextBlock Text="{x:Bind SubtitleExtensions, Mode=OneWay}"
                                           FontSize="8.5"
                                           Padding="2,0,2,1"  
                                           Foreground="White" 
                                           FontWeight="Bold"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Center" />
                                </Grid>
                            </Grid>
                        </ContentPresenter>
                    </Border>
                    <StackPanel Grid.Column="1" 
                                Margin="6,0,0,0"
                                VerticalAlignment="Center" 
                                HorizontalAlignment="Left" >
                        <TextBlock Text="{x:Bind DisplayName, Mode=OneWay}" 
                                   x:Phase="1" 
                                   MaxLines="2" 
                                   LineHeight="0"
                                   TextWrapping="Wrap" 
                                   Style="{StaticResource BaseTextBlockStyle}"
                                   FontSize="14"
                                   FontWeight="Normal" />
                        <TextBlock Text="{x:Bind OccuredError, Mode=OneWay}" 
                                   Visibility="{Binding OccuredError, Converter={StaticResource StringToVisibilityConverter}}"
                                   x:Phase="2" 
                                   LineHeight="0"
                                   TextWrapping="Wrap" 
                                   Style="{StaticResource BaseTextBlockStyle}"
                                   Foreground="OrangeRed"
                                   FontSize="12"
                                   FontWeight="Bold" />
                    </StackPanel>
                    <TextBlock Grid.Column="2" 
                           Text="{x:Bind Size, Mode=OneWay, Converter={StaticResource FileSizeConverter}}" 
                           x:Phase="2" 
                           Margin="6,0,0,0"
                           Style="{StaticResource BodyTextBlockStyle}"
                           Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Right" 
                           FontSize="13"/>
                    <StackPanel Grid.Column="3" Margin="6,0,12,0" VerticalAlignment="Center">
                        <!-- x:Bind의 경우 dll의 컨버터의 경우 language가 왜 null인가? -->
                        <TextBlock Margin="0,2"  
                               Text="{x:Bind Duration, Mode=OneWay, Converter={StaticResource DurationTimeConverter}, ConverterParameter='h:m:s'}"
                               Style="{StaticResource BodyTextBlockStyle}"
                               Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}" 
                               HorizontalAlignment="Right" 
                               FontSize="13">
                        </TextBlock>
                        <TextBlock x:Name="PausedTimeTextBlock" 
                               Margin="0,2" 
                               Text="{x:Bind PausedTime, Mode=OneWay, Converter={StaticResource DurationTimeConverter}, ConverterParameter='h:m:s'}"
                               Style="{StaticResource BodyTextBlockStyle}"
                               HorizontalAlignment="Right" 
                               FontWeight="SemiBold"
                               FontSize="12"
                               Foreground="{StaticResource SystemControlForegroundAccentBrush}"
                               Visibility="{Binding PausedTime, Converter={StaticResource TimeSpanToVisibilityConverter}}">
                        </TextBlock>
                    </StackPanel>
                </Grid>
            </Grid>
        </DataTemplate>


    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="RefreshingState">
                    <VisualState.StateTriggers>
                        <trigger:BooleanDataTrigger 
                            trigger:BooleanDataTrigger.TriggerValue="False"
                            trigger:BooleanDataTrigger.DataValue="{Binding IsStopLoadingIndicator}" />
                    </VisualState.StateTriggers>
                    <VisualState.Storyboard>
                        <Storyboard x:Name="RotateStoryboard">
                            <DoubleAnimation To="0" From="360"
                                             Duration="0:0:1" RepeatBehavior="Forever"
                                             Storyboard.TargetName="RefreshButtonIcon"
                                             Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationZ)" />
                        </Storyboard>
                    </VisualState.Storyboard>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState x:Name="ReorderState">
                    <VisualState.StateTriggers>
                        <trigger:BooleanDataTrigger 
                            trigger:BooleanDataTrigger.TriggerValue="True"
                            trigger:BooleanDataTrigger.DataValue="{Binding IsReorderMode}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="TopMenuSelectButton.IsEnabled" Value="False" />
                        <Setter Target="PlayListListView.ReorderMode" Value="Enabled" />
                        <Setter Target="PlayListListView.AllowDrop" Value="True" />
                        <Setter Target="PlayListListView.CanReorderItems" Value="True" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState x:Name="ListCheckState">
                    <VisualState.StateTriggers>
                        <trigger:BooleanDataTrigger 
                            trigger:BooleanDataTrigger.TriggerValue="True"
                            trigger:BooleanDataTrigger.DataValue="{Binding IsSelected}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="AllCheckFontIcon.Glyph" Value="&#xE739;" />
                        <Setter Target="AllCheckLabel.Text" Value="{Binding Tag, ElementName=AllCheckLabel}" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState x:Name="TopMenuDefaultState">
                    <VisualState.StateTriggers>
                        <trigger:BooleanDataTrigger 
                            trigger:BooleanDataTrigger.TriggerValue="False"
                            trigger:BooleanDataTrigger.DataValue="{Binding IsActionButtonSet}" />
                    </VisualState.StateTriggers>
                    <VisualState.Storyboard>
                        <Storyboard x:Name="TopMenuDefaultStoryboard">
                            <DoubleAnimation From="0" To="1" 
                                             Duration="0:0:1" 
                                             Storyboard.TargetName="DefaultButtonSet"
                                             Storyboard.TargetProperty="(Control.Opacity)" />
                        </Storyboard>
                    </VisualState.Storyboard>
                </VisualState>
                <VisualState x:Name="TopMenuActionState">
                    <VisualState.StateTriggers>
                        <trigger:BooleanDataTrigger 
                            trigger:BooleanDataTrigger.TriggerValue="True"
                            trigger:BooleanDataTrigger.DataValue="{Binding IsActionButtonSet}" />
                    </VisualState.StateTriggers>
                    <VisualState.Storyboard>
                        <Storyboard x:Name="TopMenuActionStoryboard">
                            <DoubleAnimation From="0" To="1" 
                                             Duration="0:0:1" 
                                             Storyboard.TargetName="ActionButtonSet"
                                             Storyboard.TargetProperty="UIElement.Opacity" />
                        </Storyboard>
                    </VisualState.Storyboard>
                    <!--<VisualState.Setters>
                        <Setter Target="ExplorerGridView.ItemContainerStyle" Value="{StaticResource GridViewItemExpanded731}" />
                    </VisualState.Setters>-->
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="720"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="DeleteLabel.Visibility" Value="Visible"></Setter>
                        <Setter Target="DeletePlayListLabel.Visibility" Value="Visible"></Setter>
                        <Setter Target="RefreshLabel.Visibility" Value="Visible"></Setter>
                        <Setter Target="SelectListLabel.Visibility" Value="Visible"></Setter>
                        <Setter Target="ReorderPlayListLabel.Visibility" Value="Visible"></Setter>
                        <Setter Target="MenuBackLabel.Visibility" Value="Visible"></Setter>
                        <Setter Target="AllCheckLabel.Visibility" Value="Visible"></Setter>
                        <Setter Target="DeleteItemLabel.Visibility" Value="Visible"></Setter>
                        <Setter Target="ResetPausedTimeItemLabel.Visibility" Value="Visible"></Setter>
                        <Setter Target="PlayListListView.ItemTemplate" Value="{StaticResource PlayListFile480Template}" />
                        <Setter Target="CodecInformationContent.MaxWidth" Value="408"></Setter>
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="480"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="PlayListListView.ItemTemplate" Value="{StaticResource PlayListFile480Template}" />
                        <Setter Target="CodecInformationContent.MaxWidth" Value="408"></Setter>
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="432"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Title.FontSize" Value="32"></Setter>
                        <Setter Target="Title.Margin" Value="12,0,0,0"></Setter>
                        <Setter Target="CodecInformationContent.MaxWidth" Value="358"></Setter>
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="411"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="CodecInformationContent.MaxWidth" Value="337"></Setter>
                        <Setter Target="Title.FontSize" Value="30"></Setter>
                        <Setter Target="Title.Margin" Value="12,0,0,0"></Setter>
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="360"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Title.FontSize" Value="24"></Setter>
                        <Setter Target="Title.Margin" Value="52,0,6,0"></Setter>
                        <Setter Target="CodecInformationContent.MaxWidth" Value="334"></Setter>
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="341"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Title.FontSize" Value="22"></Setter>
                        <Setter Target="Title.Margin" Value="52,0,6,0"></Setter>
                        <Setter Target="CodecInformationContent.MaxWidth" Value="317"></Setter>
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Title.FontSize" Value="22"></Setter>
                        <Setter Target="Title.Margin" Value="52,0,6,0"></Setter>
                        <Setter Target="TopMenuPanel.Margin" Value="0,0,0,0"></Setter>
                        <Setter Target="CodecInformationContent.MaxWidth" Value="294"></Setter>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid VerticalAlignment="Top" Margin="0,0,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="48"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TextBlock x:Name="Title"
                       Text="{x:Bind Vm.CurrentPlayList.Name, Mode=OneWay}"
                       Style="{ThemeResource TitleTextBlockStyle}" 
                       TextWrapping="NoWrap"
                       FontSize="36" 
                       Margin="12,0"
                       HorizontalAlignment="Left" 
                       VerticalAlignment="Center"/>
            <StackPanel x:Name="TopMenuPanel" Grid.Row="1" Orientation="Horizontal" 
                        HorizontalAlignment="Right" VerticalAlignment="Center" Margin="6,0">
                <!-- Normal 상태 -->
                <StackPanel x:Name="DefaultButtonSet" Orientation="Horizontal" Visibility="{Binding IsActionButtonSet, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=True}">
                    <StackPanel Orientation="Horizontal" Visibility="{Binding IsHideEditPlayListMenu, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=True}">
                        <!-- 이름변경 -->
                        <Button Style="{StaticResource TopMenuBottonStyle}"
                                Tapped="{x:Bind Vm.RenameTappedEventHandler}"
                                ToolTipService.ToolTip="{Binding Text, ElementName=RenameLabel}"
                                DataContext="{x:Bind Vm.UpdatePlayList}">
                            <Button.Content>
                                <StackPanel Style="{StaticResource TopMenuButtonContentPanelStyle}">
                                    <FontIcon Glyph="&#xE70F;" FontSize="16" FontWeight="Normal" x:Name="RenameButtonIcon"/>
                                    <TextBlock x:Name="DeleteLabel" x:Uid="TopMenu/PlayList/Rename" Text="[이름 변경]" Style="{StaticResource TopMenuLabelStyle}"/>
                                </StackPanel>
                            </Button.Content>
                        </Button>
                        <!-- 삭제 -->
                        <Button Style="{StaticResource TopMenuBottonStyle}"
                                Tapped="{x:Bind Vm.DeletePlayListTappedEventHandler}"
                                ToolTipService.ToolTip="{Binding Text, ElementName=RemovePlayListLabel}">
                            <Button.Content>
                                <StackPanel Style="{StaticResource TopMenuButtonContentPanelStyle}">
                                    <FontIcon Glyph="&#xE74D;" FontSize="16" FontWeight="Normal" x:Name="DeletePlayListButtonIcon">
                                        <FontIcon.Projection>
                                            <PlaneProjection/>
                                        </FontIcon.Projection>
                                    </FontIcon>
                                    <TextBlock x:Name="DeletePlayListLabel" x:Uid="TopMenu/Common/Delete" Text="[삭제]" Style="{StaticResource TopMenuLabelStyle}"/>
                                </StackPanel>
                            </Button.Content>
                        </Button>
                        <AppBarSeparator/>
                    </StackPanel>
                    <!-- 새로고침 -->
                    <Button Style="{StaticResource TopMenuBottonStyle}"
                            Tapped="{x:Bind Vm.RefreshTappedEventHandler}"
                            ToolTipService.ToolTip="{Binding Text, ElementName=RefreshLabel}">
                        <Button.Content>
                            <StackPanel Style="{StaticResource TopMenuButtonContentPanelStyle}">
                                <FontIcon Glyph="&#xE72C;" FontSize="16" FontWeight="Normal" x:Name="RefreshButtonIcon">
                                    <FontIcon.Projection>
                                        <PlaneProjection/>
                                    </FontIcon.Projection>
                                </FontIcon>
                                <TextBlock x:Name="RefreshLabel" x:Uid="TopMenu/Common/Refresh" Text="[새로고침]" Style="{StaticResource TopMenuLabelStyle}"/>
                            </StackPanel>
                        </Button.Content>
                    </Button>
                    <!-- 선택 -->
                    <Button x:Name="TopMenuSelectButton"
                            Style="{StaticResource TopMenuBottonStyle}"
                            Tapped="{x:Bind Vm.SelectItemTappedEventHandler}"
                            ToolTipService.ToolTip="{Binding Text, ElementName=SelectListLabel}">
                        <Button.Content>
                            <StackPanel Style="{StaticResource TopMenuButtonContentPanelStyle}">
                                <FontIcon Glyph="&#xE133;" FontSize="16" FontWeight="Normal" />
                                <TextBlock x:Name="SelectListLabel" x:Uid="TopMenu/Common/Check" Text="[선택]" Style="{StaticResource TopMenuLabelStyle}"/>
                            </StackPanel>
                        </Button.Content>
                    </Button>
                    <!-- 순서변경 -->
                    <ToggleButton IsChecked="{x:Bind Vm.IsReorderMode, Mode=TwoWay}"
                                  ToolTipService.ToolTip="{Binding Text, ElementName=ReorderPlayListLabel}"
                                  Style="{StaticResource TopMenuToggleButtonStyle}" >
                        <ToggleButton.Content>
                            <StackPanel Style="{StaticResource TopMenuButtonContentPanelStyle}">
                                <FontIcon Glyph="&#xE8CB;" FontSize="16" FontWeight="Normal" />
                                <TextBlock x:Name="ReorderPlayListLabel" x:Uid="TopMenu/PlayList/Reorder" Text="[순서변경]" Style="{StaticResource TopMenuLabelStyle}"/>
                            </StackPanel>
                        </ToggleButton.Content>
                    </ToggleButton>
                </StackPanel>
                <!-- Action 상태 -->
                <StackPanel x:Name="ActionButtonSet" Orientation="Horizontal" Visibility="{Binding IsActionButtonSet, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <!-- 뒤로 -->
                    <Button Style="{StaticResource TopMenuBottonStyle}"
                            Tapped="{x:Bind Vm.BackNormalButtonSetTappedEventHandler}"
                            ToolTipService.ToolTip="{Binding Text, ElementName=MenuBackLabel}">
                        <Button.Content>
                            <StackPanel Style="{StaticResource TopMenuButtonContentPanelStyle}">
                                <FontIcon Glyph="&#xE72B;" FontSize="16" FontWeight="Normal"/>
                                <TextBlock x:Name="MenuBackLabel" x:Uid="TopMenu/Common/Back" Text="[이전]" Style="{StaticResource TopMenuLabelStyle}"/>
                            </StackPanel>
                        </Button.Content>
                    </Button>
                    <!-- 선택 -->
                    <Button Style="{StaticResource TopMenuBottonStyle}"
                            Tapped="{x:Bind Vm.AllCheckItemTappedEventHandler}"
                            ToolTipService.ToolTip="{Binding Text, ElementName=AllCheckLabel}">
                        <Button.Content>
                            <StackPanel Style="{StaticResource TopMenuButtonContentPanelStyle}">
                                <FontIcon x:Name="AllCheckFontIcon" Glyph="&#xE73A;" FontSize="16" FontWeight="Normal"/>
                                <TextBlock x:Name="AllCheckLabel" x:Uid="TopMenu/Common/AllCheck" Text="[전체 선택]" Tag="[선택취소]" Style="{StaticResource TopMenuLabelStyle}"/>
                            </StackPanel>
                        </Button.Content>
                    </Button>
                    <!-- 시간초기화 -->
                    <Button Style="{StaticResource TopMenuBottonStyle}"
                            Tapped="{x:Bind Vm.ResetPausedTimeItemTappedEventHandler}"
                            ToolTipService.ToolTip="{Binding Text, ElementName=ResetPausedTimeItemLabel}"
                            IsEnabled="{Binding IsSelected}">
                        <Button.Content>
                            <StackPanel Style="{StaticResource TopMenuButtonContentPanelStyle}">
                                <FontIcon Glyph="&#xE2AD;" FontSize="16" FontWeight="Normal"/>
                                <TextBlock x:Name="ResetPausedTimeItemLabel" x:Uid="TopMenu/PlayList/ResetPausedTime" Text="[시간 초기화]" Style="{StaticResource TopMenuLabelStyle}"/>
                            </StackPanel>
                        </Button.Content>
                    </Button>
                    <!-- 삭제 -->
                    <Button Style="{StaticResource TopMenuBottonStyle}"
                            Tapped="{x:Bind Vm.DeleteItemTappedEventHandler}"
                            ToolTipService.ToolTip="{Binding Text, ElementName=RemoveLabel}"
                            IsEnabled="{Binding IsSelected}">
                        <Button.Content>
                            <StackPanel Style="{StaticResource TopMenuButtonContentPanelStyle}">
                                <FontIcon Glyph="&#xE74D;" FontSize="16" FontWeight="Normal"/>
                                <TextBlock x:Name="DeleteItemLabel" x:Uid="TopMenu/Common/Delete" Text="[삭제]" Style="{StaticResource TopMenuLabelStyle}"/>
                            </StackPanel>
                        </Button.Content>
                    </Button>
                </StackPanel>
            </StackPanel>
        </Grid>
        <ListView Grid.Row="1" 
                  x:Name="PlayListListView" 
                  ItemsSource="{x:Bind Vm.PlayListFileSource}"
                  ItemTemplate="{StaticResource PlayListFileDefaultTemplate}"
                  ItemContainerStyleSelector="{StaticResource OddEvenStyleSelector}"
                  SelectionMode="{x:Bind Vm.SelectionMode, Mode=OneWay}" 
                  SelectedIndex="{x:Bind Vm.SelectedIndex, Mode=TwoWay}"
                  SelectionChanged="{x:Bind Vm.PlayListListViewSelectionChangedEventHandler}">
        </ListView>
        <Button Grid.Row="1" 
                Margin="-3,0,0,0"
                x:Name="CodecInformation" Width="0" Height="0"
                VerticalAlignment="Bottom" HorizontalAlignment="Left">
            <Button.Flyout>
                <Flyout Placement="Right">
                    <Flyout.FlyoutPresenterStyle>
                        <Style TargetType="FlyoutPresenter">
                            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"></Setter>
                            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"></Setter>
                        </Style>
                    </Flyout.FlyoutPresenterStyle>
                    <control:MediaFileInformation x:Name="CodecInformationContent" MaxHeight="480" MaxWidth="296" />
                </Flyout>
            </Button.Flyout>
        </Button>
    </Grid>
</Page>
