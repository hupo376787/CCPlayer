<UserControl
    x:Name="GeneralSetting"
    x:Class="CCPlayer.WP81.Views.GeneralSettings"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:CCPlayer.WP81.Views"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
    xmlns:converter="using:CCPlayer.WP81.Converters"
    xmlns:velostep="using:Lime.Xaml.Controls"
    xmlns:helper="using:CCPlayer.WP81.Helpers"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    DataContext="{Binding GeneralSetting, Source={StaticResource Locator}}"
    d:DesignHeight="300"
    d:DesignWidth="400">

    <UserControl.Resources>
        <converter:VisibilityConverter x:Key="VisibilityConverter" />
    </UserControl.Resources>
    
    <StackPanel>
        <!-- Overide H/W Back Button -->
        <Grid Margin="0,0,0,6">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock x:Uid="StartUpSection" 
                       Text="[시작 화면 설정]"
                       Grid.Row="0"
                       Foreground="{ThemeResource ToggleSwitchHeaderForegroundThemeBrush}" 
                       FontSize="{StaticResource TextStyleMediumFontSize}" />
            <ComboBox Grid.Row="1"
                      ItemsSource="{Binding StartUpSectionSource}"
                      SelectedValue="{Binding StartUpSection, Mode=TwoWay}"
                      DisplayMemberPath="Name"
                      SelectedValuePath="Key">
            </ComboBox>
        </Grid>
        <!-- Overide H/W Back Button -->
        <Grid Margin="0,0,0,6">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock x:Uid="HardwareBackButtonAction" 
                       Text="[탐색기에서 뒤로가기 물리키 동작]"
                       Grid.Row="0"
                       Foreground="{ThemeResource ToggleSwitchHeaderForegroundThemeBrush}" 
                       FontSize="{StaticResource TextStyleMediumFontSize}" />
            <ComboBox Grid.Row="1"
                      ItemsSource="{Binding HardwareBackButtonActionSource}"
                      SelectedValue="{Binding Settings.General.HardwareBackButtonAction, Mode=TwoWay}"
                      DisplayMemberPath="Name"
                      SelectedValuePath="Key">
            </ComboBox>
        </Grid>
        <!-- Use All Video Section -->
        <ToggleSwitch x:Name="UseAllVideoSectionSwitch" 
                      x:Uid="UseAllVideoHub"
                      FontSize="{StaticResource TextStyleLargeFontSize}" 
                      IsOn="{Binding UseAllVideoSection, Mode=TwoWay}"/>
        <!-- Background Color -->
        <Grid Margin="0,0,0,6">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock x:Uid="HubBackgroundColor" 
                       Grid.Row="0"
                       Foreground="{ThemeResource ToggleSwitchHeaderForegroundThemeBrush}" 
                       FontSize="{StaticResource TextStyleMediumFontSize}" />
            <velostep:ColorPicker x:Name="BackgroundColorPicker" 
                                  x:Uid="SelectItem"
                                  SelectedColor="{Binding Settings.General.BackgroundColor, Mode=TwoWay}"
                                  Grid.Row="1">
            </velostep:ColorPicker>
        </Grid>
        <!-- Foreground Color -->
        <Grid Margin="0,0,0,6">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock x:Uid="HubForegroundColor" 
                       Grid.Row="0"
                       Foreground="{ThemeResource ToggleSwitchHeaderForegroundThemeBrush}" 
                       FontSize="{StaticResource TextStyleMediumFontSize}" />
            <velostep:ColorPicker x:Name="FontColorPicker" 
                                  x:Uid="SelectItem"
                                  SelectedColor="{Binding Settings.General.ForegroundColor, Mode=TwoWay}"
                                  Grid.Row="1"/>
        </Grid>
        <!-- SubForeground Color -->
        <Grid Margin="0,0,0,6">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock x:Uid="HubSubForegroundColor" 
                       Grid.Row="0"
                       Foreground="{ThemeResource ToggleSwitchHeaderForegroundThemeBrush}" 
                       FontSize="{StaticResource TextStyleMediumFontSize}" />
            <velostep:ColorPicker x:Name="SubFontColorPicker" 
                                  x:Uid="SelectItem"
                                  Grid.Row="1"
                                  SelectedColor="{Binding Settings.General.SubForegroundColor, Mode=TwoWay}"/>
        </Grid>
        <!-- Font Manager -->
        <Grid Margin="0,0,0,6">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock x:Uid="FontManager/Header" 
                       Text="[설치한 사용자 폰트를 관리합니다. (유료 폰트 사용에 대한 법적 책임은 본인에게 있습니다.)]"
                       Grid.Row="0"
                       Foreground="{ThemeResource ToggleSwitchHeaderForegroundThemeBrush}"
                       FontSize="{StaticResource TextStyleMediumFontSize}" />
            <Button x:Uid="FontManager/Button" 
                    x:Name="FontManagerButton"
                    Tag="SettingsAppBarButton"
                    Content="[폰트 매니저]" 
                    DataContext="{Binding ElementName=GeneralSetting}"
                    Grid.Row="1" 
                    Margin="0,2,0,0"
                    HorizontalAlignment="Left" >
                <Button.Flyout>
                    <Flyout Placement="Full" 
                            helper:FlyoutHelper.Parent="{Binding ElementName=FontManagerButton}"
                            helper:FlyoutHelper.IsOpen="{Binding DataContext.IsFlyoutOpen, ElementName=GeneralSetting, Mode=TwoWay}">
                        <!-- 
                        데이터 템플릿 안에서 커맨드를 사용하려면 최상위에 DataContext가  바인딩이 되어야 하며, 부모 listview의 이름으로 DataContext에 접근해야 하는듯..
                        <ic:InvokeCommandAction Command="{Binding DataContext.DeleteFontCommand, ElementName=FontListView}" />
                        -->
                        <Grid DataContext="{Binding DataContext}">
                            <!--<Grid.ChildrenTransitions>
                                <TransitionCollection>
                                    <EdgeUIThemeTransition/>
                                </TransitionCollection>
                            </Grid.ChildrenTransitions>-->

                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <StackPanel Grid.Row="0" Margin="19,0,0,26.5">
                                <TextBlock x:Uid="FontManager/Title" Text="[폰트 관리자]" Style="{ThemeResource TitleTextBlockStyle}" Margin="0,12,0,0"/>
                            </StackPanel>

                            <Grid Grid.Row="1" x:Name="ContentRoot" Margin="19,9.5,19,0">
                                <StackPanel>
                                    <ToggleSwitch x:Name="UseSaveFontMKVSwitch"
                                                  x:Uid="SaveTruTypeFontInMKV"
                                                  Header="[MKV내의 트루타입폰트 저장]"
                                                  IsOn="{Binding Settings.General.UseSaveFontInMkv, Mode=TwoWay}"
                                                  Margin="0,0,0,6"  />
                                    <Grid Margin="0,12,0,6">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <TextBlock x:Uid="FontExternal/Import/Header" 
                                                   Text="[외부의 폰트(TTF/OTF)를 앱으로 설치할 수 있습니다.]"
                                                   Grid.Row="0"
                                                   Foreground="{ThemeResource ToggleSwitchHeaderForegroundThemeBrush}"
                                                   FontSize="{StaticResource TextStyleMediumFontSize}" />
                                        <Button x:Uid="FontExternal/Import/Button"
                                                x:Name="FontExternalImportButton"
                                                Content="[폰트 가져오기]"
                                                Tag="FontManagerButton"
                                                Grid.Row="1" Command="{Binding ImportFontCommand}">
                                        </Button>
                                    </Grid>
                                    <Grid Margin="0,12,0,6">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <TextBlock x:Uid="FontFamily/List" 
                                                   Text="[폰트 리스트]"
                                                   Grid.Row="0"
                                                   Foreground="{ThemeResource ToggleSwitchHeaderForegroundThemeBrush}"
                                                   FontSize="{StaticResource TextStyleMediumFontSize}" />
                                        <ListView x:Name="FontListView"
                                                  ItemsSource="{Binding FontSource}"
                                                  CommonNavigationTransitionInfo.IsStaggerElement="True"
                                                  Grid.Row="1">
                                            <i:Interaction.Behaviors>
                                                <ic:EventTriggerBehavior EventName="Loaded">
                                                    <ic:InvokeCommandAction Command="{Binding LoadedFontListCommand}" />
                                                </ic:EventTriggerBehavior>
                                            </i:Interaction.Behaviors>
                                            <ListView.ItemContainerStyle>
                                                <Style TargetType="ListViewItem">
                                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                                </Style>
                                            </ListView.ItemContainerStyle>
                                            <ListView.ItemTemplate>
                                                <DataTemplate>
                                                    <Grid Margin="6" x:Name="grd">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*" />
                                                            <ColumnDefinition Width="Auto" />
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock Text="{Binding Name}"
                                                                   Grid.Column="0"
                                                                   FontFamily="{Binding Key}"
                                                                   FontSize="{StaticResource TextStyleExtraLargeFontSize}" />
                                                        <Grid Grid.Column="1"
                                                              Margin="6" 
                                                              Visibility="{Binding Payload, Converter={StaticResource VisibilityConverter}, ConverterParameter=CustomFont}"
                                                              Tag="FontManagerButton">
                                                            <SymbolIcon Symbol="Delete">
                                                                <SymbolIcon.RenderTransform>
                                                                    <CompositeTransform ScaleX="1.2" ScaleY="1.2" />
                                                                </SymbolIcon.RenderTransform>
                                                            </SymbolIcon>
                                                            <i:Interaction.Behaviors>
                                                                <ic:EventTriggerBehavior EventName="Tapped">
                                                                    <ic:InvokeCommandAction Command="{Binding DataContext.DeleteFontCommand, ElementName=FontListView}" />
                                                                </ic:EventTriggerBehavior>
                                                            </i:Interaction.Behaviors>
                                                            
                                                        </Grid>
                                                    </Grid>
                                                </DataTemplate>
                                            </ListView.ItemTemplate>
                                        </ListView>
                                    </Grid>
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </Flyout>
                </Button.Flyout>
            </Button>
        </Grid>
    </StackPanel>
</UserControl>
