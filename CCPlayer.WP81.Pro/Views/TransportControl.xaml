<UserControl
    x:Name="TransportControlPanel"
    x:Class="CCPlayer.WP81.Views.TransportControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
    xmlns:local="using:CCPlayer.WP81.Views"
    xmlns:common="using:CCPlayer.WP81.Views.Common"
    xmlns:converter="using:CCPlayer.WP81.Converters"
    xmlns:ad="using:CCPlayer.WP81.Views.Advertising"
    xmlns:helper="using:CCPlayer.WP81.Helpers"
    DataContext="{Binding TransportControl, Source={StaticResource Locator}}"
    mc:Ignorable="d"
    d:DesignHeight="400"
    d:DesignWidth="640">

    <UserControl.Resources>
        <x:String x:Key="ImageUriBasePath">Assets</x:String>
        <x:String x:Key="ImageUriTextSize">appbar.text.size.png</x:String>
        <x:String x:Key="ImageUriTimerForward">appbar.timer.forward.png</x:String>
        <x:String x:Key="ImageUriGlobeWire">appbar.globe.wire.png</x:String>
        <x:String x:Key="ImageUriTimerPlay">appbar.timer.play.png</x:String>
        <x:String x:Key="ImageUriSoundMute">appbar.sound.mute.png</x:String>
        <x:String x:Key="ImageUriSound0">appbar.sound.0.png</x:String>
        <x:String x:Key="ImageUriSound1">appbar.sound.1.png</x:String>
        <x:String x:Key="ImageUriSound2">appbar.sound.2.png</x:String>
        <x:String x:Key="ImageUriSound3">appbar.sound.3.png</x:String>
        <x:String x:Key="ImageUriSoundLeftRight">appbar.sound.left.right.png</x:String>
        <x:String x:Key="ImageUriPower">appbar.power.png</x:String>
        <x:Double x:Key="RunningTime">0</x:Double>

        <converter:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        <converter:EnumToStringConverter x:Key="EnumToStringConverter"/>
        <converter:ThemePathConverter x:Key="ThemePathConverter" />
        <converter:TimeConverter x:Key="TimeConverter"/>
        <converter:TimeConverter2 x:Key="TimeConverter2"/>
        <converter:NumberToBoolConverter x:Key="NumberToBoolConverter"/>
        <converter:StringFormatConverter x:Key="StringFormatConverter"/>
        <converter:WrapGridMaximumRowsOrColumnsConverter x:Key="WrapGridMaximumRowsOrColumnsConverter"/>
        <converter:VisibilityConverter x:Key="VisibilityConverter"/>

        <!--<converter:ImageSourceConverter x:Key="ImageSourceConverter"/>
        -->

        <x:Double x:Key="RectangleButtonWidth">40</x:Double>
        <x:Double x:Key="RectangleButtonMinWidth">52</x:Double>
        <x:Double x:Key="FlyoutHeaderTextSizeLarge">30</x:Double>
        <x:Double x:Key="FlyoutHeaderTextSizeMedium">16</x:Double>
        <x:Double x:Key="FlyoutHeaderTextSizeSmall">12</x:Double>
        <SolidColorBrush x:Key="FlyoutHeaderTextBrush">#FFB0B0B0</SolidColorBrush>
        <!--<SolidColorBrush x:Key="MediaPlayerButtonBackgroundBrush">#58323232</SolidColorBrush>-->

        <Thickness x:Key="PhoneBorderThickness">0</Thickness>
        <Thickness x:Key="PhoneButtonContentPadding">0</Thickness>
        <x:Double x:Key="PhoneButtonMinHeight">42</x:Double>
        <x:Double x:Key="PhoneButtonMinWidth">42</x:Double>
        <Thickness x:Key="PhoneTouchTargetOverhang">0</Thickness>
        <Style x:Key="FlyoutHeaderIconToggleButtonStyle" TargetType="ToggleButton">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{ThemeResource PhoneForegroundBrush}"/>
            <Setter Property="Foreground" Value="{ThemeResource PhoneForegroundBrush}"/>
            <Setter Property="BorderThickness" Value="{ThemeResource PhoneBorderThickness}"/>
            <Setter Property="FontFamily" Value="{ThemeResource PhoneFontFamilyNormal}"/>
            <Setter Property="FontWeight" Value="{ThemeResource PhoneButtonFontWeight}"/>
            <Setter Property="FontSize" Value="{ThemeResource TextStyleLargeFontSize}"/>
            <Setter Property="Padding" Value="{ThemeResource PhoneButtonContentPadding}"/>
            <Setter Property="MinHeight" Value="{ThemeResource PhoneButtonMinHeight}"/>
            <Setter Property="MinWidth" Value="{ThemeResource PhoneButtonMinWidth}"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="EnabledBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1"/>
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="EnabledBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1"/>
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="EnabledBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="2"/>
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="EnabledBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="2"/>
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="EnabledBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="{ThemeResource PhoneTouchTargetOverhang}" RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <CompositeTransform TranslateX="0" TranslateY="0" />
                                </Border.RenderTransform>
                                <ContentPresenter x:Name="EnabledContent" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MediaPlayerButtonStyle" TargetType="ButtonBase">
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <!--<Setter Property="Background" Value="{StaticResource RepeatButtonDisabledBackgroundThemeBrush}" />-->
            <!--Setter Property="Background" Value="#58323232" /-->
            <Setter Property="Background" Value="{StaticResource PhoneBackgroundBrush}" />
            <Setter Property="Foreground" Value="{StaticResource PhoneForegroundBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource PhoneForegroundBrush}"/>
            <Setter Property="Width" Value="50"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="MinWidth" Value="0" />
            <Setter Property="MinHeight" Value="0" />
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ButtonBase">
                        <Grid Height="{TemplateBinding Width}" Width="{TemplateBinding Height}">
                            <Border CornerRadius="100" x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}"  BorderThickness="{TemplateBinding BorderThickness}" >
                                <Border CornerRadius="100"  Background="{TemplateBinding Background}" Opacity="0.3" />
                            </Border>
                            <!--<Border CornerRadius="100" x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" Background="{StaticResource MediaPlayerButtonBackgroundBrush}" BorderThickness="{TemplateBinding BorderThickness}" /-->
                            <ContentControl x:Name="ContentPresenter" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" RenderTransformOrigin="0.5,0.5" />
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="Background">
                                                <!--<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneButtonBasePressedForegroundBrush}"/>-->
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneForegroundBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneBackgroundBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledColor}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledColor}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MediaPlayerButtonStyleRect" TargetType="ButtonBase">
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{StaticResource PhoneForegroundBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource PhoneForegroundBrush}"/>
            <Setter Property="Width" Value="{StaticResource RectangleButtonWidth}"/>
            <Setter Property="Height" Value="{StaticResource RectangleButtonWidth}"/>
            <Setter Property="MinWidth" Value="{StaticResource RectangleButtonMinWidth}" />
            <Setter Property="MinHeight" Value="{StaticResource RectangleButtonMinWidth}" />
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="BorderThickness" Value="1.3" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ButtonBase">
                        <Grid  Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                            <Border CornerRadius="4" x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" />
                            <ContentControl x:Name="ContentPresenter" Content="{TemplateBinding Content}" 
                                            Foreground="{TemplateBinding Foreground}" ContentTemplate="{TemplateBinding ContentTemplate}" 
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                            Margin="{TemplateBinding Padding}" RenderTransformOrigin="0.5,0.5" >
                                <ContentControl.RenderTransform>
                                    <CompositeTransform ScaleX="1" ScaleY="1"/>
                                </ContentControl.RenderTransform>
                            </ContentControl>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="Background">
                                                <!--
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneButtonBasePressedForegroundBrush}"/>
                                                -->
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneForegroundBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneBackgroundBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledColor}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledColor}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="SliderBorderThemeBrush" Color="Transparent"/>
        <SolidColorBrush x:Key="SliderTrackBorderThemeBrush" Color="#99808080" />
        <Thickness x:Key="SliderBorderThemeThickness">0</Thickness>
        <FontFamily x:Key="ContentControlThemeFontFamily">Segoe WP</FontFamily>
        <x:Double x:Key="ControlContentThemeFontSize">12</x:Double>
        <x:Double x:Key="SliderOutsideTickBarThemeHeight">5</x:Double>
        <x:Double x:Key="SliderTrackThemeHeight">6</x:Double>
        <SolidColorBrush x:Key="SliderDisabledBorderThemeBrush" Color="Transparent"/>
        <Style x:Key="TimelineSliderStyle" TargetType="Slider">
            <Setter Property="Background" Value="{ThemeResource SliderTrackBackgroundThemeBrush}"/>
            <Setter Property="BorderBrush" Value="{ThemeResource SliderBorderThemeBrush}"/>
            <Setter Property="BorderThickness" Value="{ThemeResource SliderBorderThemeThickness}"/>
            <Setter Property="Foreground" Value="{ThemeResource SliderTrackDecreaseBackgroundThemeBrush}"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="ManipulationMode" Value="None"/>
            <Setter Property="IsThumbToolTipEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Slider">
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.Resources>
                                <Style x:Key="SliderThumbStyle" TargetType="Thumb">
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Setter Property="BorderBrush" Value="{ThemeResource SliderThumbBorderThemeBrush}"/>
                                    <Setter Property="Background" Value="{ThemeResource SliderThumbBackgroundThemeBrush}"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Thumb">
                                                <Border CornerRadius="9.5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                                <Style x:Key="SliderThumbOverStyle" TargetType="Thumb">
                                    <Setter Property="BorderThickness" Value="0.8"/>
                                    <Setter Property="BorderBrush" Value="{ThemeResource SliderThumbBorderThemeBrush}"/>
                                    <Setter Property="Background" Value="{ThemeResource SliderThumbBackgroundThemeBrush}"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Thumb">

                                                <Grid>
                                                    <Path x:Name="HorizontalThumbTop" Fill="{TemplateBinding Background}" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="5,0,0,-6" Data="M 0,0 11,0 -5,11Z" UseLayoutRounding="False" d:LayoutOverrides="Width"/>
                                                    <Border CornerRadius="50" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="5" Background="Transparent"/>
                                                </Grid>

                                                <!--
                                                <Border CornerRadius="50" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="5" Background="Transparent"/>
                                                -->
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Grid.Resources>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="Released">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HorizontalThumb"/>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HorizontalThumbLagre"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HorizontalThumbLagre"/>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HorizontalThumb"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="HorizontalBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SliderDisabledBorderThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="VerticalBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SliderDisabledBorderThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="HorizontalDecreaseRect">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SliderTrackDecreaseDisabledBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="HorizontalTrackRect">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SliderTrackDisabledBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="HorizontalTrackRect">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SliderTrackDisabledBorderThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="VerticalDecreaseRect">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SliderTrackDecreaseDisabledBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="VerticalTrackRect">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SliderTrackDisabledBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="VerticalTrackRect">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SliderTrackDisabledBorderThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="HorizontalThumb">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SliderThumbDisabledBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="HorizontalThumb">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SliderThumbDisabledBorderThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="VerticalThumb">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SliderThumbDisabledBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="VerticalThumb">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SliderThumbDisabledBorderThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="TopTickBar">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SliderTickMarkOutsideDisabledForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="HorizontalInlineTickBar">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SliderTickMarkInlineDisabledForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BottomTickBar">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SliderTickMarkOutsideDisabledForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="LeftTickBar">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SliderTickMarkOutsideDisabledForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="VerticalInlineTickBar">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SliderTickMarkInlineDisabledForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="RightTickBar">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SliderTickMarkOutsideDisabledForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter x:Name="HeaderContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Style="{StaticResource HeaderContentPresenterStyle}"/>
                            <Grid x:Name="SliderContainer" Background="Transparent" Grid.Row="1">
                                <Grid x:Name="HorizontalTemplate">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="25"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="25"/>
                                    </Grid.RowDefinitions>
                                    <!--Rectangle x:Name="HorizontalTrackRect" Grid.ColumnSpan="3" Fill="{TemplateBinding Background}" Grid.Row="1" Stroke="{ThemeResource SliderTrackBorderThemeBrush}"/-->
                                    <Rectangle x:Name="HorizontalTrackRect" Grid.ColumnSpan="3" Fill="{ThemeResource SliderTrackBorderThemeBrush}" Grid.Row="1"  Opacity="0.8"/>
                                    <!--Rectangle x:Name="HorizontalDecreaseRect" Fill="{TemplateBinding Foreground}" Grid.Row="1"/-->
                                    <Rectangle x:Name="HorizontalDecreaseRect" Fill="{ThemeResource SliderThumbBorderThemeBrush}" Grid.Row="1" />
                                    <TickBar x:Name="TopTickBar" Grid.ColumnSpan="3" Fill="{ThemeResource SliderTickmarkOutsideBackgroundThemeBrush}" Height="{ThemeResource SliderOutsideTickBarThemeHeight}" Margin="-4.5,0" Visibility="Collapsed"/>
                                    <TickBar x:Name="HorizontalInlineTickBar" Grid.ColumnSpan="3" Fill="{ThemeResource SliderTickMarkInlineBackgroundThemeBrush}" Height="{ThemeResource SliderTrackThemeHeight}" Margin="-4.5,0" Grid.Row="1" Visibility="Collapsed"/>
                                    <TickBar x:Name="BottomTickBar" Grid.ColumnSpan="3" Fill="{ThemeResource SliderTickmarkOutsideBackgroundThemeBrush}" Height="{ThemeResource SliderOutsideTickBarThemeHeight}" Margin="-4.5,0" Grid.Row="2" Visibility="Collapsed"/>
                                    <Thumb x:Name="HorizontalThumb" AutomationProperties.AccessibilityView="Raw" Background="{ThemeResource SliderThumbBackgroundThemeBrush}" Grid.Column="1" DataContext="{TemplateBinding Value}" Grid.RowSpan="3" Style="{StaticResource SliderThumbStyle}" Width="16" Height="16" Margin="-0.3,20,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Opacity="1" />
                                    <Thumb x:Name="HorizontalThumbLagre" AutomationProperties.AccessibilityView="Raw" Background="{ThemeResource SliderThumbBackgroundThemeBrush}" Grid.Column="1" DataContext="{TemplateBinding Value}" Grid.RowSpan="3" Style="{StaticResource SliderThumbOverStyle}" Width="25" Height="25" Margin="0,0,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Opacity="0"/>
                                    <Rectangle x:Name="HorizontalBorder" Grid.ColumnSpan="3" Grid.RowSpan="3" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
                                </Grid>
                                <Grid x:Name="VerticalTemplate" Visibility="Collapsed">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="13.5"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="13.5"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Rectangle x:Name="VerticalTrackRect" Grid.Column="1" Fill="{TemplateBinding Background}" Grid.RowSpan="3" Stroke="{ThemeResource SliderTrackBorderThemeBrush}"/>
                                    <Rectangle x:Name="VerticalDecreaseRect" Grid.Column="1" Fill="{TemplateBinding Foreground}" Grid.Row="2"/>
                                    <TickBar x:Name="LeftTickBar" Fill="{ThemeResource SliderTickmarkOutsideBackgroundThemeBrush}" HorizontalAlignment="Right" Margin="0,0,1.5,0" Grid.RowSpan="3" Visibility="Collapsed" Width="{ThemeResource SliderOutsideTickBarThemeHeight}"/>
                                    <TickBar x:Name="VerticalInlineTickBar" Grid.Column="1" Fill="{ThemeResource SliderTickMarkInlineBackgroundThemeBrush}" Grid.RowSpan="3" Visibility="Collapsed" Width="{ThemeResource SliderTrackThemeHeight}"/>
                                    <TickBar x:Name="RightTickBar" Grid.Column="2" Fill="{ThemeResource SliderTickmarkOutsideBackgroundThemeBrush}" HorizontalAlignment="Left" Margin="1.5,0,0,0" Grid.RowSpan="3" Visibility="Collapsed" Width="{ThemeResource SliderOutsideTickBarThemeHeight}"/>
                                    <Thumb x:Name="VerticalThumb" AutomationProperties.AccessibilityView="Raw" Background="{ThemeResource SliderThumbBackgroundThemeBrush}" Grid.Column="1" DataContext="{TemplateBinding Value}" Height="{ThemeResource SliderTrackThemeHeight}" Grid.Row="1" Style="{StaticResource SliderThumbStyle}" Width="{ThemeResource SliderTrackThemeHeight}"/>
                                    <Rectangle x:Name="VerticalBorder" Grid.Column="1" Grid.RowSpan="3" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
                                </Grid>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Thickness x:Key="FlyoutContentPanelPortraitThemeMargin">0,25.5,0,0</Thickness>
        <Thickness x:Key="FlyoutContentPanelLandscapeThemeMargin">0,0,0,0</Thickness>
        <Style x:Key="ButtonMenuFlyoutPresenterStyle" TargetType="FlyoutPresenter">
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="MinHeight" Value="{ThemeResource FlyoutThemeMinHeight}"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="FlyoutPresenter">
                        <Border VerticalAlignment="Top" x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" FlowDirection="LeftToRight">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="OrientationStates">
                                    <VisualState x:Name="Portrait"/>
                                    <VisualState x:Name="Landscape">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="ScrollViewer">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlyoutContentPanelLandscapeThemeMargin}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ScrollViewer x:Name="ScrollViewer" AutomationProperties.AccessibilityView="Raw" FlowDirection="{TemplateBinding FlowDirection}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" Margin="{ThemeResource FlyoutContentPanelPortraitThemeMargin}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}">
                                <Grid>
                                    <Rectangle Fill="{ThemeResource FlyoutBackgroundThemeBrush}" Opacity="0.5" />
                                    <!--Canvas Background="{ThemeResource FlyoutBackgroundThemeBrush}" Opacity="0.5" /-->
                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <x:Double x:Key="SliderTrackThemeHeight2">11</x:Double>
        <Style x:Key="FlyoutSliderStyle" TargetType="Slider">
            <Setter Property="Background" Value="{ThemeResource SliderThumbDisabledBackgroundThemeBrush}"/>
            <Setter Property="BorderBrush" Value="{ThemeResource SliderBorderThemeBrush}"/>
            <Setter Property="BorderThickness" Value="{ThemeResource SliderBorderThemeThickness}"/>
            <Setter Property="Foreground" Value="{ThemeResource SliderTrackDecreaseBackgroundThemeBrush}"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="ManipulationMode" Value="None"/>
            <Setter Property="IsThumbToolTipEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Slider">
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.Resources>
                                <Style x:Key="SliderThumbStyle" TargetType="Thumb">
                                    <Setter Property="BorderThickness" Value="0.8"/>
                                    <Setter Property="BorderBrush" Value="{ThemeResource SliderThumbBorderThemeBrush}"/>
                                    <Setter Property="Background" Value="{ThemeResource SliderThumbBackgroundThemeBrush}"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Thumb">
                                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Grid.Resources>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="HorizontalBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SliderDisabledBorderThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="VerticalBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SliderDisabledBorderThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="HorizontalDecreaseRect">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SliderTrackDecreaseDisabledBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="HorizontalTrackRect">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SliderTrackDisabledBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="HorizontalTrackRect">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SliderTrackDisabledBorderThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="VerticalDecreaseRect">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SliderTrackDecreaseDisabledBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="VerticalTrackRect">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SliderTrackDisabledBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="VerticalTrackRect">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SliderTrackDisabledBorderThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="HorizontalThumb">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SliderThumbDisabledBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="HorizontalThumb">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SliderThumbDisabledBorderThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="VerticalThumb">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SliderThumbDisabledBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="VerticalThumb">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SliderThumbDisabledBorderThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="TopTickBar">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SliderTickMarkOutsideDisabledForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="HorizontalInlineTickBar">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SliderTickMarkInlineDisabledForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BottomTickBar">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SliderTickMarkOutsideDisabledForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="LeftTickBar">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SliderTickMarkOutsideDisabledForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="VerticalInlineTickBar">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SliderTickMarkInlineDisabledForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="RightTickBar">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SliderTickMarkOutsideDisabledForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter x:Name="HeaderContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Style="{StaticResource HeaderContentPresenterStyle}"/>
                            <Grid x:Name="SliderContainer" Background="Transparent" Grid.Row="1">
                                <Grid x:Name="HorizontalTemplate">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="17.5"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="30.5"/>
                                    </Grid.RowDefinitions>
                                    <Rectangle x:Name="HorizontalTrackRect" Grid.ColumnSpan="3" Fill="{TemplateBinding Background}" Grid.Row="1" Stroke="{ThemeResource SliderTrackBorderThemeBrush}"/>
                                    <Rectangle x:Name="HorizontalDecreaseRect" Fill="{TemplateBinding Foreground}" Grid.Row="1"/>
                                    <TickBar x:Name="TopTickBar" Grid.ColumnSpan="3" Fill="{ThemeResource SliderTickmarkOutsideBackgroundThemeBrush}" Height="{ThemeResource SliderOutsideTickBarThemeHeight}" Margin="-4.5,0" Visibility="Collapsed"/>
                                    <TickBar x:Name="HorizontalInlineTickBar" Grid.ColumnSpan="3" Fill="{ThemeResource SliderTickMarkInlineBackgroundThemeBrush}" Height="{ThemeResource SliderTrackThemeHeight2}" Margin="-4.5,0" Grid.Row="1" Visibility="Collapsed"/>
                                    <TickBar x:Name="BottomTickBar" Grid.ColumnSpan="3" Fill="{ThemeResource SliderTickmarkOutsideBackgroundThemeBrush}" Height="{ThemeResource SliderOutsideTickBarThemeHeight}" Margin="-4.5,0" Grid.Row="2" Visibility="Collapsed"/>
                                    <Thumb x:Name="HorizontalThumb" AutomationProperties.AccessibilityView="Raw" Background="{ThemeResource SliderThumbBackgroundThemeBrush}" Grid.Column="1" DataContext="{TemplateBinding Value}" Height="25" Margin="0,11,0,0" Grid.RowSpan="3" Style="{StaticResource SliderThumbStyle}" VerticalAlignment="Top" Width="12.5"/>
                                    <Rectangle x:Name="HorizontalBorder" Grid.ColumnSpan="3" Grid.RowSpan="3" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
                                </Grid>
                                <Grid x:Name="VerticalTemplate" Visibility="Collapsed">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="13.5"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="13.5"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Rectangle x:Name="VerticalTrackRect" Grid.Column="1" Fill="{TemplateBinding Background}" Grid.RowSpan="3" Stroke="{ThemeResource SliderTrackBorderThemeBrush}"/>
                                    <Rectangle x:Name="VerticalDecreaseRect" Grid.Column="1" Fill="{TemplateBinding Foreground}" Grid.Row="2"/>
                                    <TickBar x:Name="LeftTickBar" Fill="{ThemeResource SliderTickmarkOutsideBackgroundThemeBrush}" HorizontalAlignment="Right" Margin="0,0,1.5,0" Grid.RowSpan="3" Visibility="Collapsed" Width="{ThemeResource SliderOutsideTickBarThemeHeight}"/>
                                    <TickBar x:Name="VerticalInlineTickBar" Grid.Column="1" Fill="{ThemeResource SliderTickMarkInlineBackgroundThemeBrush}" Grid.RowSpan="3" Visibility="Collapsed" Width="{ThemeResource SliderTrackThemeHeight2}"/>
                                    <TickBar x:Name="RightTickBar" Grid.Column="2" Fill="{ThemeResource SliderTickmarkOutsideBackgroundThemeBrush}" HorizontalAlignment="Left" Margin="1.5,0,0,0" Grid.RowSpan="3" Visibility="Collapsed" Width="{ThemeResource SliderOutsideTickBarThemeHeight}"/>
                                    <Thumb x:Name="VerticalThumb" AutomationProperties.AccessibilityView="Raw" Background="{ThemeResource SliderThumbBackgroundThemeBrush}" Grid.Column="1" DataContext="{TemplateBinding Value}" Height="{ThemeResource SliderTrackThemeHeight2}" Grid.Row="1" Style="{StaticResource SliderThumbStyle}" Width="{ThemeResource SliderTrackThemeHeight2}"/>
                                    <Rectangle x:Name="VerticalBorder" Grid.Column="1" Grid.RowSpan="3" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
                                </Grid>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="ComboBoxBackgroundThemeBrush" Color="Transparent"/>
        <Thickness x:Key="ComboBoxBorderThemeThickness">2.5</Thickness>
        <x:Double x:Key="ContentControlFontSize">20.26</x:Double>
        <x:Double x:Key="ComboBoxItemMinHeightThemeSize">33.5</x:Double>
        <Thickness x:Key="ComboBoxPlaceholderTextThemeMargin">6.5,2.5</Thickness>
        <SolidColorBrush x:Key="ComboBoxDisabledBackgroundThemeBrush" Color="Transparent"/>
        <Style x:Key="ComboBoxStyleRightPadding6" TargetType="ComboBox">
            <Setter Property="Foreground" Value="{ThemeResource ComboBoxForegroundThemeBrush}"/>
            <Setter Property="Background" Value="{ThemeResource ComboBoxBackgroundThemeBrush}"/>
            <Setter Property="BorderBrush" Value="{ThemeResource ComboBoxBorderThemeBrush}"/>
            <Setter Property="BorderThickness" Value="{ThemeResource ComboBoxBorderThemeThickness}"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FontFamily" Value="{ThemeResource PhoneFontFamilyNormal}"/>
            <Setter Property="FontSize" Value="{ThemeResource ContentControlFontSize}"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid x:Name="ComboBoxGrid">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="Pressed" To="PointerOver">
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="Background"/>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition From="PointerOver" To="Normal">
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="Background"/>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="PlaceholderTextBlock">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PhoneMidBrush}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PlaceholderTextBlock">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition From="Pressed" To="Normal">
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="Background"/>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="PointerOver"/>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <PointerDownThemeAnimation Storyboard.TargetName="Background"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxPressedBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxPressedBorderThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="UserControl">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxPressedForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Highlighted">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxHighlightedBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxHighlightedBorderThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="UserControl">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxHighlightedForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="HeaderContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxDisabledForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxDisabledForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxDisabledBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxDisabledBorderThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="FlyoutButton">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxDisabledBorderThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="UserControl">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxDisabledForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="PlaceholderTextBlock">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxDisabledForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="PlaceholderTextContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxDisabledForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DropDownStates">
                                    <VisualState x:Name="Opened">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.25" EnableDependentAnimation="True" From="{Binding TemplateSettings.DropDownClosedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" To="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" Storyboard.TargetProperty="Height" Storyboard.TargetName="ItemsPresenterHost">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseInOut" Exponent="6"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Duration="0:0:0.25" To="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" Storyboard.TargetProperty="Y" Storyboard.TargetName="ItemsPresenterTranslateTransform">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseInOut" Exponent="6"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="UserControl">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="True"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxHighlightedBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="UserControl">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ComboBoxHighlightedForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Closed">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" EnableDependentAnimation="True" From="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" To="{Binding TemplateSettings.DropDownClosedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" Storyboard.TargetProperty="Height" Storyboard.TargetName="ItemsPresenterHost">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseInOut" Exponent="6"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Duration="0:0:0.2" To="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" Storyboard.TargetProperty="Y" Storyboard.TargetName="ItemsPresenterTranslateTransform">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseInOut" Exponent="6"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="PresenterStates">
                                    <VisualState x:Name="Full"/>
                                    <VisualState x:Name="InlineNormal">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FlyoutButton">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ShortListOuterBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="InlinePlaceholder">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FlyoutButton">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ShortListOuterBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PlaceholderTextContentPresenter"/>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemsPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter x:Name="HeaderContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" FlowDirection="{TemplateBinding FlowDirection}" HorizontalAlignment="Left" Margin="0,0,0,-4.5" Style="{StaticResource HeaderContentPresenterStyle}" Visibility="Collapsed"/>
                            <Button x:Name="FlyoutButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" FontWeight="Normal" FlowDirection="{TemplateBinding FlowDirection}" FontSize="{ThemeResource ContentControlFontSize}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" MinHeight="{ThemeResource ComboBoxItemMinHeightThemeSize}" Padding="6.5,0,0,0" Grid.Row="1">
                                <ContentPresenter x:Name="ContentPresenter" Margin="0,2.5,6,0" MinHeight="31">
                                    <TextBlock x:Name="PlaceholderTextBlock" Margin="0,-1.5,6,0" Style="{StaticResource ComboBoxPlaceholderTextBlockStyle}" Text="{TemplateBinding PlaceholderText}"/>
                                </ContentPresenter>
                            </Button>
                            <Border x:Name="ShortListOuterBorder" Margin="{ThemeResource PhoneTouchTargetOverhang}" Grid.Row="1" Visibility="Collapsed">
                                <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                    <UserControl x:Name="UserControl" Foreground="{TemplateBinding Foreground}" FlowDirection="{TemplateBinding FlowDirection}" IsHitTestVisible="False">
                                        <Canvas x:Name="ItemsPresenterHost" HorizontalAlignment="Left" MinHeight="{ThemeResource ComboBoxItemMinHeightThemeSize}">
                                            <ContentPresenter x:Name="PlaceholderTextContentPresenter" Content="{TemplateBinding PlaceholderText}" Margin="{ThemeResource ComboBoxPlaceholderTextThemeMargin}" Opacity="0" Style="{StaticResource PlaceholderContentPresenterStyle}"/>
                                            <ItemsPresenter x:Name="ItemsPresenter" Margin="0,2.5,6,0">
                                                <ItemsPresenter.RenderTransform>
                                                    <TranslateTransform x:Name="ItemsPresenterTranslateTransform"/>
                                                </ItemsPresenter.RenderTransform>
                                            </ItemsPresenter>
                                        </Canvas>
                                    </UserControl>
                                </Border>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>

    <Grid x:Name="LayoutRoot" 
          Background="Transparent"
          Width="{Binding Width, ElementName=TransportControlPanel}"
          Height="{Binding Height, ElementName=TransportControlPanel}">
        <i:Interaction.Behaviors>
            <!-- 재생패널/잠금 패널 표시 -->
            <ic:DataTriggerBehavior ComparisonCondition="Equal" Value="True" Binding="{Binding GeneralState.IsTriggerOn}" >
                <ic:GoToStateAction StateName="None"/>
                <ic:GoToStateAction StateName="Opened"/>
            </ic:DataTriggerBehavior>
            <ic:DataTriggerBehavior ComparisonCondition="Equal" Value="False" Binding="{Binding GeneralState.IsTriggerOn}" >
                <ic:GoToStateAction StateName="None"/>
                <ic:GoToStateAction StateName="CollapseControlPanel"/>
            </ic:DataTriggerBehavior>
            <ic:DataTriggerBehavior ComparisonCondition="Equal" Value="True" Binding="{Binding LockingState.IsTriggerOn}" >
                <ic:GoToStateAction StateName="None"/>
                <ic:GoToStateAction StateName="VisibleUnlock"/>
            </ic:DataTriggerBehavior>
            <ic:DataTriggerBehavior ComparisonCondition="Equal" Value="False" Binding="{Binding LockingState.IsTriggerOn}" >
                <ic:GoToStateAction StateName="None"/>
                <ic:GoToStateAction StateName="CollapseUnlock"/>
            </ic:DataTriggerBehavior>
            <ic:DataTriggerBehavior ComparisonCondition="Equal" Value="True" Binding="{Binding SubtitleState.IsTriggerOn}" >
                <ic:GoToStateAction StateName="None"/>
                <ic:GoToStateAction StateName="MoveOnSubtitle"/>
            </ic:DataTriggerBehavior>
            <ic:DataTriggerBehavior ComparisonCondition="Equal" Value="False" Binding="{Binding SubtitleState.IsTriggerOn}" >
                <ic:GoToStateAction StateName="None"/>
                <ic:GoToStateAction StateName="MoveOffSubtitle"/>
            </ic:DataTriggerBehavior>
            <!-- 제스쳐 인디케이터 -->
            <ic:DataTriggerBehavior ComparisonCondition="Equal" Value="Brightness" Binding="{Binding VisibleIndicator}" >
                <ic:GoToStateAction StateName="VisibleBrightnessIndicator"/>
            </ic:DataTriggerBehavior>
            <ic:DataTriggerBehavior ComparisonCondition="Equal" Value="Information" Binding="{Binding VisibleIndicator}" >
                <ic:GoToStateAction StateName="None"/>
                <ic:GoToStateAction StateName="VisibleInformationIndicator"/>
            </ic:DataTriggerBehavior>
            <ic:DataTriggerBehavior ComparisonCondition="Equal" Value="Time" Binding="{Binding VisibleIndicator}" >
                <ic:GoToStateAction StateName="None"/>
                <ic:GoToStateAction StateName="VisibleTimeIndicator"/>
            </ic:DataTriggerBehavior>
            <ic:DataTriggerBehavior ComparisonCondition="Equal" Value="Zoom" Binding="{Binding VisibleIndicator}" >
                <ic:GoToStateAction StateName="None"/>
                <ic:GoToStateAction StateName="VisibleZoomIndicator"/>
            </ic:DataTriggerBehavior>
            <ic:DataTriggerBehavior ComparisonCondition="Equal" Value="Volume" Binding="{Binding VisibleIndicator}" >
                <ic:GoToStateAction StateName="None"/>
                <ic:GoToStateAction StateName="VisibleVolumeIndicator"/>
            </ic:DataTriggerBehavior>
            <ic:DataTriggerBehavior ComparisonCondition="Equal" Value="None" Binding="{Binding VisibleIndicator}" >
                <ic:GoToStateAction StateName="None"/>
                <ic:GoToStateAction StateName="CollapseIndicator"/>
                <ic:GoToStateAction StateName="None"/>
            </ic:DataTriggerBehavior>
            
            <!-- 음성볼륨 아이콘 -->
            <ic:DataTriggerBehavior Binding="{Binding Volume}" ComparisonCondition="LessThanOrEqual" Value="0" >
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Visible" TargetObject="{Binding ElementName=AudioVolumeMinIndicator}" />
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=AudioVolumeLowIndicator}" />
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=AudioVolumeMediumIndicator}" />
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=AudioVolumeHighIndicator}" />
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=AudioVolumeMaxIndicator}" />
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Visible" TargetObject="{Binding ElementName=AudioVolumeMin}" />
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=AudioVolumeLow}" />
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=AudioVolumeMedium}" />
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=AudioVolumeHigh}" />
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=AudioVolumeMax}" />
            </ic:DataTriggerBehavior>
            <ic:DataTriggerBehavior Binding="{Binding Volume}" ComparisonCondition="GreaterThanOrEqual" Value="1" >
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=AudioVolumeMinIndicator}" />
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Visible" TargetObject="{Binding ElementName=AudioVolumeLowIndicator}" />
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=AudioVolumeMediumIndicator}" />
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=AudioVolumeHighIndicator}" />
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=AudioVolumeMaxIndicator}" />
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=AudioVolumeMin}" />
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Visible" TargetObject="{Binding ElementName=AudioVolumeLow}" />
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=AudioVolumeMedium}" />
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=AudioVolumeHigh}" />
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=AudioVolumeMax}" />
            </ic:DataTriggerBehavior>
            <ic:DataTriggerBehavior Binding="{Binding Volume}" ComparisonCondition="GreaterThanOrEqual" Value="6" >
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=AudioVolumeMinIndicator}" />
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=AudioVolumeLowIndicator}" />
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Visible" TargetObject="{Binding ElementName=AudioVolumeMediumIndicator}" />
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=AudioVolumeHighIndicator}" />
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=AudioVolumeMaxIndicator}" />
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=AudioVolumeMin}" />
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=AudioVolumeLow}" />
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Visible" TargetObject="{Binding ElementName=AudioVolumeMedium}" />
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=AudioVolumeHigh}" />
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=AudioVolumeMax}" />
            </ic:DataTriggerBehavior>
            <ic:DataTriggerBehavior Binding="{Binding Volume}" ComparisonCondition="GreaterThanOrEqual" Value="11" >
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=AudioVolumeMinIndicator}" />
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=AudioVolumeLowIndicator}" />
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=AudioVolumeMediumIndicator}" />
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Visible" TargetObject="{Binding ElementName=AudioVolumeHighIndicator}" />
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=AudioVolumeMaxIndicator}" />
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=AudioVolumeMin}" />
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=AudioVolumeLow}" />
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=AudioVolumeMedium}" />
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Visible" TargetObject="{Binding ElementName=AudioVolumeHigh}" />
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=AudioVolumeMax}" />
            </ic:DataTriggerBehavior>
            <ic:DataTriggerBehavior Binding="{Binding Volume}" ComparisonCondition="GreaterThanOrEqual" Value="16" >
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=AudioVolumeMinIndicator}" />
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=AudioVolumeLowIndicator}" />
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=AudioVolumeMediumIndicator}" />
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=AudioVolumeHighIndicator}" />
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Visible" TargetObject="{Binding ElementName=AudioVolumeMaxIndicator}" />
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=AudioVolumeMin}" />
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=AudioVolumeLow}" />
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=AudioVolumeMedium}" />
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=AudioVolumeHigh}" />
                <ic:ChangePropertyAction PropertyName="Visibility" Value="Visible" TargetObject="{Binding ElementName=AudioVolumeMax}" />
            </ic:DataTriggerBehavior>

        </i:Interaction.Behaviors>
        
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="ControlPanelStates">
                <VisualState x:Name="Opened" >
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ControlHeaderContainer">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:3.0" Value="1"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:3.4" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Visibility)" Storyboard.TargetName="ControlHeaderContainer">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                            <DiscreteObjectKeyFrame KeyTime="0:0:3.4" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ControlContentContainer">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:3.0" Value="1"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:3.4" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Visibility)" Storyboard.TargetName="ControlContentContainer">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                            <DiscreteObjectKeyFrame KeyTime="0:0:3.4" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="ControlContentContainer">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="False"/>
                            <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="True"/>
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ControlFooterContainer">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:3.0" Value="1"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:3.4" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Visibility)" Storyboard.TargetName="ControlFooterContainer">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                            <DiscreteObjectKeyFrame KeyTime="0:0:3.4" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="ControlFooterContainer">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="False"/>
                            <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="True"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="VisibleControlPanel" >
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ControlHeaderContainer">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:3.0" Value="1"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:3.4" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Visibility)" Storyboard.TargetName="ControlHeaderContainer">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                            <DiscreteObjectKeyFrame KeyTime="0:0:3.4" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ControlContentContainer">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:3.0" Value="1"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:3.4" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Visibility)" Storyboard.TargetName="ControlContentContainer">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                            <DiscreteObjectKeyFrame KeyTime="0:0:3.4" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ControlFooterContainer">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:3.0" Value="1"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:3.4" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Visibility)" Storyboard.TargetName="ControlFooterContainer">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                            <DiscreteObjectKeyFrame KeyTime="0:0:3.4" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="CollapseControlPanel" >
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ControlHeaderContainer">
                            <EasingDoubleKeyFrame KeyTime="0:0:1.4" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Visibility)" Storyboard.TargetName="ControlHeaderContainer">
                            <DiscreteObjectKeyFrame KeyTime="0:0:1.4" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ControlContentContainer">
                            <EasingDoubleKeyFrame KeyTime="0:0:1.4" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Visibility)" Storyboard.TargetName="ControlContentContainer">
                            <DiscreteObjectKeyFrame KeyTime="0:0:1.4" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ControlFooterContainer">
                            <EasingDoubleKeyFrame KeyTime="0:0:1.4" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Visibility)" Storyboard.TargetName="ControlFooterContainer">
                            <DiscreteObjectKeyFrame KeyTime="0:0:1.4" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="VisibleUnlock" >
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="UnlockContainer">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:3.0" Value="1"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:3.4" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Visibility)" Storyboard.TargetName="UnlockContainer">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                            <DiscreteObjectKeyFrame KeyTime="0:0:3.4" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="CollapseUnlock" >
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="UnlockContainer">
                            <EasingDoubleKeyFrame KeyTime="0:0:1.4" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Visibility)" Storyboard.TargetName="UnlockContainer">
                            <DiscreteObjectKeyFrame KeyTime="0:0:1.4" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="None" >
                </VisualState>
                <VisualState x:Name="MoveOnSubtitle" >
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Visibility)" Storyboard.TargetName="LayoutRoot">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="MoveOffSubtitle" >
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Visibility)" Storyboard.TargetName="LayoutRoot">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="VisibleBrightnessIndicator" >
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BrightnessIndicator">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
                        </DoubleAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Visibility)" Storyboard.TargetName="BrightnessIndicator">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="VisibleVolumeIndicator" >
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="VolumeIndicator">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
                        </DoubleAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Visibility)" Storyboard.TargetName="VolumeIndicator">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="VisibleInformationIndicator" >
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="InformationIndicator">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:3.4" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Visibility)" Storyboard.TargetName="InformationIndicator">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                            <DiscreteObjectKeyFrame KeyTime="0:0:3.4" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="VisibleTimeIndicator" >
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="TimeIndicator">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
                        </DoubleAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Visibility)" Storyboard.TargetName="TimeIndicator">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="VisibleZoomIndicator" >
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ZoomIndicator">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
                        </DoubleAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Visibility)" Storyboard.TargetName="ZoomIndicator">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="CollapseIndicator" >
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BrightnessIndicator">
                            <EasingDoubleKeyFrame KeyTime="0:0:1.4" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Visibility)" Storyboard.TargetName="BrightnessIndicator">
                            <DiscreteObjectKeyFrame KeyTime="0:0:1.4" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="VolumeIndicator">
                            <EasingDoubleKeyFrame KeyTime="0:0:1.4" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Visibility)" Storyboard.TargetName="VolumeIndicator">
                            <DiscreteObjectKeyFrame KeyTime="0:0:1.4" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="InformationIndicator">
                            <EasingDoubleKeyFrame KeyTime="0:0:1.4" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Visibility)" Storyboard.TargetName="InformationIndicator">
                            <DiscreteObjectKeyFrame KeyTime="0:0:1.4" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="TimeIndicator">
                            <EasingDoubleKeyFrame KeyTime="0:0:1.4" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Visibility)" Storyboard.TargetName="TimeIndicator">
                            <DiscreteObjectKeyFrame KeyTime="0:0:1.4" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ZoomIndicator">
                            <EasingDoubleKeyFrame KeyTime="0:0:1.4" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Visibility)" Storyboard.TargetName="ZoomIndicator">
                            <DiscreteObjectKeyFrame KeyTime="0:0:1.4" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <!-- 터치 제스쳐 패널 -->
        <Grid x:Name="GestureContainer"
              Canvas.ZIndex="0"
              Grid.RowSpan="3"
              Background="Transparent"
              Width="{Binding Width, ElementName=TransportControlPanel}"
              Height="{Binding Height, ElementName=TransportControlPanel}"
              ManipulationMode="TranslateY,TranslateRailsY,TranslateX,TranslateRailsX,Scale">
            <i:Interaction.Behaviors>
                <ic:EventTriggerBehavior EventName="ManipulationStarted">
                    <ic:InvokeCommandAction Command="{Binding ManipulationStartedCommand}" />
                </ic:EventTriggerBehavior>
                <ic:EventTriggerBehavior EventName="ManipulationDelta">
                    <ic:InvokeCommandAction Command="{Binding ManipulationDeltaCommand}" />
                </ic:EventTriggerBehavior>
                <ic:EventTriggerBehavior EventName="ManipulationCompleted">
                    <ic:InvokeCommandAction Command="{Binding ManipulationCompletedCommand}" />
                </ic:EventTriggerBehavior>
                <ic:EventTriggerBehavior EventName="PointerEntered">
                    <ic:InvokeCommandAction Command="{Binding PointerEnteredCommand}"/>
                </ic:EventTriggerBehavior>
            </i:Interaction.Behaviors>
        </Grid>

        <!-- 밝기 조절 패널 -->
        <Rectangle Canvas.ZIndex="32766" 
                Opacity="{Binding Settings.General.DisplayBrightnessOpacity, FallbackValue=1}"  
                Fill="Black"  Grid.RowSpan="3" IsHitTestVisible="False" />

        <!-- 밝기 / 시킹타임 / 음량 표시기 -->
        <Grid Grid.RowSpan="3"
              RequestedTheme="Dark"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid x:Name="BrightnessIndicator"
                  Visibility="Collapsed"
                  Height="38"
                  Grid.Column="0"
                  Margin="18,18,0,0"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Top">
                <Rectangle Fill="{ThemeResource ApplicationPageBackgroundThemeBrush}" Opacity="0.3" />
                <TextBlock FontSize="{StaticResource TextStyleExtraLargeFontSize}" FontWeight="Bold" Margin="6,0,6,0">
                    <Run Text="&#128261;" FontFamily="Segoe UI Symbol"/>
                    <Run Text="{Binding Settings.General.DisplayBrightness}" />
                    <Run x:Uid="BrightnessUnit" />
                </TextBlock>
            </Grid>
            <Grid x:Name="InformationIndicator"
                  Visibility="Collapsed"
                  Grid.ColumnSpan="3" 
                  Margin="0,18,0,18"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Top">
                <Rectangle Fill="{ThemeResource ApplicationPageBackgroundThemeBrush}" Opacity="0.3" />
                <TextBlock FontSize="{StaticResource TextStyleLargeFontSize}" 
                           Margin="9"
                           FontWeight="Bold"
                           TextWrapping="WrapWholeWords"
                           HorizontalAlignment="Center"
                           Text="{Binding InformationMessage}" />
            </Grid>
            <Grid x:Name="TimeIndicator"
                  Visibility="Collapsed"
                  Grid.Column="1" 
                  Margin="0,18,0,18"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Top">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Rectangle Fill="{ThemeResource ApplicationPageBackgroundThemeBrush}" Opacity="0.3" Grid.RowSpan="2" />
                <TextBlock FontSize="{StaticResource TextStyleExtraLargeFontSize}" 
                           FontWeight="Bold"
                           Margin="9,0,9,0"
                           HorizontalAlignment="Center"
                           Text="{Binding ExpectedTime, Converter={StaticResource TimeConverter}}" />
                <TextBlock Grid.Row="1"
                           FontSize="{StaticResource TextStyleLargeFontSize}" 
                           Margin="9,0,9,0"
                           FontWeight="Bold"
                           HorizontalAlignment="Center"
                           Text="{Binding Path=TimeMovement, Converter={StaticResource TimeConverter2}}" />
            </Grid>
            <Grid x:Name="ZoomIndicator"
                  Visibility="Collapsed"
                  Height="38"
                  Grid.Column="1"
                  Margin="0,18,18,0"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Top">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Rectangle Fill="{ThemeResource ApplicationPageBackgroundThemeBrush}" Opacity="0.3" Grid.ColumnSpan="2" />
                <SymbolIcon Symbol="Zoom" Width="52" Height="52" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                <TextBlock FontSize="{StaticResource TextStyleExtraLargeFontSize}" 
                           Grid.Column="1"
                           FontWeight="Bold" 
                           Margin="0,2,6,0"
                           VerticalAlignment="Center">
                    <Run Text="{Binding Zoom, FallbackValue=1, Converter={StaticResource StringFormatConverter}, ConverterParameter=\{0:F2\}}"/>
                    <Run Text="X" />
                </TextBlock>
            </Grid>
            <Grid x:Name="VolumeIndicator"
                  Visibility="Collapsed"
                  Height="38"
                  Grid.Column="2"
                  Margin="0,18,18,0"
                  HorizontalAlignment="Right"
                  VerticalAlignment="Top">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Rectangle Fill="{ThemeResource ApplicationPageBackgroundThemeBrush}" Opacity="0.3" Grid.ColumnSpan="2" />
                <Image x:Name="AudioVolumeMinIndicator" Visibility="Collapsed" Width="52" Height="52" Margin="0,-2,0,0" VerticalAlignment="Center"
                       Source="ms-appx:///Assets/dark/appbar.sound.mute.png" />
                <Image x:Name="AudioVolumeLowIndicator" Visibility="Collapsed" Width="52" Height="52" Margin="0,-2,0,0" VerticalAlignment="Center"
                       Source="ms-appx:///Assets/dark/appbar.sound.0.png" />
                <Image x:Name="AudioVolumeMediumIndicator" Visibility="Collapsed" Width="52" Height="52" Margin="0,-2,0,0" VerticalAlignment="Center"
                       Source="ms-appx:///Assets/dark/appbar.sound.1.png" />
                <Image x:Name="AudioVolumeHighIndicator" Visibility="Collapsed" Width="52" Height="52" Margin="0,-2,0,0" VerticalAlignment="Center"
                       Source="ms-appx:///Assets/dark/appbar.sound.2.png" />
                <Image x:Name="AudioVolumeMaxIndicator"  Visibility="Collapsed" Width="52" Height="52" Margin="0,-2,0,0" VerticalAlignment="Center"
                       Source="ms-appx:///Assets/dark/appbar.sound.3.png" />
                <TextBlock FontSize="{StaticResource TextStyleExtraLargeFontSize}" 
                           Grid.Column="1"
                           FontWeight="Bold" 
                           Margin="0,2,6,0"
                           VerticalAlignment="Center"
                           Text="{Binding Volume, FallbackValue=20}">
                </TextBlock>
            </Grid>
        </Grid>

        <!-- 잠금화면 패널 -->
        <Grid x:Name="UnlockContainer" 
              Visibility="{Binding LockingState.Visibility, Mode=TwoWay}"
              Grid.RowSpan="3"
              Grid.Row="0">
            <Button x:Name="Unlock"
                    Visibility="Visible"
                    BorderThickness="1.3"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    Margin="36"
                    Style="{StaticResource MediaPlayerButtonStyle}" >
                <i:Interaction.Behaviors>
                    <ic:EventTriggerBehavior EventName="Tapped">
                        <ic:InvokeCommandAction Command="{Binding UnlockTappedCommand}"/>
                    </ic:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                <FontIcon FontFamily="Segoe UI Symbol" Glyph="&#xE1F7;"/>
            </Button>
        </Grid>

        <!-- 타이틀 부 패널 -->
        <Grid x:Name="ControlHeaderContainer" 
              Visibility="{Binding GeneralState.Visibility, Mode=OneWay}"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Top"
              Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Rectangle Fill="{ThemeResource ApplicationPageBackgroundThemeBrush}" Opacity="0.3" Grid.ColumnSpan="3" />
            <Grid Grid.Column="0"
                  VerticalAlignment="Center">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <StackPanel HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            Orientation="Horizontal"
                            Grid.Row="0">
                    <Image Source="{Binding Source={StaticResource ImageUriPower}, Converter={StaticResource ThemePathConverter}, ConverterParameter={StaticResource ImageUriBasePath}}" 
                           Width="24" Height="24"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           Margin="2,-1,0,0"/>
                    <TextBlock VerticalAlignment="Center"
                               HorizontalAlignment="Left"
                               FontWeight="Bold"
                               Margin="2,0,0,0"
                               FontSize="15" >
                        <Run Text="{Binding Battery}"/>
                        <Run>%</Run>
                    </TextBlock>
                </StackPanel>
                <StackPanel HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            Orientation="Horizontal"
                            Margin="0,-3,0,0"
                            Grid.Row="1">
                    <TextBlock Text="{Binding TimeTT}"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Left"
                               FontSize="10"
                               FontWeight="Bold" 
                               Margin="6,6,0,2"/>
                    <TextBlock Text="{Binding TimeHMM}"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Left"
                               FontWeight="Bold" 
                               FontSize="15"
                               Margin="6,0,6,0"
                           />
                </StackPanel>
            </Grid>
            <Grid Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TextBlock Text="{Binding Path=MediaInfo.Title}" 
                           TextWrapping="Wrap"
                           Margin="6" FontSize="22" FontWeight="Medium" />
                <Grid x:Name="AdPanel" 
                      Grid.Row="{Binding AdvRow}"
                      Grid.Column="{Binding AdvColumn}">
                    <ad:AdTransportControl/>
                </Grid>
            </Grid>
            <Button Name="Close" 
                Grid.Column="1"
                Margin="12,3,12,4" 
                BorderThickness="1" 
                Height="30" MinHeight="30" MinWidth="30" Width="30" 
                Style="{StaticResource MediaPlayerButtonStyleRect}" 
                HorizontalAlignment="Right">
                <i:Interaction.Behaviors>
                    <ic:EventTriggerBehavior EventName="Tapped">
                        <ic:InvokeCommandAction Command="{Binding CloseTappedCommand}"/>
                    </ic:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                <SymbolIcon Symbol="ClosePane" />
            </Button>
        </Grid>

        <!-- 재생 컨트롤 패널 -->
        <Grid x:Name="ControlContentContainer"
              Visibility="{Binding GeneralState.Visibility, Mode=OneWay}"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Center"
              Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button Name="Previous"
                    Grid.Column="0"
                    MinWidth="50" 
                    MinHeight="50" 
                    BorderThickness="0" 
                    HorizontalAlignment="Left"
                    Visibility="{Binding MediaInfo.PreviousMediaInfo, Converter={StaticResource VisibilityConverter}}"
                    Margin="6,0,0,0">
                <i:Interaction.Behaviors>
                    <ic:EventTriggerBehavior EventName="Tapped">
                        <ic:InvokeCommandAction Command="{Binding OtherMediaTappedCommand}" CommandParameter="{Binding MediaInfo.PreviousMediaInfo}" />
                    </ic:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="MinWidth" Value="0"/>
                        <Setter Property="MinHeight" Value="0" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Grid Background="Transparent" x:Name="Grid">
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualStateGroup.Transitions>
                                                    <VisualTransition From="Pressed" To="PointerOver">
                                                        <Storyboard>
                                                            <PointerUpThemeAnimation Storyboard.TargetName="Grid" />
                                                        </Storyboard>
                                                    </VisualTransition>
                                                    <VisualTransition From="PointerOver" To="Normal">
                                                        <Storyboard>
                                                            <PointerUpThemeAnimation Storyboard.TargetName="Grid" />
                                                        </Storyboard>
                                                    </VisualTransition>
                                                    <VisualTransition From="Pressed" To="Normal">
                                                        <Storyboard>
                                                            <PointerUpThemeAnimation Storyboard.TargetName="Grid" />
                                                        </Storyboard>
                                                    </VisualTransition>
                                                </VisualStateGroup.Transitions>
                                                <VisualState x:Name="Normal" />
                                                <VisualState x:Name="PointerOver" />
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="PreviousMediaIcon">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PhoneAccentBrush}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Border x:Name="PreviousMediaBorder"
                                                BorderThickness="0.4" Opacity="1" BorderBrush="{ThemeResource PhoneDisabledBrush}" >
                                            <Grid>
                                                <Rectangle Fill="{ThemeResource ApplicationPageBackgroundThemeBrush}" 
                                                           Width="50"
                                                           Height="50"
                                                           Opacity="0.3"
                                                           Visibility="{Binding MediaInfo.PreviousMediaInfo.IsPlaceHolder, Converter={StaticResource VisibilityConverter}}"/>
                                                <Image Width="90" Height="50.625"
                                                       DataContext="{Binding MediaInfo.PreviousMediaInfo}"
                                                       Source="{Binding Thumbnail}"
                                                       Visibility="{Binding IsPlaceHolder, Converter={StaticResource VisibilityConverter}, ConverterParameter=True}"
                                                       Opacity="0.7" />
                                                <SymbolIcon x:Name="PreviousMediaIcon" Symbol="Previous" RenderTransformOrigin="0.5,0.5" Opacity="0.9"/>
                                            </Grid>
                                        </Border>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>
            </Button>
            <RepeatButton Name="Rewind"
                          ClickMode="Hover"
                          Grid.Column="1"
                          BorderThickness="1.2"
                          HorizontalAlignment="Right" 
                          Style="{StaticResource MediaPlayerButtonStyle}" >
                <i:Interaction.Behaviors>
                    <ic:EventTriggerBehavior EventName="Click">
                        <ic:GoToStateAction StateName="None"/>
                        <ic:GoToStateAction StateName="VisibleControlPanel"/>
                        <ic:InvokeCommandAction Command="{Binding RewindClickCommand}" />
                    </ic:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                <Grid>
                    <SymbolIcon Symbol="Play" RenderTransformOrigin="0.5,0.5">
                        <SymbolIcon.RenderTransform>
                            <CompositeTransform ScaleX="0.8" ScaleY="1" TranslateX="-5" Rotation="180"/>
                        </SymbolIcon.RenderTransform>
                    </SymbolIcon>
                    <SymbolIcon Symbol="Play" RenderTransformOrigin="0.5,0.5">
                        <SymbolIcon.RenderTransform>
                            <CompositeTransform ScaleX="0.8" ScaleY="1" TranslateX="5" Rotation="180"/>
                        </SymbolIcon.RenderTransform>
                    </SymbolIcon>
                </Grid>
            </RepeatButton>
            <Button Name="PlayPuase"
                    Grid.Column="2"
                    Width="80" Height="80" 
                    BorderThickness="1.6"
                    HorizontalAlignment="Center" 
                    Style="{StaticResource MediaPlayerButtonStyle}" >
                <i:Interaction.Behaviors>
                    <ic:EventTriggerBehavior EventName="Tapped">
                        <ic:GoToStateAction StateName="None"/>
                        <ic:GoToStateAction StateName="VisibleControlPanel"/>
                        <ic:InvokeCommandAction Command="{Binding PlayPauseTappedCommand}" />
                    </ic:EventTriggerBehavior>
                    <ic:DataTriggerBehavior ComparisonCondition="Equal" Value="True" Binding="{Binding IsPaused}" >
                        <ic:ChangePropertyAction PropertyName="Symbol" Value="Play" TargetObject="{Binding ElementName=PlayPauseSymbol}" />
                    </ic:DataTriggerBehavior>
                    <ic:DataTriggerBehavior ComparisonCondition="Equal" Value="False" Binding="{Binding IsPaused}" >
                        <ic:ChangePropertyAction PropertyName="Symbol" Value="Pause" TargetObject="{Binding ElementName=PlayPauseSymbol}" />
                    </ic:DataTriggerBehavior>
                </i:Interaction.Behaviors>
                <SymbolIcon x:Name="PlayPauseSymbol" Symbol="Play" RenderTransformOrigin="0.5,0.5">
                    <SymbolIcon.RenderTransform>
                        <CompositeTransform ScaleX="1.8" ScaleY="1.8"/>
                    </SymbolIcon.RenderTransform>
                </SymbolIcon>
            </Button>
            <RepeatButton Name="FastForward" 
                          Grid.Column="3"
                          ClickMode="Hover"
                          BorderThickness="1.2"
                          HorizontalAlignment="Left" 
                          Style="{StaticResource MediaPlayerButtonStyle}" >
                <i:Interaction.Behaviors>
                    <ic:EventTriggerBehavior EventName="Click">
                        <ic:GoToStateAction StateName="None"/>
                        <ic:GoToStateAction StateName="VisibleControlPanel"/>
                        <ic:InvokeCommandAction Command="{Binding FastForwardClickCommand}"/>
                    </ic:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                <Grid>
                    <SymbolIcon Symbol="Play" RenderTransformOrigin="0.5,0.5">
                        <SymbolIcon.RenderTransform>
                            <CompositeTransform ScaleX="0.8" ScaleY="1" TranslateX="-5"/>
                        </SymbolIcon.RenderTransform>
                    </SymbolIcon>
                    <SymbolIcon Symbol="Play" RenderTransformOrigin="0.5,0.5">
                        <SymbolIcon.RenderTransform>
                            <CompositeTransform ScaleX="0.8" ScaleY="1" TranslateX="5"/>
                        </SymbolIcon.RenderTransform>
                    </SymbolIcon>
                </Grid>
            </RepeatButton>
            <Button Name="Next"
                    Grid.Column="4"
                    MinWidth="50" 
                    MinHeight="50" 
                    BorderThickness="0"
                    HorizontalAlignment="Right"
                    Visibility="{Binding MediaInfo.NextMediaInfo, Converter={StaticResource VisibilityConverter}}"
                    Margin="0,0,6,0">
                <i:Interaction.Behaviors>
                    <ic:EventTriggerBehavior EventName="Tapped">
                        <ic:InvokeCommandAction Command="{Binding OtherMediaTappedCommand}" CommandParameter="{Binding MediaInfo.NextMediaInfo}" />
                    </ic:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="MinWidth" Value="0"/>
                        <Setter Property="MinHeight" Value="0" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Grid Background="Transparent" x:Name="Grid">
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualStateGroup.Transitions>
                                                    <VisualTransition From="Pressed" To="PointerOver">
                                                        <Storyboard>
                                                            <PointerUpThemeAnimation Storyboard.TargetName="Grid" />
                                                        </Storyboard>
                                                    </VisualTransition>
                                                    <VisualTransition From="PointerOver" To="Normal">
                                                        <Storyboard>
                                                            <PointerUpThemeAnimation Storyboard.TargetName="Grid" />
                                                        </Storyboard>
                                                    </VisualTransition>
                                                    <VisualTransition From="Pressed" To="Normal">
                                                        <Storyboard>
                                                            <PointerUpThemeAnimation Storyboard.TargetName="Grid" />
                                                        </Storyboard>
                                                    </VisualTransition>
                                                </VisualStateGroup.Transitions>
                                                <VisualState x:Name="Normal" />
                                                <VisualState x:Name="PointerOver" />
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="NextMediaIcon">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PhoneAccentBrush}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="NextMediaBorder">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PhoneAccentBrush}"/>
                                                        </ObjectAnimationUsingKeyFrames>-->
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Border x:Name="NextMediaBorder"
                                                BorderThickness="0.4" Opacity="1" BorderBrush="{ThemeResource PhoneDisabledBrush}" >
                                            <Grid>
                                                <Rectangle Fill="{ThemeResource ApplicationPageBackgroundThemeBrush}" 
                                                           Width="50"
                                                           Height="50"
                                                           Opacity="0.3"
                                                           Visibility="{Binding MediaInfo.NextMediaInfo.IsPlaceHolder, Converter={StaticResource VisibilityConverter}}"/>
                                                <Image Width="90" Height="50.625"
                                                       DataContext="{Binding MediaInfo.NextMediaInfo}"
                                                       Source="{Binding Thumbnail}"
                                                       Opacity="0.7"
                                                       Visibility="{Binding IsPlaceHolder, Converter={StaticResource VisibilityConverter}, ConverterParameter=True}"/>
                                                <SymbolIcon x:Name="NextMediaIcon" Symbol="Next" RenderTransformOrigin="0.5,0.5" Opacity="0.9"/>
                                            </Grid>
                                        </Border>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>

        <!-- 부가 기능 패널 -->
        <Grid Name="ControlFooterContainer" 
              Visibility="{Binding GeneralState.Visibility, Mode=TwoWay}"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Bottom"
              Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Rectangle Fill="{ThemeResource ApplicationPageBackgroundThemeBrush}" Opacity="0.3" Grid.RowSpan="2" />
            <Grid x:Name="ControlButtons" Visibility="Visible">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <StackPanel HorizontalAlignment="Left" Orientation="Horizontal" Grid.Column="0" Margin="6,0,0,0">
                    <Button Name="SubtitlePicker" 
                        Style="{StaticResource MediaPlayerButtonStyleRect}" >
                        <Grid>
                            <SymbolIcon Symbol="ClosedCaption" RenderTransformOrigin="0.5,0.5">
                                <SymbolIcon.RenderTransform>
                                    <CompositeTransform ScaleX="0.6" ScaleY="0.6" TranslateX="-8" TranslateY="-12"/>
                                </SymbolIcon.RenderTransform>
                            </SymbolIcon>
                            <SymbolIcon Symbol="OpenLocal" />
                        </Grid>
                        <i:Interaction.Behaviors>
                            <ic:EventTriggerBehavior EventName="Tapped">
                                <ic:InvokeCommandAction Command="{Binding SubtitlePickerTappedCommand}"/>
                            </ic:EventTriggerBehavior>
                        </i:Interaction.Behaviors>
                    </Button>
                    <Button Name="SubtitleSelect"
                            IsEnabled="{Binding SubtitleLanguageList.Count, Converter={StaticResource NumberToBoolConverter}, ConverterParameter=0}"
                            Style="{StaticResource MediaPlayerButtonStyleRect}" >
                        <SymbolIcon Symbol="ClosedCaption" />
                        <Button.Flyout>
                            <common:CCPFlyout Placement="Full" FlyoutPresenterStyle="{StaticResource ButtonMenuFlyoutPresenterStyle}"
                                    helper:FlyoutHelper.Parent="{Binding ElementName=SubtitleSelect}"
                                    helper:FlyoutHelper.IsOpen="{Binding IsSubtitleFlyoutOpen, Mode=TwoWay}">
                                <i:Interaction.Behaviors>
                                    <ic:EventTriggerBehavior EventName="FlyoutOpened">
                                        <ic:InvokeCommandAction Command="{Binding FlyoutOpenedCommand}" />
                                    </ic:EventTriggerBehavior>
                                    <ic:EventTriggerBehavior EventName="FlyoutClosed">
                                        <ic:InvokeCommandAction Command="{Binding FlyoutClosedCommand}" />
                                    </ic:EventTriggerBehavior>
                                    <ic:DataTriggerBehavior Binding="{Binding IsFlyoutClosed}" ComparisonCondition="Equal" Value="True">
                                        <common:CloseFlyoutAction />
                                    </ic:DataTriggerBehavior>
                                </i:Interaction.Behaviors>
                                <StackPanel Margin="18,6">
                                    <Grid Margin="0,-6,0,-3" >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" VerticalAlignment="Bottom" FontSize="{StaticResource FlyoutHeaderTextSizeLarge}" Text="{Binding Value, ElementName=FontSizeSlider}"/>
                                        <TextBlock Grid.Column="1" VerticalAlignment="Bottom" Margin="-2,0,0,4" FontSize="{StaticResource FlyoutHeaderTextSizeMedium}">
                                            <Run Foreground="{ThemeResource TextBoxDisabledBorderThemeBrush}"> /</Run>
                                            <Run Foreground="{ThemeResource TextBoxDisabledBorderThemeBrush}" Text="{Binding Settings.FontSizeMax}" />
                                            <Run Text=" "/>
                                            <Run Foreground="{StaticResource FlyoutHeaderTextBrush}" x:Uid="SubtitleFontSize">[Subtitle Font Size]</Run>
                                        </TextBlock>
                                    </Grid>
                                    <Grid >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Image Source="{Binding Source={StaticResource ImageUriTextSize}, Converter={StaticResource ThemePathConverter}, ConverterParameter={StaticResource ImageUriBasePath}}" 
                                               Grid.Row="1" Grid.Column="0" Width="42" Height="42" Margin="-7,3,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" />
                                        <Slider x:Name="FontSizeSlider" 
                                                Grid.Column="1"  
                                                Minimum="{Binding Settings.FontSizeMin}" 
                                                Maximum="{Binding Settings.FontSizeMax}" 
                                                Value="{Binding Settings.Subtitle.FontSize, Mode=TwoWay}" 
                                                StepFrequency="1" 
                                                Margin="6,0" 
                                                Style="{StaticResource FlyoutSliderStyle}"  />
                                    </Grid>
                                    <Grid Margin="0,-6,0,-3" >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" VerticalAlignment="Bottom" FontSize="{StaticResource FlyoutHeaderTextSizeLarge}" Text="{Binding Value,ElementName=SyncTimeSlider, Converter={StaticResource StringFormatConverter}, ConverterParameter=\{0:F1\}}"/>
                                        <TextBlock Grid.Column="1" VerticalAlignment="Bottom" Margin="0,0,0,4" FontSize="{StaticResource FlyoutHeaderTextSizeMedium}">
                                            <Run Text=" " />
                                            <Run Foreground="{ThemeResource TextBoxDisabledBorderThemeBrush}" x:Uid="SubtitleSyncUnit">[sec]</Run>
                                            <Run Text=" " />
                                            <Run Foreground="{StaticResource FlyoutHeaderTextBrush}" x:Uid="SubtitleSync">[Subtitle Sync]</Run>
                                        </TextBlock>
                                    </Grid>
                                    <Grid >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Image Source="{Binding Source={StaticResource ImageUriTimerForward}, Converter={StaticResource ThemePathConverter}, ConverterParameter={StaticResource ImageUriBasePath}}" 
                                            Grid.Row="1" Grid.Column="0" Width="42" Height="42" Margin="-7,0,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" />
                                        <Button Name="SyncLeftButton" IsEnabled="False" BorderThickness="0" Margin="0,-12,0,0" Grid.Column="1" Style="{StaticResource MediaPlayerButtonStyle}" Background="Transparent" Width="30" Height="30">
                                            <i:Interaction.Behaviors>
                                                <ic:EventTriggerBehavior EventName="Tapped">
                                                    <ic:InvokeCommandAction Command="{Binding SyncRangeCommand}" CommandParameter="Decrease" />
                                                    <ic:ChangePropertyAction PropertyName="IsEnabled" Value="False" TargetObject="{Binding ElementName=SyncLeftButton}" />
                                                </ic:EventTriggerBehavior>
                                            </i:Interaction.Behaviors>
                                            <SymbolIcon Symbol="Play" RenderTransformOrigin="0.5,0.5" >
                                                <SymbolIcon.RenderTransform>
                                                    <CompositeTransform Rotation="180"/>
                                                </SymbolIcon.RenderTransform>
                                            </SymbolIcon>
                                        </Button>
                                        <Slider Name="SyncTimeSlider" 
                                                Margin="6,0" 
                                                Grid.Column="2" 
                                                IsEnabled="{Binding IsExternalSubtitle}"
                                                Minimum="{Binding SubtitleSyncTimeMin, Mode=TwoWay}" 
                                                Maximum="{Binding SubtitleSyncTimeMax, Mode=TwoWay}" 
                                                Value="{Binding SubtitleSyncTime, Mode=TwoWay}" 
                                                StepFrequency="0.5" 
                                                Style="{StaticResource FlyoutSliderStyle}" >
                                            <i:Interaction.Behaviors>
                                                <ic:DataTriggerBehavior Binding="{Binding Value, ElementName=SyncTimeSlider}" ComparisonCondition="Equal" Value="{Binding Minimum, ElementName=SyncTimeSlider}">
                                                    <ic:ChangePropertyAction PropertyName="IsEnabled" Value="True" TargetObject="{Binding ElementName=SyncLeftButton}" />
                                                </ic:DataTriggerBehavior>
                                                <ic:DataTriggerBehavior Binding="{Binding Value, ElementName=SyncTimeSlider}" ComparisonCondition="Equal" Value="{Binding Maximum, ElementName=SyncTimeSlider}">
                                                    <ic:ChangePropertyAction PropertyName="IsEnabled" Value="True" TargetObject="{Binding ElementName=SyncRightButton}" />
                                                </ic:DataTriggerBehavior>
                                            </i:Interaction.Behaviors>
                                        </Slider>
                                        <Button Name="SyncRightButton" IsEnabled="False" BorderThickness="0" Margin="0,-14,0,0" Grid.Column="3" Style="{StaticResource MediaPlayerButtonStyle}" Background="Transparent" Width="30" Height="30"  >
                                            <i:Interaction.Behaviors>
                                                <ic:EventTriggerBehavior EventName="Tapped">
                                                    <ic:InvokeCommandAction Command="{Binding SyncRangeCommand}" CommandParameter="Increase" />
                                                    <ic:ChangePropertyAction PropertyName="IsEnabled" Value="False" TargetObject="{Binding ElementName=SyncRightButton}" />
                                                </ic:EventTriggerBehavior>
                                            </i:Interaction.Behaviors>
                                            <SymbolIcon Symbol="Play" />
                                        </Button>
                                    </Grid>
                                    <TextBlock Grid.ColumnSpan="2" VerticalAlignment="Bottom" Margin="0,6,0,0" FontSize="{StaticResource FlyoutHeaderTextSizeMedium}">
                                        <Run Foreground="{StaticResource FlyoutHeaderTextBrush}" x:Uid="SubtitleLanguage">[Subtitle Language]</Run>
                                    </TextBlock>
                                    <Grid >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Image Source="{Binding Source={StaticResource ImageUriGlobeWire}, Converter={StaticResource ThemePathConverter}, ConverterParameter={StaticResource ImageUriBasePath}}" 
                                            Grid.Column="0" Width="42" Height="42" Margin="-7,12,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" />
                                        <!--<ComboBox Name="SubtitleLanguages" 
                                                  Margin="12,6,12,0" 
                                                  Grid.Column="1" 
                                                  HorizontalAlignment="Left"
                                                  VerticalAlignment="Center"
                                                  DisplayMemberPath="Name" 
                                                  SelectedValuePath="Key" 
                                                  MaxWidth="400"
                                                  ItemsSource="{Binding SubtitleLanguageList}" 
                                                  Style="{StaticResource ComboBoxStyleRightPadding6}"
                                                  SelectedIndex="{Binding SubtitleLanguageIndex, Mode=TwoWay, FallbackValue=-1}"
                                                  IsEnabled="{Binding SubtitleLanguageList.Count, Converter={StaticResource NumberToBoolConverter}, ConverterParameter=1}">
                                        </ComboBox>-->
                                        <Button x:Name="SubtitleLanguages"
                                                Foreground="{ThemeResource ComboBoxForegroundThemeBrush}"
                                                BorderBrush="{ThemeResource ComboBoxBorderThemeBrush}" BorderThickness="{ThemeResource ComboBoxBorderThemeThickness}" 
                                                Background="{ThemeResource ComboBoxBackgroundThemeBrush}" FontWeight="Normal" FontSize="{ThemeResource ContentControlFontSize}" 
                                                MinHeight="{ThemeResource ComboBoxItemMinHeightThemeSize}" 
                                                HorizontalAlignment="Left" HorizontalContentAlignment="Left" 
                                                Padding="6.5,0,0,0"
                                                MaxWidth="400"
                                                IsEnabled="{Binding SubtitleLanguageList.Count, Converter={StaticResource NumberToBoolConverter}, ConverterParameter=1}"
                                                Margin="6,6,6,0" Grid.Column="1">
                                            <Button.Flyout>
                                                <ListPickerFlyout ItemsSource="{Binding SubtitleLanguageList}" 
                                                                  DisplayMemberPath="Name" 
                                                                  SelectedValuePath="Key" 
                                                                  SelectedValue="{Binding CurrentSubtitleLanguageCode, Mode=TwoWay}" >
                                                </ListPickerFlyout>
                                            </Button.Flyout>
                                            <ContentPresenter Margin="0,2.5,6,0" MinHeight="31">
                                                <TextBlock Margin="0,-1.5,6,0" 
                                                           Foreground="{ThemeResource ComboBoxForegroundThemeBrush}"
                                                           Text="{Binding CurrentSubtitleLanguageName}"/>
                                            </ContentPresenter>
                                        </Button>
                                        <!--<ComboBox Name="SubtitleEncodings" 
                                                  Margin="6,6,6,0" 
                                                  Grid.Column="2" 
                                                  HorizontalAlignment="Left" 
                                                  VerticalAlignment="Center"
                                                  DisplayMemberPath="Name" 
                                                  SelectedValuePath="Key"
                                                  IsEnabled="{Binding IsExternalSubtitle}"
                                                  ItemsSource="{Binding SubtitleEncodingList}" 
                                                  Style="{StaticResource ComboBoxStyleRightPadding6}"
                                                  SelectedValue="{Binding CurrentCodePage, Mode=TwoWay}">
                                        </ComboBox>-->
                                        <Button x:Name="SubtitleEncodings"
                                                Foreground="{ThemeResource ComboBoxForegroundThemeBrush}"
                                                BorderBrush="{ThemeResource ComboBoxBorderThemeBrush}" BorderThickness="{ThemeResource ComboBoxBorderThemeThickness}" 
                                                Background="{ThemeResource ComboBoxBackgroundThemeBrush}" FontWeight="Normal" FontSize="{ThemeResource ContentControlFontSize}" 
                                                MinHeight="{ThemeResource ComboBoxItemMinHeightThemeSize}" 
                                                HorizontalAlignment="Left" HorizontalContentAlignment="Left" 
                                                Padding="6.5,0,0,0"
                                                IsEnabled="{Binding IsExternalSubtitle}"
                                                Margin="6,6,6,0" Grid.Column="2">
                                            <Button.Flyout>
                                                <ListPickerFlyout ItemsSource="{Binding SubtitleEncodingList}" 
                                                                  DisplayMemberPath="Name" 
                                                                  SelectedValuePath="Key" 
                                                                  SelectedValue="{Binding CurrentCodePage, Mode=TwoWay}" >
                                                </ListPickerFlyout>
                                            </Button.Flyout>
                                            <ContentPresenter Margin="0,2.5,6,0" MinHeight="31">
                                                <TextBlock Margin="0,-1.5,6,0" 
                                                           Foreground="{ThemeResource ComboBoxForegroundThemeBrush}"
                                                           Text="{Binding CurrentCodePageName}"/>
                                            </ContentPresenter>
                                        </Button>
                                    </Grid>
                                    <Grid Margin="0,-6,0,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <ToggleButton x:Name="SubtitleOn" x:Uid="SubtitleOnOff" BorderThickness="0" Margin="-6,-6,0,-12" Tag="[SUBTITLE]" 
                                                      IsChecked="{Binding IsSubtitleOn, Mode=TwoWay}">
                                            <ToggleButton.Style>
                                                <Style TargetType="ToggleButton">
                                                    <Setter Property="Background" Value="Transparent"/>
                                                    <Setter Property="Tag" Value="{Binding Tag}" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate>
                                                                <Grid Background="Transparent">
                                                                    <VisualStateManager.VisualStateGroups>
                                                                        <VisualStateGroup x:Name="CommonStates">
                                                                            <VisualState x:Name="Normal" />
                                                                            <VisualState x:Name="Checked">
                                                                                <Storyboard>
                                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Icon">
                                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PhoneAccentBrush}"/>
                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Label">
                                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PhoneAccentBrush}"/>
                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="State">
                                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PhoneAccentBrush}"/>
                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Text" Storyboard.TargetName="State">
                                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="ON"/>
                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </VisualState>
                                                                            <VisualState x:Name="UnChecked" />
                                                                        </VisualStateGroup>
                                                                    </VisualStateManager.VisualStateGroups>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="Auto" />
                                                                        <ColumnDefinition Width="Auto" />
                                                                        <ColumnDefinition Width="*" />
                                                                    </Grid.ColumnDefinitions>
                                                                    <SymbolIcon x:Name="Icon" Symbol="ClosedCaption" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Center" >
                                                                        <SymbolIcon.RenderTransform>
                                                                            <CompositeTransform ScaleX="0.8" ScaleY="0.8"/>
                                                                        </SymbolIcon.RenderTransform>
                                                                    </SymbolIcon>
                                                                    <TextBlock x:Name="Label" Grid.Column="1" VerticalAlignment="Center" Margin="6,0,0,0" FontSize="{StaticResource FlyoutHeaderTextSizeSmall}" Text="{TemplateBinding Tag}"  />
                                                                    <TextBlock x:Name="State" Grid.Column="2" VerticalAlignment="Center" Margin="3,0,0,0" FontSize="{StaticResource FlyoutHeaderTextSizeSmall}" Text="OFF"></TextBlock>
                                                                </Grid>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </ToggleButton.Style>
                                        </ToggleButton>
                                        <Button x:Name="SubtitleSettings" Grid.Column="1"
                                            HorizontalAlignment="Right"
                                            Margin="0,0,0,0" BorderThickness="0">
                                            <Button.Style>
                                                <Style TargetType="Button">
                                                    <Setter Property="MinWidth" Value="0"/>
                                                    <Setter Property="MinHeight" Value="0" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate>
                                                                <StackPanel Orientation="Horizontal" Background="Transparent" x:Name="Grid">
                                                                    <VisualStateManager.VisualStateGroups>
                                                                        <VisualStateGroup x:Name="CommonStates">
                                                                            <VisualStateGroup.Transitions>
                                                                                <VisualTransition From="Pressed" To="PointerOver">
                                                                                    <Storyboard>
                                                                                        <PointerUpThemeAnimation Storyboard.TargetName="Grid" />
                                                                                    </Storyboard>
                                                                                </VisualTransition>
                                                                                <VisualTransition From="PointerOver" To="Normal">
                                                                                    <Storyboard>
                                                                                        <PointerUpThemeAnimation Storyboard.TargetName="Grid" />
                                                                                    </Storyboard>
                                                                                </VisualTransition>
                                                                                <VisualTransition From="Pressed" To="Normal">
                                                                                    <Storyboard>
                                                                                        <PointerUpThemeAnimation Storyboard.TargetName="Grid" />
                                                                                    </Storyboard>
                                                                                </VisualTransition>
                                                                            </VisualStateGroup.Transitions>
                                                                            <VisualState x:Name="Normal" />
                                                                            <VisualState x:Name="PointerOver" />
                                                                            <VisualState x:Name="Pressed">
                                                                                <Storyboard>
                                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Icon">
                                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PhoneAccentBrush}"/>
                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Text">
                                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PhoneAccentBrush}"/>
                                                                                    </ObjectAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </VisualState>
                                                                        </VisualStateGroup>
                                                                    </VisualStateManager.VisualStateGroups>
                                                                    <SymbolIcon x:Name="Icon" Symbol="Setting" />
                                                                    <TextBlock x:Name="Text" x:Uid="Settings/Subtitle" Text="[settings]" VerticalAlignment="Center" Margin="6,0,0,3" FontSize="{StaticResource FlyoutHeaderTextSizeSmall}" />
                                                                </StackPanel>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Button.Style>
                                            <i:Interaction.Behaviors>
                                                <ic:EventTriggerBehavior EventName="Tapped">
                                                    <ic:InvokeCommandAction Command="{Binding SubtitleSettingsTappedCommand}" />
                                                </ic:EventTriggerBehavior>
                                            </i:Interaction.Behaviors>
                                        </Button>
                                    </Grid>
                                </StackPanel>
                            </common:CCPFlyout>
                        </Button.Flyout>
                    </Button>
                    <Button Name="SubtitleMove" 
                            IsEnabled="{Binding SubtitleLanguageList.Count, Converter={StaticResource NumberToBoolConverter}, ConverterParameter=0}"
                            Style="{StaticResource MediaPlayerButtonStyleRect}" >
                        <Grid>
                            <SymbolIcon Symbol="ClosedCaption" RenderTransformOrigin="0.5,0.5">
                                <SymbolIcon.RenderTransform>
                                    <CompositeTransform ScaleX="0.6" ScaleY="0.6" TranslateX="-8" TranslateY="-12" />
                                </SymbolIcon.RenderTransform>
                            </SymbolIcon>
                            <SymbolIcon Symbol="Sort" RenderTransformOrigin="0.5,0.5">
                                <SymbolIcon.RenderTransform>
                                    <CompositeTransform ScaleX="1" ScaleY="1" TranslateY="2" />
                                </SymbolIcon.RenderTransform>
                            </SymbolIcon>
                        </Grid>
                        <i:Interaction.Behaviors>
                            <ic:EventTriggerBehavior EventName="Tapped">
                                <ic:InvokeCommandAction Command="{Binding SubtitleMoveTappedCommand}"/>
                            </ic:EventTriggerBehavior>
                        </i:Interaction.Behaviors>
                    </Button>
                </StackPanel>
                <GridView HorizontalAlignment="Right" Grid.Column="1" Margin="0,0,6,0">
                    <GridView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapGrid Orientation="Horizontal" MaximumRowsOrColumns="{Binding Width, ElementName=TransportControlPanel, Converter={StaticResource WrapGridMaximumRowsOrColumnsConverter}, ConverterParameter={StaticResource RectangleButtonMinWidth}, ConverterLanguage=3_6}"/>
                        </ItemsPanelTemplate>
                    </GridView.ItemsPanel>
                    <Button Name="AudioSelect" Style="{StaticResource MediaPlayerButtonStyleRect}">
                        <SymbolIcon Symbol="Volume" />
                        <Button.Flyout>
                            <common:CCPFlyout Placement="Full" FlyoutPresenterStyle="{StaticResource ButtonMenuFlyoutPresenterStyle}">
                                <i:Interaction.Behaviors>
                                    <ic:EventTriggerBehavior EventName="FlyoutOpened">
                                        <ic:InvokeCommandAction Command="{Binding FlyoutOpenedCommand}" />
                                    </ic:EventTriggerBehavior>
                                    <ic:EventTriggerBehavior EventName="FlyoutClosed">
                                        <ic:InvokeCommandAction Command="{Binding FlyoutClosedCommand}" />
                                    </ic:EventTriggerBehavior>
                                    <ic:DataTriggerBehavior Binding="{Binding IsFlyoutClosed}" ComparisonCondition="Equal" Value="True">
                                        <common:CloseFlyoutAction />
                                    </ic:DataTriggerBehavior>
                                </i:Interaction.Behaviors>
                                <StackPanel Margin="18,6">
                                    <Grid Margin="0,-6,0,-3">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" VerticalAlignment="Bottom" FontSize="{StaticResource FlyoutHeaderTextSizeLarge}" 
                                                Text="{Binding Value, ElementName=VolumeSlider}"/>
                                        <TextBlock Grid.Column="1" VerticalAlignment="Bottom" Margin="-2,0,0,4" FontSize="{StaticResource FlyoutHeaderTextSizeMedium}">
                                            <Run Foreground="{ThemeResource TextBoxDisabledBorderThemeBrush}">/20</Run>
                                            <Run Text=" " />
                                            <Run Foreground="{StaticResource FlyoutHeaderTextBrush}" x:Uid="AudioVolume">[Media Volume]</Run>
                                        </TextBlock>
                                    </Grid>
                                    <Grid >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <ToggleButton x:Name="MuteButton"
                                                      Style="{StaticResource FlyoutHeaderIconToggleButtonStyle}"
                                                      Grid.Column="0" Grid.Row="1" 
                                                      VerticalAlignment="Top" HorizontalAlignment="Left"
                                                      IsChecked="False"
                                                      Margin="-5,3,0,0" 
                                                      Width="42" Height="42">
                                            <i:Interaction.Behaviors>
                                                <ic:DataTriggerBehavior ComparisonCondition="Equal" Binding="{Binding IsChecked, ElementName=MuteButton}" Value="True" >
                                                    <ic:ChangePropertyAction PropertyName="Tag" Value="{Binding Value, ElementName=VolumeSlider}" TargetObject="{Binding ElementName=VolumeSlider}" />
                                                    <ic:ChangePropertyAction PropertyName="Value" Value="0" TargetObject="{Binding ElementName=VolumeSlider}" />
                                                </ic:DataTriggerBehavior>
                                                <ic:DataTriggerBehavior ComparisonCondition="Equal" Binding="{Binding IsChecked, ElementName=MuteButton}" Value="False" >
                                                    <ic:ChangePropertyAction PropertyName="Value" Value="{Binding Tag, ElementName=VolumeSlider}" TargetObject="{Binding ElementName=VolumeSlider}" />
                                                    <ic:ChangePropertyAction PropertyName="Tag" Value="0" TargetObject="{Binding ElementName=VolumeSlider}" />
                                                </ic:DataTriggerBehavior>
                                            </i:Interaction.Behaviors>
                                            <ToggleButton.Content>
                                                <Grid>
                                                    <Image x:Name="AudioVolumeMin" Visibility="Collapsed"
                                                           Source="{Binding Source={StaticResource ImageUriSoundMute}, Converter={StaticResource ThemePathConverter}, ConverterParameter={StaticResource ImageUriBasePath}}" />
                                                    <Image x:Name="AudioVolumeLow"  Visibility="Collapsed"
                                                           Source="{Binding Source={StaticResource ImageUriSound0}, Converter={StaticResource ThemePathConverter}, ConverterParameter={StaticResource ImageUriBasePath}}" />
                                                    <Image x:Name="AudioVolumeMedium" Visibility="Collapsed"
                                                           Source="{Binding Source={StaticResource ImageUriSound1}, Converter={StaticResource ThemePathConverter}, ConverterParameter={StaticResource ImageUriBasePath}}" />
                                                    <Image x:Name="AudioVolumeHigh" Visibility="Collapsed"
                                                           Source="{Binding Source={StaticResource ImageUriSound2}, Converter={StaticResource ThemePathConverter}, ConverterParameter={StaticResource ImageUriBasePath}}" />
                                                    <Image x:Name="AudioVolumeMax" Visibility="Collapsed"
                                                           Source="{Binding Source={StaticResource ImageUriSound3}, Converter={StaticResource ThemePathConverter}, ConverterParameter={StaticResource ImageUriBasePath}}" />
                                                </Grid>
                                            </ToggleButton.Content>
                                        </ToggleButton>
                                        <Slider x:Name="VolumeSlider" Grid.Column="1" Margin="6,0" Style="{StaticResource FlyoutSliderStyle}"
                                                Value="{Binding Volume, Mode=TwoWay, FallbackValue=1}"
                                                Tag="{Binding Volume, Mode=OneTime, FallbackValue=1}"
                                                Minimum="0" Maximum="20" StepFrequency="1">
                                        </Slider>
                                    </Grid>
                                    <Grid Margin="0,6,0,0" >
                                        <TextBlock VerticalAlignment="Bottom" Margin="0,0,0,0" FontSize="{StaticResource FlyoutHeaderTextSizeMedium}">
                                            <Run Foreground="{StaticResource FlyoutHeaderTextBrush}" x:Uid="AudioBalance">[Left / Right Balance]</Run>
                                        </TextBlock>
                                    </Grid>
                                    <Grid >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Image Source="{Binding Source={StaticResource ImageUriSoundLeftRight}, Converter={StaticResource ThemePathConverter}, ConverterParameter={StaticResource ImageUriBasePath}}"  
                                               Grid.Row="1" Grid.Column="0" Width="42" Height="42" Margin="-7,3,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" />
                                        <Slider x:Name="BalanceSlider" Margin="6,0" Grid.Column="1" Minimum="-1" Maximum="1" Style="{StaticResource FlyoutSliderStyle}"
                                            Value="{Binding Balance, Mode=TwoWay}" StepFrequency="0.2" TickFrequency="0.2" TickPlacement="Inline" />
                                    </Grid>
                                    <TextBlock Grid.ColumnSpan="2" VerticalAlignment="Bottom" Margin="0,6,0,0" FontSize="{StaticResource FlyoutHeaderTextSizeMedium}">
                                        <Run Foreground="{StaticResource FlyoutHeaderTextBrush}" x:Uid="AudioLanguage">[Audio Language]</Run>
                                    </TextBlock>
                                    <Grid >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Image Source="{Binding Source={StaticResource ImageUriGlobeWire}, Converter={StaticResource ThemePathConverter}, ConverterParameter={StaticResource ImageUriBasePath}}"  
                                            Grid.Column="0" Width="42" Height="42" Margin="-7,3,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" />
                                        <ComboBox Name="AudioLanguages" Margin="12,6,0,0" Grid.Column="1" HorizontalAlignment="Left" 
                                                  DisplayMemberPath="Name"
                                                  SelectedValuePath="Key" 
                                                  Style="{StaticResource ComboBoxStyleRightPadding6}"
                                                  ItemsSource="{Binding AudioLanguageList}" 
                                                  IsEnabled="{Binding AudioLanguageList.Count, Converter={StaticResource NumberToBoolConverter}, ConverterParameter=1}"
                                                  SelectedItem="{Binding SelectedAudioLanguage, Mode=TwoWay}">
                                        </ComboBox>
                                    </Grid>
                                </StackPanel>
                            </common:CCPFlyout>
                        </Button.Flyout>
                    </Button>
                    <Button Name="PlaybackRate" 
                            Style="{StaticResource MediaPlayerButtonStyleRect}" >
                        <ContentControl>
                            <Grid>
                                <TextBlock Text="{Binding Value, ElementName=PlaybackRateSlider, Converter={StaticResource StringFormatConverter}, ConverterParameter=\{0:F1\}X}"
                                   FontSize="{StaticResource TextStyleMediumFontSize}">
                                </TextBlock>
                            </Grid>
                        </ContentControl>
                        <Button.Flyout>
                            <common:CCPFlyout Placement="Full" FlyoutPresenterStyle="{StaticResource ButtonMenuFlyoutPresenterStyle}">
                                <i:Interaction.Behaviors>
                                    <ic:EventTriggerBehavior EventName="FlyoutOpened">
                                        <ic:InvokeCommandAction Command="{Binding FlyoutOpenedCommand}" />
                                    </ic:EventTriggerBehavior>
                                    <ic:EventTriggerBehavior EventName="FlyoutClosed">
                                        <ic:InvokeCommandAction Command="{Binding FlyoutClosedCommand}" />
                                    </ic:EventTriggerBehavior>
                                    <ic:DataTriggerBehavior Binding="{Binding IsFlyoutClosed}" ComparisonCondition="Equal" Value="True">
                                        <common:CloseFlyoutAction />
                                    </ic:DataTriggerBehavior>
                                </i:Interaction.Behaviors>
                                <StackPanel Margin="18,6">
                                    <Grid Margin="0,-6,0,-3" >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" VerticalAlignment="Bottom" FontSize="{StaticResource FlyoutHeaderTextSizeLarge}" 
                                                   Text="{Binding Value, ElementName=PlaybackRateSlider}"/>
                                        <TextBlock Grid.Column="1" VerticalAlignment="Bottom" Margin="-2,0,0,4" FontSize="{StaticResource FlyoutHeaderTextSizeMedium}">
                                        <Run Foreground="{ThemeResource TextBoxDisabledBorderThemeBrush}">/4</Run>
                                        <Run Text=" " />
                                        <Run Foreground="{StaticResource FlyoutHeaderTextBrush}" x:Uid="PlaybackRate">[Playback rate]</Run>
                                        </TextBlock>
                                    </Grid>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Image Source="{Binding Source={StaticResource ImageUriTimerPlay}, Converter={StaticResource ThemePathConverter}, ConverterParameter={StaticResource ImageUriBasePath}}" 
                                               Grid.Row="1" Grid.Column="0" Width="40" Height="40" Margin="-7,3,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" />
                                        <Slider x:Name="PlaybackRateSlider" Grid.Column="1" Minimum="0.5" Maximum="4" Margin="6,0" Style="{StaticResource FlyoutSliderStyle}"
                                                Value="{Binding PlaybackRate, Mode=TwoWay, FallbackValue=1}" StepFrequency="0.1" TickPlacement="Inline" TickFrequency="0.5" />
                                    </Grid>
                                </StackPanel>
                            </common:CCPFlyout>
                        </Button.Flyout>
                    </Button>
                    <Button Name="DecoderType"
                            IsEnabled="{Binding EnableDecoderType}"
                            Style="{StaticResource MediaPlayerButtonStyleRect}">
                        <Grid>
                            <TextBlock Text="{Binding DecoderType, Converter={StaticResource EnumToStringConverter}}"
                                       FontSize="{StaticResource TextStyleMediumFontSize}"
                                       FontWeight="Bold"
                                       RenderTransformOrigin="0.5,0.5">
                                <TextBlock.RenderTransform>
                                    <CompositeTransform ScaleX="0.85" ScaleY="0.85" TranslateX="-4" TranslateY="-5" />
                                </TextBlock.RenderTransform>
                            </TextBlock>
                            <FontIcon FontFamily="Segoe UI Symbol" Glyph="&#xE13C;" RenderTransformOrigin="0.5,0.5">
                                <FontIcon.RenderTransform>
                                    <CompositeTransform ScaleX="0.4" ScaleY="0.4" TranslateX="-6" TranslateY="9" />
                                </FontIcon.RenderTransform>
                            </FontIcon>
                            <TextBlock Text="{Binding DecoderType2, Converter={StaticResource EnumToStringConverter}, Mode=OneWay}"
                                       FontSize="{StaticResource TextStyleMediumFontSize}" RenderTransformOrigin="0.5,0.5">
                                <TextBlock.RenderTransform>
                                    <CompositeTransform ScaleX="0.6" ScaleY="0.6" TranslateX="8" TranslateY="10" />
                                </TextBlock.RenderTransform>
                            </TextBlock>
                        </Grid>
                        <i:Interaction.Behaviors>
                            <ic:EventTriggerBehavior EventName="Tapped">
                                <ic:InvokeCommandAction Command="{Binding DecoderTypeTappedCommand}"/>
                            </ic:EventTriggerBehavior>
                        </i:Interaction.Behaviors>
                    </Button>
                    <Button x:Name="Stretch"
                            Visibility="Visible"
                            Style="{StaticResource MediaPlayerButtonStyleRect}" >
                        <ContentControl>
                            <Grid>
                                <TextBlock Text="&#128261;" FontFamily="Segoe UI Symbol" RenderTransformOrigin="0.5,0.5">
                                    <TextBlock.RenderTransform>
                                        <CompositeTransform ScaleX="1" ScaleY="1" TranslateX="-5" TranslateY="-10" />
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                                <SymbolIcon x:Name="StretchSymbol" Symbol="FullScreen" RenderTransformOrigin="0.5,0.5">
                                    <SymbolIcon.RenderTransform>
                                        <CompositeTransform ScaleX="0.65" ScaleY="0.65" TranslateX="8" TranslateY="6" />
                                    </SymbolIcon.RenderTransform>
                                </SymbolIcon>
                            </Grid>
                        </ContentControl>
                        <Button.Flyout>
                            <common:CCPFlyout Placement="Full" FlyoutPresenterStyle="{StaticResource ButtonMenuFlyoutPresenterStyle}">
                                <i:Interaction.Behaviors>
                                    <ic:EventTriggerBehavior EventName="FlyoutOpened">
                                        <ic:InvokeCommandAction Command="{Binding FlyoutOpenedCommand}" />
                                    </ic:EventTriggerBehavior>
                                    <ic:EventTriggerBehavior EventName="FlyoutClosed">
                                        <ic:InvokeCommandAction Command="{Binding FlyoutClosedCommand}" />
                                    </ic:EventTriggerBehavior>
                                    <ic:DataTriggerBehavior Binding="{Binding IsFlyoutClosed}" ComparisonCondition="Equal" Value="True">
                                        <common:CloseFlyoutAction />
                                    </ic:DataTriggerBehavior>
                                </i:Interaction.Behaviors>
                                <StackPanel Margin="18,6">
                                    <Grid Margin="0,-6,0,-3" >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" VerticalAlignment="Bottom" FontSize="{StaticResource FlyoutHeaderTextSizeLarge}" 
                                                   Text="{Binding Value, ElementName=BrightnessSlider}"/>
                                        <TextBlock Grid.Column="1" VerticalAlignment="Bottom" Margin="0,0,0,4" FontSize="{StaticResource FlyoutHeaderTextSizeMedium}">
                                            <Run Text=" " />
                                            <Run Foreground="{ThemeResource TextBoxDisabledBorderThemeBrush}" x:Uid="BrightnessUnit">[%]</Run>
                                            <Run Text=" " />
                                            <Run Foreground="{StaticResource FlyoutHeaderTextBrush}" x:Uid="Brightness">[Brightness]</Run>
                                        </TextBlock>
                                    </Grid>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="&#128261;" FontSize="28" Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" 
                                                   Margin="0,-10,8,0" FontFamily="Segoe UI Symbol" RenderTransformOrigin="0.5,0.5">
                                            <TextBlock.RenderTransform>
                                                <CompositeTransform ScaleX="1.1" ScaleY="1.1" TranslateY="-1.5"/>
                                            </TextBlock.RenderTransform>
                                        </TextBlock>
                                        <Slider x:Name="BrightnessSlider" Grid.Column="1" Minimum="20" Maximum="100" 
                                                Value="{Binding Settings.General.DisplayBrightness, FallbackValue=100, Mode=TwoWay}" 
                                                StepFrequency="1" Margin="6,0" Style="{StaticResource FlyoutSliderStyle}"  TickPlacement="Inline" TickFrequency="10" />
                                    </Grid>
                                    <TextBlock Grid.ColumnSpan="2" 
                                               VerticalAlignment="Bottom" 
                                               Margin="0,6,0,0" 
                                               FontSize="{StaticResource FlyoutHeaderTextSizeMedium}">
                                        <Run Foreground="{ThemeResource TextBoxDisabledBorderThemeBrush}" x:Uid="AspectRatio" >[Aspect Ratio]</Run>
                                    </TextBlock>
                                    <Grid >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <SymbolIcon Symbol="FullScreen"
                                                    Width="32" Height="32" 
                                                    Grid.Column="0"  VerticalAlignment="Center" HorizontalAlignment="Center"
                                                    RenderTransformOrigin="0.5,0.5">
                                            <SymbolIcon.RenderTransform>
                                                <CompositeTransform ScaleX="1" ScaleY="1" TranslateX="0" TranslateY="2" />
                                            </SymbolIcon.RenderTransform>
                                        </SymbolIcon>
                                        <!--<ComboBox Name="AspectRatios" Margin="12,6,0,0" Grid.Column="1" HorizontalAlignment="Left" 
                                                  DisplayMemberPath="Name"
                                                  SelectedValuePath="Key" 
                                                  Style="{StaticResource ComboBoxStyleRightPadding6}"
                                                  ItemsSource="{Binding AspectRatioList}" 
                                                  IsEnabled="{Binding AspectRatioList.Count, Converter={StaticResource NumberToBoolConverter}, ConverterParameter=1}"
                                                  SelectedItem="{Binding SelectedAspectRatio, Mode=TwoWay}">
                                        </ComboBox>-->
                                        <Button x:Name="AspectRatios"
                                                Foreground="{ThemeResource ComboBoxForegroundThemeBrush}"
                                                BorderBrush="{ThemeResource ComboBoxBorderThemeBrush}" BorderThickness="{ThemeResource ComboBoxBorderThemeThickness}" 
                                                Background="{ThemeResource ComboBoxBackgroundThemeBrush}" FontWeight="Normal" FontSize="{ThemeResource ContentControlFontSize}" 
                                                HorizontalAlignment="Left" HorizontalContentAlignment="Left" MinHeight="{ThemeResource ComboBoxItemMinHeightThemeSize}" 
                                                Margin="12,6,0,0" Padding="6.5,0,0,0" Grid.Column="1">
                                            <Button.Flyout>
                                                <ListPickerFlyout DisplayMemberPath="Name" 
                                                                  SelectedValuePath="Key" 
                                                                  ItemsSource="{Binding AspectRatioList}" 
                                                                  SelectedItem="{Binding SelectedAspectRatio, Mode=TwoWay}" >
                                                </ListPickerFlyout>
                                            </Button.Flyout>
                                            <ContentPresenter Margin="0,2.5,6,0" MinHeight="31">
                                                <TextBlock Margin="0,-1.5,6,0" 
                                                           Foreground="{ThemeResource ComboBoxForegroundThemeBrush}"
                                                           Text="{Binding SelectedAspectRatio.Name}"/>
                                            </ContentPresenter>
                                        </Button>
                                    </Grid>
                                </StackPanel>
                            </common:CCPFlyout>
                        </Button.Flyout>
                    </Button>
                    <Button x:Name="RotationLock"
                            Visibility="Visible"
                            IsEnabled="{Binding SupportedRotationLock}"
                            Style="{StaticResource MediaPlayerButtonStyleRect}" >
                        <i:Interaction.Behaviors>
                            <ic:EventTriggerBehavior EventName="Tapped">
                                <ic:InvokeCommandAction Command="{Binding RotationLockTappedCommand}"/>
                            </ic:EventTriggerBehavior>
                            <ic:DataTriggerBehavior ComparisonCondition="Equal" Value="True" Binding="{Binding Settings.Playback.IsRotationLock}">
                                <ic:ChangePropertyAction PropertyName="Glyph" Value="&#xE1F7;" TargetObject="{Binding ElementName=RotationLockFontIcon}" />
                            </ic:DataTriggerBehavior>
                            <ic:DataTriggerBehavior ComparisonCondition="Equal" Value="False" Binding="{Binding Settings.Playback.IsRotationLock}">
                                <ic:ChangePropertyAction PropertyName="Glyph" Value="&#xE1F6;" TargetObject="{Binding ElementName=RotationLockFontIcon}" />
                            </ic:DataTriggerBehavior>
                        </i:Interaction.Behaviors>
                        <Grid>
                            <FontIcon FontFamily="Segoe UI Symbol" Glyph="&#xE14F;" RenderTransformOrigin="0.5,0.5">
                                <FontIcon.RenderTransform>
                                    <CompositeTransform ScaleX="0.9" ScaleY="0.9" TranslateX="4" TranslateY="2" />
                                </FontIcon.RenderTransform>
                            </FontIcon>
                            <FontIcon x:Name="RotationLockFontIcon" FontFamily="Segoe UI Symbol" Glyph="&#xE1F6;" RenderTransformOrigin="0.5,0.5">
                                <FontIcon.RenderTransform>
                                    <CompositeTransform ScaleX="0.5" ScaleY="0.5" TranslateX="-11" TranslateY="-11" />
                                </FontIcon.RenderTransform>
                            </FontIcon>
                        </Grid>
                    </Button>
                    <Button x:Name="Lock"
                            Visibility="Visible"
                            Style="{StaticResource MediaPlayerButtonStyleRect}" >
                        <i:Interaction.Behaviors>
                            <ic:EventTriggerBehavior EventName="Tapped">
                                <ic:InvokeCommandAction Command="{Binding LockTappedCommand}"/>
                            </ic:EventTriggerBehavior>
                        </i:Interaction.Behaviors>
                        <FontIcon FontFamily="Segoe UI Symbol" Glyph="&#xE1F6;"/>
                    </Button>
                </GridView>
            </Grid>
            <Grid Name="ControlTimes" Margin="0,-6,0,0" Grid.Row="1" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Button Name="PlayPuase2" 
                    Width="36" Height="36"
                    Margin="6,0,12,0" 
                    BorderThickness="1.4"
                    Visibility="Collapsed"
                    Background="Transparent"
                    Style="{StaticResource MediaPlayerButtonStyle}" >
                    <SymbolIcon Symbol="Play" />
                </Button>
                <TextBlock Name="TimeText" Text="{Binding Value, ElementName=Timeline, Converter={StaticResource TimeConverter}}" 
                        Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="12,0"
                        FontSize="{StaticResource TextStyleMediumFontSize}" />
                <Slider Name="Timeline" Grid.Column="1" VerticalAlignment="Center" Margin="0,0,0,0" Style="{StaticResource TimelineSliderStyle}"
                        Value="{Binding CurrentTime, Mode=TwoWay}"
                        StepFrequency="{Binding TimelineStepFrequency}"
                        Maximum="{Binding MediaInfo.RunningTime}"
                        ManipulationMode="TranslateX,TranslateRailsX">
                    <i:Interaction.Behaviors>
                        <ic:EventTriggerBehavior EventName="ManipulationDelta">
                            <ic:GoToStateAction StateName="None"/>
                            <ic:GoToStateAction StateName="VisibleControlPanel"/>
                        </ic:EventTriggerBehavior>
                        <ic:EventTriggerBehavior EventName="ManipulationCompleted">
                            <ic:GoToStateAction StateName="Released" />
                        </ic:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                </Slider>
                <StackPanel Margin="6,0,6,0" Orientation="Horizontal" Grid.Column="2">
                    <TextBlock Name="LeftTimeText" Text="{Binding LeftTime, Converter={StaticResource TimeConverter}}" 
                               Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="12,0"
                               FontSize="{StaticResource TextStyleMediumFontSize}" />
                    <!-- 상황봐서 삭제 -->
                    <Button Name="FullWindow"
                        Visibility="Collapsed"
                        Style="{StaticResource MediaPlayerButtonStyleRect}" >
                        <SymbolIcon Symbol="FullScreen" />
                    </Button>
                    <Button Name="FullWindow2" 
                        Width="36" Height="36"
                        Margin="0,0,6,0"
                        BorderThickness="1.4"
                        Visibility="Collapsed"
                        Background="Transparent"
                        Style="{StaticResource MediaPlayerButtonStyle}" >
                        <SymbolIcon Symbol="FullScreen" RenderTransformOrigin="0.5,0.5" >
                            <SymbolIcon.RenderTransform>
                                <CompositeTransform ScaleX="0.8" ScaleY="0.8"/>
                            </SymbolIcon.RenderTransform>
                        </SymbolIcon>
                    </Button>
                </StackPanel>
            </Grid>
        </Grid>
    </Grid>
</UserControl>